{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"OpenMMLab \u200b\u5b98\u7f51\u200b <sup> HOT </sup> OpenMMLab \u200b\u5f00\u653e\u5e73\u53f0\u200b <sup> TRY IT OUT </sup>   [![PyPI](https://img.shields.io/pypi/v/mmdet)](https://pypi.org/project/mmdet) [![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmdetection.readthedocs.io/en/latest/) [![badge](https://github.com/open-mmlab/mmdetection/workflows/build/badge.svg)](https://github.com/open-mmlab/mmdetection/actions) [![codecov](https://codecov.io/gh/open-mmlab/mmdetection/branch/main/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmdetection) [![license](https://img.shields.io/github/license/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/blob/main/LICENSE) [![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues) [![issue resolution](https://isitmaintained.com/badge/resolution/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues) [![Open in OpenXLab](https://cdn-static.openxlab.org.cn/app-center/openxlab_demo.svg)](https://openxlab.org.cn/apps?search=mmdet)  [\ud83d\udcd8\u200b\u4f7f\u7528\u200b\u6587\u6863\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/) | [\ud83d\udee0\ufe0f\u200b\u5b89\u88c5\u200b\u6559\u7a0b\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html) | [\ud83d\udc40\u200b\u6a21\u578b\u5e93\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/model_zoo.html) | [\ud83c\udd95\u200b\u66f4\u65b0\u200b\u65e5\u5fd7\u200b](https://mmdetection.readthedocs.io/en/latest/notes/changelog.html) | [\ud83d\ude80\u200b\u8fdb\u884c\u200b\u4e2d\u200b\u7684\u200b\u9879\u76ee\u200b](https://github.com/open-mmlab/mmdetection/projects) | [\ud83e\udd14\u200b\u62a5\u544a\u200b\u95ee\u9898\u200b](https://github.com/open-mmlab/mmdetection/issues/new/choose)     [English](README.md) | \u200b\u7b80\u4f53\u4e2d\u6587"},{"location":"#_1","title":"\u7b80\u4ecb","text":"<p>MMDetection \u200b\u662f\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200b PyTorch \u200b\u7684\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5f00\u6e90\u200b\u5de5\u5177\u7bb1\u200b\u3002\u200b\u5b83\u200b\u662f\u200b OpenMMLab \u200b\u9879\u76ee\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002</p> <p>\u200b\u4e3b\u200b\u5206\u652f\u200b\u4ee3\u7801\u200b\u76ee\u524d\u200b\u652f\u6301\u200b PyTorch 1.8 \u200b\u53ca\u5176\u200b\u4ee5\u4e0a\u200b\u7684\u200b\u7248\u672c\u200b\u3002</p> <p></p> \u200b\u4e3b\u8981\u200b\u7279\u6027\u200b  - **\u200b\u6a21\u5757\u5316\u200b\u8bbe\u8ba1\u200b**    MMDetection \u200b\u5c06\u200b\u68c0\u6d4b\u200b\u6846\u67b6\u200b\u89e3\u200b\u8026\u6210\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u5757\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u901a\u8fc7\u200b\u7ec4\u5408\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u5757\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4fbf\u6377\u200b\u5730\u200b\u6784\u5efa\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b  - **\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b**    MMDetection \u200b\u652f\u6301\u200b\u4e86\u200b\u5404\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5305\u62ec\u200b**\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b**\uff0c**\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b**\uff0c**\u200b\u5168\u666f\u200b\u5206\u5272\u200b**\uff0c\u200b\u4ee5\u53ca\u200b**\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b**\u3002  - **\u200b\u901f\u5ea6\u200b\u5feb\u200b**    \u200b\u57fa\u672c\u200b\u7684\u200b\u6846\u200b\u548c\u200b mask \u200b\u64cd\u4f5c\u200b\u90fd\u200b\u5b9e\u73b0\u200b\u4e86\u200b GPU \u200b\u7248\u672c\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u6bd4\u200b\u5176\u4ed6\u200b\u4ee3\u7801\u200b\u5e93\u200b\u66f4\u200b\u5feb\u200b\u6216\u8005\u200b\u76f8\u5f53\u200b\uff0c\u200b\u5305\u62ec\u200b [Detectron2](https://github.com/facebookresearch/detectron2), [maskrcnn-benchmark](https://github.com/facebookresearch/maskrcnn-benchmark) \u200b\u548c\u200b [SimpleDet](https://github.com/TuSimple/simpledet)\u3002  - **\u200b\u6027\u80fd\u200b\u9ad8\u200b**    MMDetection \u200b\u8fd9\u4e2a\u200b\u7b97\u6cd5\u200b\u5e93\u200b\u6e90\u81ea\u200b\u4e8e\u200b COCO 2018 \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7ade\u8d5b\u200b\u7684\u200b\u51a0\u519b\u200b\u56e2\u961f\u200b *MMDet* \u200b\u56e2\u961f\u200b\u5f00\u53d1\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u4e4b\u540e\u200b\u6301\u7eed\u200b\u8fdb\u884c\u200b\u4e86\u200b\u6539\u8fdb\u200b\u548c\u200b\u63d0\u5347\u200b\u3002   \u200b\u65b0\u200b\u53d1\u5e03\u200b\u7684\u200b [RTMDet](configs/rtmdet) \u200b\u8fd8\u200b\u5728\u200b\u5b9e\u65f6\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u548c\u200b\u65cb\u8f6c\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u53d6\u5f97\u200b\u4e86\u200b\u6700\u200b\u5148\u8fdb\u200b\u7684\u200b\u6210\u679c\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u5728\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u4e2d\u200b\u53d6\u5f97\u200b\u4e86\u200b\u6700\u4f73\u200b\u7684\u200b\u7684\u200b\u53c2\u200b\u6570\u91cf\u200b\u548c\u200b\u7cbe\u5ea6\u200b\u5e73\u8861\u200b\u3002   <p>\u200b\u9664\u4e86\u200b MMDetection \u200b\u4e4b\u5916\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u5f00\u6e90\u200b\u4e86\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u8bad\u7ec3\u200b\u5e93\u200b MMEngine \u200b\u548c\u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u57fa\u7840\u200b\u5e93\u200b MMCV\uff0c\u200b\u5b83\u4eec\u200b\u662f\u200b MMDetection \u200b\u7684\u200b\u4e3b\u8981\u200b\u4f9d\u8d56\u200b\u3002</p>"},{"location":"#_2","title":"\u6700\u65b0\u8fdb\u5c55","text":""},{"location":"#_3","title":"\u4eae\u70b9","text":"<p>v3.2.0 \u200b\u7248\u672c\u200b\u5df2\u7ecf\u200b\u5728\u200b 2023.10.12 \u200b\u53d1\u5e03\u200b\uff1a</p> <p>1. \u200b\u68c0\u6d4b\u200b Transformer SOTA \u200b\u6a21\u578b\u200b\u5927\u200b\u5408\u96c6\u200b (1) \u200b\u652f\u6301\u200b\u4e86\u200b DDQ\u3001CO-DETR\u3001AlignDETR \u200b\u548c\u200b H-DINO 4 \u200b\u4e2a\u200b\u66f4\u65b0\u200b\u66f4\u5f3a\u200b\u7684\u200b SOTA Transformer \u200b\u6a21\u578b\u200b (2) \u200b\u57fa\u4e8e\u200b CO-DETR,  MMDet \u200b\u4e2d\u200b\u53d1\u5e03\u200b\u4e86\u200b COCO \u200b\u6027\u80fd\u200b\u4e3a\u200b 64.1 mAP \u200b\u7684\u200b\u6a21\u578b\u200b (3) DINO \u200b\u7b49\u200b\u7b97\u6cd5\u200b\u652f\u6301\u200b AMP/Checkpoint/FrozenBN\uff0c\u200b\u53ef\u4ee5\u200b\u6709\u6548\u200b\u964d\u4f4e\u200b\u663e\u5b58\u200b</p> <p>2. \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5168\u9762\u200b\u7684\u200b CNN \u200b\u548c\u200b Transformer \u200b\u7684\u200b\u6027\u80fd\u200b\u5bf9\u6bd4\u200b RF100 \u200b\u662f\u200b\u7531\u200b 100 \u200b\u4e2a\u200b\u73b0\u5b9e\u200b\u6536\u96c6\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u7ec4\u6210\u200b\uff0c\u200b\u5305\u62ec\u200b 7 \u200b\u4e2a\u57df\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u9a8c\u8bc1\u200b DINO \u200b\u7b49\u200b Transformer \u200b\u6a21\u578b\u200b\u548c\u200b CNN \u200b\u7c7b\u200b\u7b97\u6cd5\u200b\u5728\u200b\u4e0d\u540c\u200b\u573a\u666f\u200b\u4e0d\u540c\u200b\u6570\u636e\u91cf\u200b\u4e0b\u200b\u7684\u200b\u6027\u80fd\u200b\u5dee\u5f02\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u7528\u200b\u8fd9\u4e2a\u200b Benchmark \u200b\u5feb\u901f\u200b\u9a8c\u8bc1\u200b\u81ea\u5df1\u200b\u7684\u200b\u7b97\u6cd5\u200b\u5728\u200b\u4e0d\u540c\u200b\u573a\u666f\u200b\u4e0b\u200b\u7684\u200b\u9c81\u68d2\u6027\u200b\u3002</p> <p>3. \u200b\u652f\u6301\u200b\u4e86\u200b GLIP \u200b\u548c\u200b Grounding DINO \u200b\u5fae\u8c03\u200b\uff0c\u200b\u5168\u7f51\u200b\u552f\u4e00\u200b\u652f\u6301\u200b Grounding DINO \u200b\u5fae\u8c03\u200b MMDet \u200b\u4e2d\u200b\u7684\u200b Grounding DINO \u200b\u662f\u200b\u5168\u7f51\u200b\u552f\u4e00\u200b\u652f\u6301\u200b\u5fae\u8c03\u200b\u7684\u200b\u7b97\u6cd5\u200b\u5e93\u200b\uff0c\u200b\u4e14\u200b\u6027\u80fd\u200b\u9ad8\u4e8e\u200b\u5b98\u65b9\u200b 1 \u200b\u4e2a\u70b9\u200b\uff0c\u200b\u5f53\u7136\u200b GLIP \u200b\u4e5f\u200b\u6bd4\u200b\u5b98\u65b9\u200b\u9ad8\u200b\u3002 \u200b\u6211\u4eec\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8be6\u7ec6\u200b\u7684\u200b Grounding DINO \u200b\u5728\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u8bc4\u4f30\u200b\u7684\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u6b22\u8fce\u200b\u5927\u5bb6\u200b\u8bd5\u7528\u200b\u3002</p> Model Backbone Style COCO mAP Official COCO mAP Grounding DINO-T Swin-T Zero-shot 48.5 48.4 Grounding DINO-T Swin-T Finetune 58.1(+0.9) 57.2 Grounding DINO-B Swin-B Zero-shot 56.9 56.7 Grounding DINO-B Swin-B Finetune 59.7 Grounding DINO-R50 R50 Scratch 48.9(+0.8) 48.1 <p>4. \u200b\u652f\u6301\u200b\u5f00\u653e\u200b\u8bcd\u6c47\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b Detic \u200b\u5e76\u200b\u63d0\u4f9b\u200b\u591a\u200b\u6570\u636e\u200b\u96c6\u200b\u8054\u5408\u200b\u8bad\u7ec3\u200b\u53ef\u80fd\u200b</p> <p>5. \u200b\u8f7b\u677e\u200b\u4f7f\u7528\u200b FSDP \u200b\u548c\u200b DeepSpeed \u200b\u8bad\u7ec3\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b</p> ID AMP GC of Backbone GC of Encoder FSDP Peak Mem (GB) Iter Time (s) 1 49 (A100) 0.9 2 \u221a 39 (A100) 1.2 3 \u221a 33 (A100) 1.1 4 \u221a \u221a 25 (A100) 1.3 5 \u221a \u221a 18 2.2 6 \u221a \u221a \u221a 13 1.6 7 \u221a \u221a \u221a 14 2.9 8 \u221a \u221a \u221a \u221a 8.5 2.4 <p>6. \u200b\u652f\u6301\u200b\u4e86\u200b V3Det 1.3w+ \u200b\u7c7b\u522b\u200b\u7684\u200b\u8d85\u5927\u200b\u8bcd\u6c47\u200b\u68c0\u6d4b\u200b\u6570\u636e\u200b\u96c6\u200b</p> <p>\u200b\u6211\u4eec\u200b\u5f88\u200b\u9ad8\u5174\u200b\u5411\u200b\u5927\u5bb6\u200b\u4ecb\u7ecd\u200b\u6211\u4eec\u200b\u5728\u200b\u5b9e\u65f6\u200b\u76ee\u6807\u200b\u8bc6\u522b\u200b\u4efb\u52a1\u200b\u65b9\u9762\u200b\u7684\u200b\u6700\u65b0\u200b\u6210\u679c\u200b RTMDet\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u5168\u200b\u5377\u79ef\u200b\u5355\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u3002 RTMDet \u200b\u4e0d\u4ec5\u200b\u5728\u200b\u4ece\u200b tiny \u200b\u5230\u200b extra-large \u200b\u5c3a\u5bf8\u200b\u7684\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u6700\u4f73\u200b\u7684\u200b\u53c2\u200b\u6570\u91cf\u200b\u548c\u200b\u7cbe\u5ea6\u200b\u7684\u200b\u5e73\u8861\u200b\uff0c\u200b\u800c\u4e14\u200b\u5728\u200b\u5b9e\u65f6\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u548c\u200b\u65cb\u8f6c\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u53d6\u5f97\u200b\u4e86\u200b\u6700\u200b\u5148\u8fdb\u200b\u7684\u200b\u6210\u679c\u200b\u3002 \u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u53c2\u9605\u200b\u6280\u672f\u200b\u62a5\u544a\u200b\u3002 \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u627e\u5230\u200b\u3002</p> <p> </p> Task Dataset AP FPS(TRT FP16 BS1 3090) Object Detection COCO 52.8 322 Instance Segmentation COCO 44.6 188 Rotated Object Detection DOTA 78.9(single-scale)/81.3(multi-scale) 121"},{"location":"#_4","title":"\u5b89\u88c5","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b\u5feb\u901f\u200b\u5165\u95e8\u200b\u6587\u6863\u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b\u3002</p>"},{"location":"#_5","title":"\u6559\u7a0b","text":"<p>\u200b\u8bf7\u200b\u9605\u8bfb\u200b\u6982\u8ff0\u200b\u5bf9\u200b MMDetection \u200b\u8fdb\u884c\u200b\u521d\u6b65\u200b\u7684\u200b\u4e86\u89e3\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u66f4\u8fdb\u4e00\u6b65\u200b\u4e86\u89e3\u200b MMDetection\uff0c\u200b\u6211\u4eec\u200b\u51c6\u5907\u200b\u4e86\u200b\u7528\u6237\u200b\u6307\u5357\u200b\u548c\u200b\u8fdb\u9636\u200b\u6307\u5357\u200b\uff0c\u200b\u8bf7\u200b\u9605\u8bfb\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863\u200b\uff1a</p> <ul> <li>\u200b\u7528\u6237\u200b\u6307\u5357\u200b</li> </ul>     - [\u200b\u8bad\u7ec3\u200b &amp; \u200b\u6d4b\u8bd5\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/index.html#train-test)     - [\u200b\u5b66\u4e60\u200b\u914d\u7f6e\u6587\u4ef6\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/config.html)     - [\u200b\u4f7f\u7528\u200b\u5df2\u6709\u200b\u6a21\u578b\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b](https://mmdetection.readthedocs.io/en/latest/user_guides/inference.html)     - [\u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/dataset_prepare.html)     - [\u200b\u6d4b\u8bd5\u200b\u73b0\u6709\u200b\u6a21\u578b\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/test.html)     - [\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6a21\u578b\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/train.html)     - [\u200b\u5728\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/train.html#train-with-customized-datasets)     - [\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/new_model.html)     - [\u200b\u6a21\u578b\u200b\u5fae\u8c03\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/finetune.html)     - [\u200b\u63d0\u4ea4\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/test_results_submission.html)     - [\u200b\u6743\u91cd\u200b\u521d\u59cb\u5316\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/init_cfg.html)     - [\u200b\u5c06\u200b\u5355\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u5668\u200b\u4f5c\u4e3a\u200b RPN](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/single_stage_as_rpn.html)     - [\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/semi_det.html)   - [\u200b\u5b9e\u7528\u5de5\u5177\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/index.html#useful-tools)     <ul> <li>\u200b\u8fdb\u9636\u200b\u6307\u5357\u200b</li> </ul>     - [\u200b\u57fa\u7840\u200b\u6982\u5ff5\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#basic-concepts)   - [\u200b\u7ec4\u4ef6\u200b\u5b9a\u5236\u200b](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#component-customization)   - [How to](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#how-to)     <p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u68c0\u6d4b\u200b\u7684\u200b colab \u200b\u6559\u7a0b\u200b  \u200b\u548c\u200b \u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u7684\u200b colab \u200b\u6559\u7a0b\u200b </p> <p>\u200b\u540c\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b MMDetection \u200b\u4e2d\u6587\u200b\u89e3\u8bfb\u200b\u6587\u6848\u200b\u6c47\u603b\u200b</p> <p>\u200b\u82e5\u200b\u9700\u8981\u200b\u5c06\u200b2.x\u200b\u7248\u672c\u200b\u7684\u200b\u4ee3\u7801\u200b\u8fc1\u79fb\u200b\u81f3\u200b\u65b0\u7248\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u8fc1\u79fb\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"#_6","title":"\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u6a21\u578b\u5e93","text":"<p>\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u548c\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6a21\u578b\u5e93\u200b\u4e2d\u200b\u627e\u5230\u200b\u3002</p> \u200b\u7b97\u6cd5\u200b\u67b6\u6784\u200b Object Detection Instance Segmentation Panoptic Segmentation Other <ul> <li>Fast R-CNN (ICCV'2015)</li> <li>Faster R-CNN (NeurIPS'2015)</li> <li>RPN (NeurIPS'2015)</li> <li>SSD (ECCV'2016)</li> <li>RetinaNet (ICCV'2017)</li> <li>Cascade R-CNN (CVPR'2018)</li> <li>YOLOv3 (ArXiv'2018)</li> <li>CornerNet (ECCV'2018)</li> <li>Grid R-CNN (CVPR'2019)</li> <li>Guided Anchoring (CVPR'2019)</li> <li>FSAF (CVPR'2019)</li> <li>CenterNet (CVPR'2019)</li> <li>Libra R-CNN (CVPR'2019)</li> <li>TridentNet (ICCV'2019)</li> <li>FCOS (ICCV'2019)</li> <li>RepPoints (ICCV'2019)</li> <li>FreeAnchor (NeurIPS'2019)</li> <li>CascadeRPN (NeurIPS'2019)</li> <li>Foveabox (TIP'2020)</li> <li>Double-Head R-CNN (CVPR'2020)</li> <li>ATSS (CVPR'2020)</li> <li>NAS-FCOS (CVPR'2020)</li> <li>CentripetalNet (CVPR'2020)</li> <li>AutoAssign (ArXiv'2020)</li> <li>Side-Aware Boundary Localization (ECCV'2020)</li> <li>Dynamic R-CNN (ECCV'2020)</li> <li>DETR (ECCV'2020)</li> <li>PAA (ECCV'2020)</li> <li>VarifocalNet (CVPR'2021)</li> <li>Sparse R-CNN (CVPR'2021)</li> <li>YOLOF (CVPR'2021)</li> <li>YOLOX (CVPR'2021)</li> <li>Deformable DETR (ICLR'2021)</li> <li>TOOD (ICCV'2021)</li> <li>DDOD (ACM MM'2021)</li> <li>RTMDet (ArXiv'2022)</li> <li>Conditional DETR (ICCV'2021)</li> <li>DAB-DETR (ICLR'2022)</li> <li>DINO (ICLR'2023)</li> <li>GLIP (CVPR'2022)</li> <li>DDQ (CVPR'2023)</li> <li>DiffusionDet (ArXiv'2023)</li> <li>EfficientDet (CVPR'2020)</li> <li>ViTDet (ECCV'2022)</li> <li>Detic (ECCV'2022)</li> <li>CO-DETR (ICCV'2023)</li> </ul> <ul> <li>Mask R-CNN (ICCV'2017)</li> <li>Cascade Mask R-CNN (CVPR'2018)</li> <li>Mask Scoring R-CNN (CVPR'2019)</li> <li>Hybrid Task Cascade (CVPR'2019)</li> <li>YOLACT (ICCV'2019)</li> <li>InstaBoost (ICCV'2019)</li> <li>SOLO (ECCV'2020)</li> <li>PointRend (CVPR'2020)</li> <li>DetectoRS (ArXiv'2020)</li> <li>SOLOv2 (NeurIPS'2020)</li> <li>SCNet (AAAI'2021)</li> <li>QueryInst (ICCV'2021)</li> <li>Mask2Former (ArXiv'2021)</li> <li>CondInst (ECCV'2020)</li> <li>SparseInst (CVPR'2022)</li> <li>RTMDet (ArXiv'2022)</li> <li>BoxInst (CVPR'2021)</li> <li>ConvNeXt-V2 (Arxiv'2023)</li> </ul> <ul> <li>Panoptic FPN (CVPR'2019)</li> <li>MaskFormer (NeurIPS'2021)</li> <li>Mask2Former (ArXiv'2021)</li> <li>XDecoder (CVPR'2023)</li> </ul> <li>Contrastive Learning</li> <ul> <ul> <li>SwAV (NeurIPS'2020)</li> <li>MoCo (CVPR'2020)</li> <li>MoCov2 (ArXiv'2020)</li> </ul> </ul> <li>Distillation</li> <ul> <ul> <li>Localization Distillation (CVPR'2022)</li> <li>Label Assignment Distillation (WACV'2022)</li> </ul> </ul> <li>Semi-Supervised Object Detection</li> <ul> <ul> <li>Soft Teacher (ICCV'2021)</li> </ul> </ul> \u200b\u6a21\u5757\u200b\u7ec4\u4ef6\u200b Backbones Necks Loss Common <ul> <li>VGG (ICLR'2015)</li> <li>ResNet (CVPR'2016)</li> <li>ResNeXt (CVPR'2017)</li> <li>MobileNetV2 (CVPR'2018)</li> <li>HRNet (CVPR'2019)</li> <li>Generalized Attention (ICCV'2019)</li> <li>GCNet (ICCVW'2019)</li> <li>Res2Net (TPAMI'2020)</li> <li>RegNet (CVPR'2020)</li> <li>ResNeSt (ArXiv'2020)</li> <li>PVT (ICCV'2021)</li> <li>Swin (CVPR'2021)</li> <li>PVTv2 (ArXiv'2021)</li> <li>ResNet strikes back (ArXiv'2021)</li> <li>EfficientNet (ArXiv'2021)</li> <li>ConvNeXt (CVPR'2022)</li> <li>ConvNeXtv2 (ArXiv'2023)</li> </ul> <ul> <li>PAFPN (CVPR'2018)</li> <li>NAS-FPN (CVPR'2019)</li> <li>CARAFE (ICCV'2019)</li> <li>FPG (ArXiv'2020)</li> <li>GRoIE (ICPR'2020)</li> <li>DyHead (CVPR'2021)</li> </ul> <ul> <li>GHM (AAAI'2019)</li> <li>Generalized Focal Loss (NeurIPS'2020)</li> <li>Seasaw Loss (CVPR'2021)</li> </ul> <ul> <li>OHEM (CVPR'2016)</li> <li>Group Normalization (ECCV'2018)</li> <li>DCN (ICCV'2017)</li> <li>DCNv2 (CVPR'2019)</li> <li>Weight Standardization (ArXiv'2019)</li> <li>Prime Sample Attention (CVPR'2020)</li> <li>Strong Baselines (CVPR'2021)</li> <li>Resnet strikes back (ArXiv'2021)</li> </ul> <p>\u200b\u6211\u4eec\u200b\u5728\u200b\u57fa\u4e8e\u200b MMDetection \u200b\u7684\u200b\u9879\u76ee\u200b\u4e2d\u200b\u5217\u4e3e\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5176\u4ed6\u200b\u7684\u200b\u652f\u6301\u200b\u7684\u200b\u7b97\u6cd5\u200b\u3002</p>"},{"location":"#_7","title":"\u5e38\u89c1\u95ee\u9898","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b FAQ \u200b\u4e86\u89e3\u200b\u5176\u4ed6\u200b\u7528\u6237\u200b\u7684\u200b\u5e38\u89c1\u95ee\u9898\u200b\u3002</p>"},{"location":"#_8","title":"\u8d21\u732e\u200b\u6307\u5357","text":"<p>\u200b\u6211\u4eec\u200b\u611f\u8c22\u200b\u6240\u6709\u200b\u7684\u200b\u8d21\u732e\u8005\u200b\u4e3a\u200b\u6539\u8fdb\u200b\u548c\u200b\u63d0\u5347\u200b MMDetection \u200b\u6240\u200b\u4f5c\u51fa\u200b\u7684\u200b\u52aa\u529b\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u6b63\u5728\u200b\u8fdb\u884c\u200b\u4e2d\u200b\u7684\u200b\u9879\u76ee\u200b\u6dfb\u52a0\u200b\u8fdb\u200b\u4e86\u200bGitHub Projects\u200b\u9875\u9762\u200b\uff0c\u200b\u975e\u5e38\u200b\u6b22\u8fce\u200b\u793e\u533a\u200b\u7528\u6237\u200b\u80fd\u200b\u53c2\u4e0e\u200b\u8fdb\u200b\u8fd9\u4e9b\u200b\u9879\u76ee\u200b\u4e2d\u6765\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b\u8d21\u732e\u200b\u6307\u5357\u200b\u6765\u200b\u4e86\u89e3\u200b\u53c2\u4e0e\u200b\u9879\u76ee\u200b\u8d21\u732e\u200b\u7684\u200b\u76f8\u5173\u200b\u6307\u5f15\u200b\u3002</p>"},{"location":"#_9","title":"\u81f4\u8c22","text":"<p>MMDetection \u200b\u662f\u200b\u4e00\u6b3e\u200b\u7531\u200b\u6765\u81ea\u200b\u4e0d\u540c\u200b\u9ad8\u6821\u200b\u548c\u200b\u4f01\u4e1a\u200b\u7684\u200b\u7814\u53d1\u200b\u4eba\u5458\u200b\u5171\u540c\u200b\u53c2\u4e0e\u200b\u8d21\u732e\u200b\u7684\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u3002\u200b\u6211\u4eec\u200b\u611f\u8c22\u200b\u6240\u6709\u200b\u4e3a\u200b\u9879\u76ee\u200b\u63d0\u4f9b\u200b\u7b97\u6cd5\u200b\u590d\u73b0\u200b\u548c\u200b\u65b0\u200b\u529f\u80fd\u200b\u652f\u6301\u200b\u7684\u200b\u8d21\u732e\u8005\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u63d0\u4f9b\u200b\u5b9d\u8d35\u200b\u53cd\u9988\u200b\u7684\u200b\u7528\u6237\u200b\u3002 \u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u7bb1\u200b\u548c\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u793e\u533a\u200b\u63d0\u4f9b\u200b\u7075\u6d3b\u200b\u7684\u200b\u4ee3\u7801\u200b\u5de5\u5177\u200b\uff0c\u200b\u4f9b\u200b\u7528\u6237\u200b\u590d\u73b0\u200b\u5df2\u6709\u200b\u7b97\u6cd5\u200b\u5e76\u200b\u5f00\u53d1\u200b\u81ea\u5df1\u200b\u7684\u200b\u65b0\u200b\u6a21\u578b\u200b\uff0c\u200b\u4ece\u800c\u200b\u4e0d\u65ad\u200b\u4e3a\u200b\u5f00\u6e90\u200b\u793e\u533a\u200b\u63d0\u4f9b\u200b\u8d21\u732e\u200b\u3002</p>"},{"location":"#_10","title":"\u5f15\u7528","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u7814\u7a76\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e86\u200b\u672c\u200b\u9879\u76ee\u200b\u7684\u200b\u4ee3\u7801\u200b\u6216\u8005\u200b\u6027\u80fd\u200b\u57fa\u51c6\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u5982\u4e0b\u200b bibtex \u200b\u5f15\u7528\u200b MMDetection\u3002</p> <pre><code>@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n</code></pre>"},{"location":"#_11","title":"\u5f00\u6e90\u200b\u8bb8\u53ef\u8bc1","text":"<p>\u200b\u8be5\u200b\u9879\u76ee\u200b\u91c7\u7528\u200b Apache 2.0 \u200b\u5f00\u6e90\u200b\u8bb8\u53ef\u8bc1\u200b\u3002</p>"},{"location":"#openmmlab","title":"OpenMMLab \u200b\u7684\u200b\u5176\u4ed6\u200b\u9879\u76ee","text":"<ul> <li>MMEngine: OpenMMLab \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u57fa\u7840\u200b\u5e93\u200b</li> <li>MMCV: OpenMMLab \u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u57fa\u7840\u200b\u5e93\u200b</li> <li>MMPreTrain: OpenMMLab \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u9884\u200b\u8bad\u7ec3\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMagic: OpenMMLab \u200b\u65b0\u4e00\u4ee3\u200b\u4eba\u5de5\u667a\u80fd\u200b\u5185\u5bb9\u200b\u751f\u6210\u200b\uff08AIGC\uff09\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMDetection: OpenMMLab \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMDetection3D: OpenMMLab \u200b\u65b0\u4e00\u4ee3\u200b\u901a\u7528\u200b 3D \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5e73\u53f0\u200b</li> <li>MMRotate: OpenMMLab \u200b\u65cb\u8f6c\u200b\u6846\u200b\u68c0\u6d4b\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMYOLO: OpenMMLab YOLO \u200b\u7cfb\u5217\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMSegmentation: OpenMMLab \u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMOCR: OpenMMLab \u200b\u5168\u200b\u6d41\u7a0b\u200b\u6587\u5b57\u200b\u68c0\u6d4b\u200b\u8bc6\u522b\u200b\u7406\u89e3\u200b\u5de5\u5177\u5305\u200b</li> <li>MMPose: OpenMMLab \u200b\u59ff\u6001\u200b\u4f30\u8ba1\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMHuman3D: OpenMMLab \u200b\u4eba\u4f53\u200b\u53c2\u6570\u200b\u5316\u200b\u6a21\u578b\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMSelfSup: OpenMMLab \u200b\u81ea\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMRazor: OpenMMLab \u200b\u6a21\u578b\u200b\u538b\u7f29\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMFewShot: OpenMMLab \u200b\u5c11\u200b\u6837\u672c\u200b\u5b66\u4e60\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMAction2: OpenMMLab \u200b\u65b0\u4e00\u4ee3\u200b\u89c6\u9891\u200b\u7406\u89e3\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMTracking: OpenMMLab \u200b\u4e00\u4f53\u5316\u200b\u89c6\u9891\u200b\u76ee\u6807\u200b\u611f\u77e5\u200b\u5e73\u53f0\u200b</li> <li>MMFlow: OpenMMLab \u200b\u5149\u6d41\u200b\u4f30\u8ba1\u200b\u5de5\u5177\u7bb1\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6\u200b</li> <li>MMEditing: OpenMMLab \u200b\u56fe\u50cf\u200b\u89c6\u9891\u200b\u7f16\u8f91\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMGeneration: OpenMMLab \u200b\u56fe\u7247\u200b\u89c6\u9891\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u5de5\u5177\u7bb1\u200b</li> <li>MMDeploy: OpenMMLab \u200b\u6a21\u578b\u200b\u90e8\u7f72\u200b\u6846\u67b6\u200b</li> <li>MIM: OpenMMlab \u200b\u9879\u76ee\u200b\u3001\u200b\u7b97\u6cd5\u200b\u3001\u200b\u6a21\u578b\u200b\u7684\u200b\u7edf\u4e00\u200b\u5165\u53e3\u200b</li> <li>MMEval: \u200b\u7edf\u4e00\u200b\u5f00\u653e\u200b\u7684\u200b\u8de8\u200b\u6846\u67b6\u200b\u7b97\u6cd5\u200b\u8bc4\u6d4b\u200b\u5e93\u200b</li> <li>Playground: \u200b\u6536\u96c6\u200b\u548c\u200b\u5c55\u793a\u200b OpenMMLab \u200b\u76f8\u5173\u200b\u7684\u200b\u524d\u6cbf\u200b\u3001\u200b\u6709\u8da3\u200b\u7684\u200b\u793e\u533a\u200b\u9879\u76ee\u200b</li> </ul>"},{"location":"#openmmlab_1","title":"\u6b22\u8fce\u200b\u52a0\u5165\u200b OpenMMLab \u200b\u793e\u533a","text":"<p>\u200b\u626b\u63cf\u200b\u4e0b\u65b9\u200b\u7684\u200b\u4e8c\u7ef4\u7801\u200b\u53ef\u200b\u5173\u6ce8\u200b OpenMMLab \u200b\u56e2\u961f\u200b\u7684\u200b \u200b\u77e5\u4e4e\u200b\u5b98\u65b9\u200b\u8d26\u53f7\u200b\uff0c\u200b\u626b\u63cf\u200b\u4e0b\u65b9\u200b\u5fae\u4fe1\u200b\u4e8c\u7ef4\u7801\u200b\u6dfb\u52a0\u200b\u55b5\u200b\u55b5\u200b\u597d\u53cb\u200b\uff0c\u200b\u8fdb\u5165\u200b MMDectection \u200b\u5fae\u4fe1\u200b\u4ea4\u6d41\u200b\u793e\u7fa4\u200b\u3002\u3010\u200b\u52a0\u200b\u597d\u53cb\u200b\u7533\u8bf7\u200b\u683c\u5f0f\u200b\uff1a\u200b\u7814\u7a76\u200b\u65b9\u5411\u200b+\u200b\u5730\u533a\u200b+\u200b\u5b66\u6821\u200b/\u200b\u516c\u53f8\u200b+\u200b\u59d3\u540d\u200b\u3011</p> <p>\u200b\u6211\u4eec\u200b\u4f1a\u200b\u5728\u200b OpenMMLab \u200b\u793e\u533a\u200b\u4e3a\u200b\u5927\u5bb6\u200b</p> <ul> <li>\ud83d\udce2 \u200b\u5206\u4eab\u200b AI \u200b\u6846\u67b6\u200b\u7684\u200b\u524d\u6cbf\u200b\u6838\u5fc3\u6280\u672f\u200b</li> <li>\ud83d\udcbb \u200b\u89e3\u8bfb\u200b PyTorch \u200b\u5e38\u7528\u200b\u6a21\u5757\u200b\u6e90\u7801\u200b</li> <li>\ud83d\udcf0 \u200b\u53d1\u5e03\u200b OpenMMLab \u200b\u7684\u200b\u76f8\u5173\u200b\u65b0\u95fb\u200b</li> <li>\ud83d\ude80 \u200b\u4ecb\u7ecd\u200b OpenMMLab \u200b\u5f00\u53d1\u200b\u7684\u200b\u524d\u6cbf\u200b\u7b97\u6cd5\u200b</li> <li>\ud83c\udfc3 \u200b\u83b7\u53d6\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u95ee\u9898\u200b\u7b54\u7591\u200b\u548c\u200b\u610f\u89c1\u53cd\u9988\u200b</li> <li>\ud83d\udd25 \u200b\u63d0\u4f9b\u200b\u4e0e\u200b\u5404\u884c\u5404\u4e1a\u200b\u5f00\u53d1\u8005\u200b\u5145\u5206\u200b\u4ea4\u6d41\u200b\u7684\u200b\u5e73\u53f0\u200b</li> </ul> <p>\u200b\u5e72\u8d27\u200b\u6ee1\u6ee1\u200b \ud83d\udcd8\uff0c\u200b\u7b49\u200b\u4f60\u200b\u6765\u200b\u64a9\u200b \ud83d\udc97\uff0cOpenMMLab \u200b\u793e\u533a\u200b\u671f\u5f85\u200b\u60a8\u200b\u7684\u200b\u52a0\u5165\u200b \ud83d\udc6c</p>"},{"location":"article/","title":"Article","text":""},{"location":"article/#_1","title":"\u4e2d\u6587\u200b\u89e3\u8bfb\u200b\u6587\u6848\u200b\u6c47\u603b\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"article/#1-v2x","title":"1 \u200b\u5b98\u65b9\u200b\u89e3\u8bfb\u200b\u6587\u6848\u200b\uff08v2.x\uff09","text":""},{"location":"article/#11","title":"1.1 \u200b\u6846\u67b6\u200b\u89e3\u8bfb","text":"<ul> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u6574\u4f53\u200b\u6784\u5efa\u200b\u6d41\u7a0b\u200b(\u200b\u4e00\u200b)</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u6574\u4f53\u200b\u6784\u5efa\u200b\u6d41\u7a0b\u200b(\u200b\u4e8c\u200b)</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b Head \u200b\u6d41\u7a0b\u200b</li> </ul>"},{"location":"article/#12","title":"1.2 \u200b\u7b97\u6cd5\u200b\u89e3\u8bfb","text":"<ul> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e00\u200b)\uff1aRetinaNet \u200b\u53ca\u200b\u914d\u7f6e\u200b\u8be6\u89e3\u200b</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e8c\u200b)\uff1aFaster R-CNN|Mask R-CNN</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e09\u200b)\uff1aFCOS</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u56db\u200b)\uff1aATSS</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e94\u200b)\uff1aCascade R-CNN</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u516d\u200b)\uff1aYOLOF</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e03\u200b)\uff1aCenterNet</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u516b\u200b)\uff1aYOLACT</li> <li>\u200b\u8f7b\u677e\u200b\u638c\u63e1\u200b MMDetection \u200b\u4e2d\u200b\u5e38\u7528\u200b\u7b97\u6cd5\u200b(\u200b\u4e5d\u200b)\uff1aAutoAssign</li> <li>YOLOX \u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u590d\u73b0\u200b\u5168\u200b\u6d41\u7a0b\u200b\u89e3\u6790\u200b</li> <li>\u200b\u5582\u5582\u200b\u5582\u200b\uff01\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u51cf\u91cd\u200b\u4e86\u200b\uff01\u200b\u5c0f\u200b\u6a21\u578b\u200b - MMDetection \u200b\u65b0\u589e\u200bSSDLite \u3001 MobileNetV2YOLOV3 \u200b\u4e24\u5927\u200b\u7ecf\u5178\u200b\u7b97\u6cd5\u200b</li> </ul>"},{"location":"article/#13","title":"1.3 \u200b\u5de5\u5177\u200b\u89e3\u8bfb","text":"<ul> <li>OpenMMLab \u200b\u4e2d\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b AMP \u200b\u7684\u200b\u6b63\u786e\u200b\u6253\u5f00\u65b9\u5f0f\u200b</li> <li>\u200b\u5c0f\u767d\u200b\u90fd\u200b\u80fd\u770b\u61c2\u200b\uff01\u200b\u624b\u628a\u624b\u200b\u6559\u200b\u4f60\u200b\u4f7f\u7528\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\u5206\u6790\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b</li> <li>MMDetection \u200b\u56fe\u50cf\u200b\u7f29\u653e\u200b Resize \u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b OpenMMLab</li> <li>\u200b\u62ff\u200b\u4ec0\u4e48\u200b\u62ef\u6551\u200b\u6211\u200b\u7684\u200b 4G \u200b\u663e\u5361\u200b</li> <li>MMDet\u200b\u5c45\u7136\u200b\u80fd\u200b\u7528\u200bMMCls\u200b\u7684\u200bBackbone\uff1f\u200b\u8bba\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u6253\u5f00\u65b9\u5f0f\u200b</li> </ul>"},{"location":"article/#14","title":"1.4 \u200b\u77e5\u4e4e\u200b\u95ee\u7b54","text":"<ul> <li>COCO\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b1x\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u4e3a\u4ec0\u4e48\u200b\u4e0d\u200b\u91c7\u7528\u200b\u591a\u200b\u5c3a\u5ea6\u200b\u8bad\u7ec3\u200b?</li> <li>MMDetection\u200b\u4e2d\u200bSOTA\u200b\u8bba\u6587\u200b\u6e90\u7801\u200b\u4e2d\u5c06\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200bBN\u200b\u5c42\u200b\u7684\u200beval\u200b\u6253\u5f00\u200b?</li> <li>\u200b\u57fa\u4e8e\u200bPyTorch\u200b\u7684\u200bMMDetection\u200b\u4e2d\u200b\u8bad\u7ec3\u200b\u7684\u200b\u968f\u673a\u6027\u200b\u6765\u81ea\u200b\u4f55\u5904\u200b\uff1f</li> <li>\u200b\u5355\u200b\u9636\u6bb5\u200b\u3001\u200b\u53cc\u200b\u9636\u6bb5\u200b\u3001anchor-based\u3001anchor-free \u200b\u8fd9\u56db\u8005\u200b\u4e4b\u95f4\u200b\u6709\u200b\u4ec0\u4e48\u200b\u8054\u7cfb\u200b\u5417\u200b\uff1f</li> <li>\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7684\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u6709\u200b\u63a8\u8350\u200b\u7684\u200b\u4e66\u7c4d\u200b\u6216\u200b\u8d44\u6599\u200b\u5417\u200b\uff1f</li> <li>\u200b\u5927\u4f6c\u200b\u4eec\u200b\uff0c\u200b\u521a\u200b\u5165\u5b66\u200b\u7814\u7a76\u751f\u200b\uff0c\u200b\u60f3\u200b\u5165\u95e8\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u6709\u200b\u4ec0\u4e48\u200b\u5b66\u4e60\u200b\u8def\u7ebf\u200b\u53ef\u4ee5\u200b\u5165\u95e8\u200b\u7684\u200b\uff1f</li> <li>\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u9886\u57df\u200b\u8fd8\u6709\u200b\u4ec0\u4e48\u200b\u53ef\u4ee5\u200b\u505a\u200b\u7684\u200b\uff1f</li> <li>\u200b\u5982\u4f55\u200b\u770b\u5f85\u200bTransformer\u200b\u5728\u200bCV\u200b\u4e0a\u200b\u7684\u200b\u5e94\u7528\u200b\u524d\u666f\u200b\uff0c\u200b\u672a\u6765\u200b\u6709\u200b\u53ef\u80fd\u200b\u66ff\u4ee3\u200bCNN\u200b\u5417\u200b\uff1f</li> <li>MMDetection\u200b\u5982\u4f55\u200b\u5b66\u4e60\u200b\u6e90\u7801\u200b\uff1f</li> <li>\u200b\u5982\u4f55\u200b\u5177\u4f53\u200b\u4e0a\u200b\u624b\u200b\u5b9e\u73b0\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5462\u200b\uff1f</li> </ul>"},{"location":"article/#15","title":"1.5 \u200b\u5176\u4ed6","text":"<ul> <li>\u200b\u4e0d\u5f97\u200b\u4e0d\u77e5\u200b\u7684\u200b MMDetection \u200b\u5b66\u4e60\u200b\u8def\u7ebf\u200b(\u200b\u4e2a\u4eba\u200b\u7ecf\u9a8c\u200b\u7248\u200b)</li> <li>OpenMMLab \u200b\u793e\u533a\u200b\u4e13\u8bbf\u200b\u4e4b\u200b YOLOX \u200b\u590d\u73b0\u200b\u7bc7\u200b</li> </ul>"},{"location":"article/#2-v2x","title":"2 \u200b\u793e\u533a\u200b\u89e3\u8bfb\u200b\u6587\u6848\u200b\uff08v2.x\uff09","text":"<ul> <li>\u200b\u624b\u628a\u624b\u200b\u5e26\u200b\u4f60\u200b\u5b9e\u73b0\u200b\u7ecf\u5178\u200b\u68c0\u6d4b\u200b\u7f51\u7edc\u200b Mask R-CNN \u200b\u7684\u200b\u63a8\u7406\u200b</li> </ul>"},{"location":"get_started/","title":"\u5f00\u59cb\u200b\u4f60\u200b\u7684\u200b\u7b2c\u4e00\u6b65","text":""},{"location":"get_started/#_2","title":"\u4f9d\u8d56","text":"<p>\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6f14\u793a\u200b\u5982\u4f55\u200b\u7528\u200b PyTorch \u200b\u51c6\u5907\u200b\u4e00\u4e2a\u200b\u73af\u5883\u200b\u3002</p> <p>MMDetection \u200b\u652f\u6301\u200b\u5728\u200b Linux\uff0cWindows \u200b\u548c\u200b macOS \u200b\u4e0a\u200b\u8fd0\u884c\u200b\u3002\u200b\u5b83\u200b\u9700\u8981\u200b Python 3.7 \u200b\u4ee5\u4e0a\u200b\uff0cCUDA 9.2 \u200b\u4ee5\u4e0a\u200b\u548c\u200b PyTorch 1.8 \u200b\u53ca\u5176\u200b\u4ee5\u4e0a\u200b\u3002</p> <pre><code>\u200b\u5982\u679c\u200b\u4f60\u200b\u5bf9\u200b PyTorch \u200b\u6709\u200b\u7ecf\u9a8c\u200b\u5e76\u4e14\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u4e86\u200b\u5b83\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8df3\u8f6c\u200b\u5230\u200b[\u200b\u4e0b\u200b\u4e00\u200b\u5c0f\u8282\u200b](#\u200b\u5b89\u88c5\u200b\u6d41\u7a0b\u200b)\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u4e0b\u8ff0\u200b\u6b65\u9aa4\u200b\u8fdb\u884c\u200b\u51c6\u5907\u200b\u3002\n</code></pre> <p>\u200b\u6b65\u9aa4\u200b 0. \u200b\u4ece\u200b\u5b98\u65b9\u7f51\u7ad9\u200b\u4e0b\u8f7d\u200b\u5e76\u200b\u5b89\u88c5\u200b Miniconda\u3002</p> <p>\u200b\u6b65\u9aa4\u200b 1. \u200b\u521b\u5efa\u200b\u5e76\u200b\u6fc0\u6d3b\u200b\u4e00\u4e2a\u200b conda \u200b\u73af\u5883\u200b\u3002</p> <pre><code>conda create --name openmmlab python=3.8 -y\nconda activate openmmlab\n</code></pre> <p>\u200b\u6b65\u9aa4\u200b 2. \u200b\u57fa\u4e8e\u200b PyTorch \u200b\u5b98\u65b9\u200b\u8bf4\u660e\u200b\u5b89\u88c5\u200b PyTorch\u3002</p> <p>\u200b\u5728\u200b GPU \u200b\u5e73\u53f0\u200b\u4e0a\u200b\uff1a</p> <pre><code>conda install pytorch torchvision -c pytorch\n</code></pre> <p>\u200b\u5728\u200b CPU \u200b\u5e73\u53f0\u200b\u4e0a\u200b\uff1a</p> <pre><code>conda install pytorch torchvision cpuonly -c pytorch\n</code></pre>"},{"location":"get_started/#_3","title":"\u5b89\u88c5\u200b\u6d41\u7a0b","text":"<p>\u200b\u6211\u4eec\u200b\u63a8\u8350\u200b\u7528\u6237\u200b\u53c2\u7167\u200b\u6211\u4eec\u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u5b89\u88c5\u200b MMDetection\u3002\u200b\u4e0d\u8fc7\u200b\uff0c\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e5f\u200b\u662f\u200b\u53ef\u200b\u5b9a\u5236\u200b\u5316\u200b\u7684\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u8bf7\u200b\u53c2\u8003\u200b\u81ea\u5b9a\u4e49\u200b\u5b89\u88c5\u200b\u7ae0\u8282\u200b\u3002</p>"},{"location":"get_started/#_4","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<p>\u200b\u6b65\u9aa4\u200b 0. \u200b\u4f7f\u7528\u200b MIM \u200b\u5b89\u88c5\u200b MMEngine \u200b\u548c\u200b MMCV\u3002</p> <pre><code>pip install -U openmim\nmim install mmengine\nmim install \"mmcv&gt;=2.0.0\"\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a \u200b\u5728\u200b MMCV-v2.x \u200b\u4e2d\u200b\uff0c<code>mmcv-full</code> \u200b\u6539\u540d\u200b\u4e3a\u200b <code>mmcv</code>\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5b89\u88c5\u200b\u4e0d\u200b\u5305\u542b\u200b CUDA \u200b\u7b97\u5b50\u200b\u7cbe\u7b80\u7248\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>mim install \"mmcv-lite&gt;=2.0.0rc1\"</code> \u200b\u6765\u200b\u5b89\u88c5\u200b\u3002</p> <p>\u200b\u6b65\u9aa4\u200b 1. \u200b\u5b89\u88c5\u200b MMDetection\u3002</p> <p>\u200b\u65b9\u6848\u200b a\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u5f00\u53d1\u200b\u5e76\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b mmdet\uff0c\u200b\u4ece\u200b\u6e90\u7801\u200b\u5b89\u88c5\u200b\u5b83\u200b\uff1a</p> <pre><code>git clone https://github.com/open-mmlab/mmdetection.git\ncd mmdetection\npip install -v -e .\n# \"-v\" \u200b\u6307\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\uff0c\u200b\u6216\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u8f93\u51fa\u200b\n# \"-e\" \u200b\u8868\u793a\u200b\u5728\u200b\u53ef\u200b\u7f16\u8f91\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u5b89\u88c5\u200b\u9879\u76ee\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u200b\u4ee3\u7801\u200b\u6240\u200b\u505a\u200b\u7684\u200b\u4efb\u4f55\u200b\u672c\u5730\u200b\u4fee\u6539\u200b\u90fd\u200b\u4f1a\u200b\u751f\u6548\u200b\uff0c\u200b\u4ece\u800c\u200b\u65e0\u9700\u200b\u91cd\u65b0\u5b89\u88c5\u200b\u3002\n</code></pre> <p>\u200b\u65b9\u6848\u200b b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u5c06\u200b mmdet \u200b\u4f5c\u4e3a\u200b\u4f9d\u8d56\u200b\u6216\u200b\u7b2c\u4e09\u65b9\u200b Python \u200b\u5305\u200b\uff0c\u200b\u4f7f\u7528\u200b MIM \u200b\u5b89\u88c5\u200b\uff1a</p> <pre><code>mim install mmdet\n</code></pre>"},{"location":"get_started/#_5","title":"\u9a8c\u8bc1\u200b\u5b89\u88c5","text":"<p>\u200b\u4e3a\u4e86\u200b\u9a8c\u8bc1\u200b MMDetection \u200b\u662f\u5426\u200b\u5b89\u88c5\u200b\u6b63\u786e\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u6765\u200b\u6267\u884c\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\u3002</p> <p>\u200b\u6b65\u9aa4\u200b 1. \u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4e0b\u8f7d\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u3002</p> <pre><code>mim download mmdet --config rtmdet_tiny_8xb32-300e_coco --dest .\n</code></pre> <p>\u200b\u4e0b\u8f7d\u200b\u5c06\u200b\u9700\u8981\u200b\u51e0\u79d2\u949f\u200b\u6216\u200b\u66f4\u200b\u957f\u65f6\u95f4\u200b\uff0c\u200b\u8fd9\u200b\u53d6\u51b3\u4e8e\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u73af\u5883\u200b\u3002\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u5728\u200b\u5f53\u524d\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u53d1\u73b0\u200b\u4e24\u4e2a\u200b\u6587\u4ef6\u200b <code>rtmdet_tiny_8xb32-300e_coco.py</code> \u200b\u548c\u200b <code>rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth</code>\u3002</p> <p>\u200b\u6b65\u9aa4\u200b 2. \u200b\u63a8\u7406\u200b\u9a8c\u8bc1\u200b\u3002</p> <p>\u200b\u65b9\u6848\u200b a\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u901a\u8fc7\u200b\u6e90\u7801\u200b\u5b89\u88c5\u200b\u7684\u200b MMDetection\uff0c\u200b\u90a3\u4e48\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff1a</p> <pre><code>python demo/image_demo.py demo/demo.jpg rtmdet_tiny_8xb32-300e_coco.py --weights rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth --device cpu\n</code></pre> <p>\u200b\u4f60\u200b\u4f1a\u200b\u5728\u200b\u5f53\u524d\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u7684\u200b <code>outputs/vis</code> \u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u770b\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u56fe\u50cf\u200b <code>demo.jpg</code>\uff0c\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u5305\u542b\u200b\u6709\u200b\u7f51\u7edc\u200b\u9884\u6d4b\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6846\u200b\u3002</p> <p>\u200b\u65b9\u6848\u200b b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u901a\u8fc7\u200b MIM \u200b\u5b89\u88c5\u200b\u7684\u200b MMDetection\uff0c\u200b\u90a3\u4e48\u200b\u53ef\u4ee5\u200b\u6253\u5f00\u200b\u4f60\u200b\u7684\u200b Python \u200b\u89e3\u6790\u5668\u200b\uff0c\u200b\u590d\u5236\u200b\u5e76\u200b\u7c98\u8d34\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>from mmdet.apis import init_detector, inference_detector\n\nconfig_file = 'rtmdet_tiny_8xb32-300e_coco.py'\ncheckpoint_file = 'rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'\nmodel = init_detector(config_file, checkpoint_file, device='cpu')  # or device='cuda:0'\ninference_detector(model, 'demo/demo.jpg')\n</code></pre> <p>\u200b\u4f60\u200b\u5c06\u200b\u4f1a\u200b\u770b\u5230\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b <code>DetDataSample</code> \u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5728\u200b <code>pred_instance</code> \u200b\u91cc\u200b\uff0c\u200b\u5305\u542b\u200b\u6709\u200b\u68c0\u6d4b\u200b\u6846\u200b\uff0c\u200b\u7c7b\u522b\u200b\u548c\u200b\u5f97\u5206\u200b\u3002</p>"},{"location":"get_started/#_6","title":"\u81ea\u5b9a\u4e49\u200b\u5b89\u88c5","text":""},{"location":"get_started/#cuda","title":"CUDA \u200b\u7248\u672c","text":"<p>\u200b\u5728\u200b\u5b89\u88c5\u200b PyTorch \u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b CUDA \u200b\u7684\u200b\u7248\u672c\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u4e0d\u200b\u6e05\u695a\u200b\u5e94\u8be5\u200b\u9009\u62e9\u200b\u54ea\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u8bf7\u200b\u9075\u5faa\u200b\u6211\u4eec\u200b\u7684\u200b\u5efa\u8bae\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b Ampere \u200b\u67b6\u6784\u200b\u7684\u200b NVIDIA GPU\uff0c\u200b\u4f8b\u5982\u200b GeForce 30 \u200b\u7cfb\u5217\u200b\u4ee5\u53ca\u200b NVIDIA A100\uff0cCUDA 11 \u200b\u662f\u200b\u5fc5\u9700\u200b\u7684\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u66f4\u200b\u65e9\u200b\u7684\u200b NVIDIA GPU\uff0cCUDA 11 \u200b\u662f\u200b\u5411\u200b\u540e\u200b\u517c\u5bb9\u200b (backward compatible) \u200b\u7684\u200b\uff0c\u200b\u4f46\u200b CUDA 10.2 \u200b\u80fd\u591f\u200b\u63d0\u4f9b\u200b\u66f4\u597d\u200b\u7684\u200b\u517c\u5bb9\u6027\u200b\uff0c\u200b\u4e5f\u200b\u66f4\u52a0\u200b\u8f7b\u91cf\u200b\u3002</li> </ul> <p>\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4f60\u200b\u7684\u200b GPU \u200b\u9a71\u52a8\u200b\u7248\u672c\u200b\u6ee1\u8db3\u200b\u6700\u4f4e\u200b\u7684\u200b\u7248\u672c\u200b\u9700\u6c42\u200b\uff0c\u200b\u53c2\u9605\u200b NVIDIA \u200b\u5b98\u65b9\u200b\u7684\u200b CUDA \u200b\u5de5\u5177\u7bb1\u200b\u548c\u200b\u76f8\u5e94\u200b\u7684\u200b\u9a71\u52a8\u200b\u7248\u672c\u200b\u5173\u7cfb\u200b\u8868\u200b\u3002</p> <pre><code>\u200b\u5982\u679c\u200b\u6309\u7167\u200b\u6211\u4eec\u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff0c\u200b\u5b89\u88c5\u200b CUDA \u200b\u8fd0\u884c\u200b\u65f6\u5e93\u200b\u5c31\u200b\u8db3\u591f\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u4e0d\u200b\u9700\u8981\u200b\u5728\u200b\u672c\u5730\u200b\u7f16\u8bd1\u200b CUDA \u200b\u4ee3\u7801\u200b\u3002\u200b\u4f46\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\u4ece\u200b\u6e90\u7801\u200b\u7f16\u8bd1\u200b MMCV\uff0c\u200b\u6216\u662f\u200b\u5f00\u53d1\u200b\u5176\u4ed6\u200b CUDA \u200b\u7b97\u5b50\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u5fc5\u987b\u200b\u5b89\u88c5\u200b\u5b8c\u6574\u200b\u7684\u200b CUDA \u200b\u5de5\u5177\u200b\u94fe\u200b\uff0c\u200b\u53c2\u89c1\u200b [NVIDIA \u200b\u5b98\u7f51\u200b](https://developer.nvidia.com/cuda-downloads)\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u200b\u9700\u8981\u200b\u786e\u4fdd\u200b\u8be5\u200b CUDA \u200b\u5de5\u5177\u200b\u94fe\u200b\u7684\u200b\u7248\u672c\u200b\u4e0e\u200b PyTorch \u200b\u5b89\u88c5\u200b\u65f6\u200b\u7684\u200b\u914d\u7f6e\u200b\u76f8\u5339\u914d\u200b\uff08\u200b\u5982\u7528\u200b `conda install` \u200b\u5b89\u88c5\u200b PyTorch \u200b\u65f6\u200b\u6307\u5b9a\u200b\u7684\u200b cudatoolkit \u200b\u7248\u672c\u200b\uff09\u3002\n</code></pre>"},{"location":"get_started/#mim-mmengine","title":"\u4e0d\u200b\u4f7f\u7528\u200b MIM \u200b\u5b89\u88c5\u200b MMEngine","text":"<p>\u200b\u8981\u200b\u4f7f\u7528\u200b pip \u200b\u800c\u200b\u4e0d\u662f\u200b MIM \u200b\u6765\u200b\u5b89\u88c5\u200b MMEngine\uff0c\u200b\u8bf7\u200b\u9075\u7167\u200b MMEngine \u200b\u5b89\u88c5\u200b\u6307\u5357\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5b89\u88c5\u200b MMEngine\u3002</p> <pre><code>pip install mmengine\n</code></pre>"},{"location":"get_started/#mim-mmcv","title":"\u4e0d\u200b\u4f7f\u7528\u200b MIM \u200b\u5b89\u88c5\u200b MMCV","text":"<p>MMCV \u200b\u5305\u542b\u200b C++ \u200b\u548c\u200b CUDA \u200b\u6269\u5c55\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5176\u200b\u5bf9\u200b PyTorch \u200b\u7684\u200b\u4f9d\u8d56\u200b\u6bd4\u8f83\u590d\u6742\u200b\u3002MIM \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u89e3\u6790\u200b\u8fd9\u4e9b\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b MMCV \u200b\u9884\u200b\u7f16\u8bd1\u200b\u5305\u200b\uff0c\u200b\u4f7f\u200b\u5b89\u88c5\u200b\u66f4\u200b\u7b80\u5355\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5fc5\u9700\u200b\u7684\u200b\u3002</p> <p>\u200b\u8981\u200b\u4f7f\u7528\u200b pip \u200b\u800c\u200b\u4e0d\u662f\u200b MIM \u200b\u6765\u200b\u5b89\u88c5\u200b MMCV\uff0c\u200b\u8bf7\u200b\u9075\u7167\u200b MMCV \u200b\u5b89\u88c5\u200b\u6307\u5357\u200b\u3002\u200b\u5b83\u200b\u9700\u8981\u200b\u60a8\u200b\u7528\u200b\u6307\u5b9a\u200b url \u200b\u7684\u200b\u5f62\u5f0f\u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b\u5bf9\u5e94\u200b\u7684\u200b PyTorch \u200b\u548c\u200b CUDA \u200b\u7248\u672c\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e0b\u8ff0\u200b\u547d\u4ee4\u200b\u5c06\u4f1a\u200b\u5b89\u88c5\u200b\u57fa\u4e8e\u200b PyTorch 1.12.x \u200b\u548c\u200b CUDA 11.6 \u200b\u7f16\u8bd1\u200b\u7684\u200b MMCV\u3002</p> <pre><code>pip install \"mmcv&gt;=2.0.0\" -f https://download.openmmlab.com/mmcv/dist/cu116/torch1.12.0/index.html\n</code></pre>"},{"location":"get_started/#cpu","title":"\u5728\u200b CPU \u200b\u73af\u5883\u200b\u4e2d\u200b\u5b89\u88c5","text":"<p>MMDetection \u200b\u53ef\u4ee5\u200b\u5728\u200b CPU \u200b\u73af\u5883\u200b\u4e2d\u200b\u6784\u5efa\u200b\u3002\u200b\u5728\u200b CPU \u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\uff08\u200b\u9700\u8981\u200b MMCV \u200b\u7248\u672c\u200b &gt;= 2.0.0rc1\uff09\u3001\u200b\u6d4b\u8bd5\u200b\u6216\u8005\u200b\u63a8\u7406\u200b\u3002</p> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u529f\u80fd\u200b\u5728\u200b\u8be5\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\uff1a</p> <ul> <li>Deformable Convolution</li> <li>Modulated Deformable Convolution</li> <li>ROI pooling</li> <li>Deformable ROI pooling</li> <li>CARAFE</li> <li>SyncBatchNorm</li> <li>CrissCrossAttention</li> <li>MaskedConv2d</li> <li>Temporal Interlace Shift</li> <li>nms_cuda</li> <li>sigmoid_focal_loss_cuda</li> <li>bbox_overlaps</li> </ul> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u5c1d\u8bd5\u200b\u8bad\u7ec3\u200b/\u200b\u6d4b\u8bd5\u200b/\u200b\u63a8\u7406\u200b\u5305\u542b\u200b\u4e0a\u8ff0\u200b\u7b97\u5b50\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u62a5\u9519\u200b\u3002\u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b\u5c06\u200b\u4f1a\u200b\u53d7\u200b\u5f71\u54cd\u200b\u7684\u200b\u76f8\u5173\u200b\u7b97\u6cd5\u200b\u3002</p> \u200b\u64cd\u4f5c\u200b \u200b\u6a21\u578b\u200b Deformable Convolution/Modulated Deformable Convolution DCN\u3001Guided Anchoring\u3001RepPoints\u3001CentripetalNet\u3001VFNet\u3001CascadeRPN\u3001NAS-FCOS\u3001DetectoRS MaskedConv2d Guided Anchoring CARAFE CARAFE SyncBatchNorm ResNeSt"},{"location":"get_started/#google-colab","title":"\u5728\u200b Google Colab \u200b\u4e2d\u200b\u5b89\u88c5","text":"<p>Google Colab \u200b\u901a\u5e38\u200b\u5df2\u7ecf\u200b\u5305\u542b\u200b\u4e86\u200b PyTorch \u200b\u73af\u5883\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b MMEngine\uff0cMMCV \u200b\u548c\u200b MMDetection \u200b\u5373\u53ef\u200b\uff0c\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\uff1a</p> <p>\u200b\u6b65\u9aa4\u200b 1. \u200b\u4f7f\u7528\u200b MIM \u200b\u5b89\u88c5\u200b MMEngine \u200b\u548c\u200b MMCV\u3002</p> <pre><code>!pip3 install openmim\n!mim install mmengine\n!mim install \"mmcv&gt;=2.0.0,&lt;2.1.0\"\n</code></pre> <p>\u200b\u6b65\u9aa4\u200b 2. \u200b\u4f7f\u7528\u200b\u6e90\u7801\u200b\u5b89\u88c5\u200b MMDetection\u3002</p> <pre><code>!git clone https://github.com/open-mmlab/mmdetection.git\n%cd mmdetection\n!pip install -e .\n</code></pre> <p>\u200b\u6b65\u9aa4\u200b 3. \u200b\u9a8c\u8bc1\u200b\u5b89\u88c5\u200b\u662f\u5426\u200b\u6210\u529f\u200b\u3002</p> <pre><code>import mmdet\nprint(mmdet.__version__)\n# \u200b\u9884\u671f\u200b\u8f93\u51fa\u200b\uff1a3.0.0 \u200b\u6216\u200b\u5176\u4ed6\u200b\u7248\u672c\u53f7\u200b\n</code></pre> <pre><code>\u200b\u5728\u200b Jupyter Notebook \u200b\u4e2d\u200b\uff0c\u200b\u611f\u53f9\u53f7\u200b `!` \u200b\u7528\u4e8e\u200b\u6267\u884c\u200b\u5916\u90e8\u547d\u4ee4\u200b\uff0c\u200b\u800c\u200b `%cd` \u200b\u662f\u200b\u4e00\u4e2a\u200b[\u200b\u9b54\u672f\u200b\u547d\u4ee4\u200b](https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-cd)\uff0c\u200b\u7528\u4e8e\u200b\u5207\u6362\u200b Python \u200b\u7684\u200b\u5de5\u4f5c\u200b\u8def\u5f84\u200b\u3002\n</code></pre>"},{"location":"get_started/#docker-mmdetection","title":"\u901a\u8fc7\u200b Docker \u200b\u4f7f\u7528\u200b MMDetection","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b Dockerfile \u200b\u6765\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u955c\u50cf\u200b\u3002\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4f60\u200b\u7684\u200b docker \u200b\u7248\u672c\u200b &gt;=19.03\u3002</p> <pre><code># \u200b\u57fa\u4e8e\u200b PyTorch 1.9\uff0cCUDA 11.1 \u200b\u6784\u5efa\u200b\u955c\u50cf\u200b\n# \u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u5176\u4ed6\u200b\u7248\u672c\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u4fee\u6539\u200b Dockerfile\ndocker build -t mmdetection docker/\n</code></pre> <p>\u200b\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u8fd0\u884c\u200b Docker \u200b\u955c\u50cf\u200b\uff1a</p> <pre><code>docker run --gpus all --shm-size=8g -it -v {DATA_DIR}:/mmdetection/data mmdetection\n</code></pre>"},{"location":"get_started/#_7","title":"\u6392\u9664\u6545\u969c","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u5b89\u88c5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9047\u5230\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u8bf7\u200b\u5148\u200b\u67e5\u770b\u200b FAQ \u200b\u9875\u9762\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u627e\u5230\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b GitHub \u200b\u4e0a\u200b\u63d0\u51fa\u200b\u4e00\u4e2a\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"get_started/#mmdetection","title":"\u4f7f\u7528\u200b\u591a\u4e2a\u200b MMDetection \u200b\u7248\u672c\u200b\u8fdb\u884c\u200b\u5f00\u53d1","text":"<p>\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u811a\u672c\u200b\u5df2\u7ecf\u200b\u5728\u200b <code>PYTHONPATH</code> \u200b\u4e2d\u200b\u8fdb\u884c\u200b\u4e86\u200b\u4fee\u6539\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u811a\u672c\u200b\u4f7f\u7528\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b MMDetection\u3002</p> <p>\u200b\u8981\u200b\u4f7f\u200b\u73af\u5883\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u9ed8\u8ba4\u200b\u7248\u672c\u200b\u7684\u200b MMDetection \u200b\u800c\u200b\u4e0d\u662f\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b\u51fa\u73b0\u200b\u5728\u200b\u76f8\u5173\u200b\u811a\u672c\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>PYTHONPATH=\"$(dirname $0)/..\":$PYTHONPATH\n</code></pre>"},{"location":"model_zoo/","title":"\u6a21\u578b\u5e93","text":""},{"location":"model_zoo/#_2","title":"\u955c\u50cf\u200b\u5730\u5740","text":"<p>\u200b\u4ece\u200b MMDetection V2.0 \u200b\u8d77\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u901a\u8fc7\u200b\u963f\u91cc\u200b\u4e91\u200b\u7ef4\u62a4\u200b\u6a21\u578b\u5e93\u200b\u3002V1.x \u200b\u7248\u672c\u200b\u7684\u200b\u6a21\u578b\u200b\u5df2\u7ecf\u200b\u5f03\u7528\u200b\u3002</p>"},{"location":"model_zoo/#_3","title":"\u5171\u540c\u200b\u8bbe\u7f6e","text":"<ul> <li>\u200b\u6240\u6709\u200b\u6a21\u578b\u200b\u90fd\u200b\u662f\u200b\u5728\u200b <code>coco_2017_train</code> \u200b\u4e0a\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u5728\u200b <code>coco_2017_val</code> \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b\u3002</li> <li>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\u3002</li> <li>\u200b\u6240\u6709\u200b pytorch-style \u200b\u7684\u200b ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u6765\u81ea\u200b PyTorch \u200b\u7684\u200b\u6a21\u578b\u5e93\u200b\uff0ccaffe-style \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u6765\u81ea\u200b detectron2 \u200b\u6700\u65b0\u200b\u5f00\u6e90\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</li> <li>\u200b\u4e3a\u4e86\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u4ee3\u7801\u200b\u5e93\u200b\u516c\u5e73\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u6587\u6863\u200b\u4e2d\u6240\u5199\u200b\u7684\u200b GPU \u200b\u5185\u5b58\u200b\u662f\u200b8\u200b\u4e2a\u200b GPU \u200b\u7684\u200b <code>torch.cuda.max_memory_allocated()</code> \u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u6b64\u503c\u200b\u901a\u5e38\u200b\u5c0f\u4e8e\u200b nvidia-smi \u200b\u663e\u793a\u200b\u7684\u200b\u503c\u200b\u3002</li> <li>\u200b\u6211\u4eec\u200b\u4ee5\u200b\u7f51\u7edc\u200b forward \u200b\u548c\u200b\u540e\u5904\u7406\u200b\u7684\u200b\u65f6\u95f4\u200b\u52a0\u200b\u548c\u200b\u4f5c\u4e3a\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\uff0c\u200b\u4e0d\u200b\u5305\u542b\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u65f6\u95f4\u200b\u3002\u200b\u6240\u6709\u200b\u7ed3\u679c\u200b\u901a\u8fc7\u200b benchmark.py \u200b\u811a\u672c\u200b\u8ba1\u7b97\u200b\u6240\u5f97\u200b\u3002\u200b\u8be5\u200b\u811a\u672c\u200b\u4f1a\u200b\u8ba1\u7b97\u200b\u63a8\u7406\u200b 2000 \u200b\u5f20\u200b\u56fe\u50cf\u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u3002</li> </ul>"},{"location":"model_zoo/#imagenet","title":"ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b","text":"<p>\u200b\u901a\u8fc7\u200b ImageNet \u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u662f\u200b\u5f88\u200b\u5e38\u89c1\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002\u200b\u6240\u6709\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u94fe\u63a5\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u5728\u200b open_mmlab \u200b\u4e2d\u200b\u627e\u5230\u200b\u3002\u200b\u6839\u636e\u200b <code>img_norm_cfg</code> \u200b\u548c\u200b\u539f\u59cb\u200b\u6743\u91cd\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6240\u6709\u200b ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>TorchVision\uff1atorchvision \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff0c\u200b\u5305\u542b\u200b ResNet50, ResNet101\u3002<code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)</code>\u3002</li> <li>Pycls\uff1apycls \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff0c\u200b\u5305\u542b\u200b RegNetX\u3002<code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(   mean=[103.530, 116.280, 123.675], std=[57.375, 57.12, 58.395], to_rgb=False)</code>\u3002</li> <li>MSRA styles\uff1aMSRA \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff0c\u200b\u5305\u542b\u200b ResNet50_Caffe\uff0cResNet101_Caffe\u3002<code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(   mean=[103.530, 116.280, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)</code>\u3002</li> <li>Caffe2 styles\uff1a\u200b\u73b0\u9636\u6bb5\u200b\u53ea\u200b\u5305\u542b\u200b ResNext101_32x8d\u3002<code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(mean=[103.530, 116.280, 123.675], std=[57.375, 57.120, 58.395], to_rgb=False)</code>\u3002</li> <li>Other styles: SSD \u200b\u7684\u200b <code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(mean=[123.675, 116.28, 103.53], std=[1, 1, 1], to_rgb=True)</code>\uff0cYOLOv3 \u200b\u7684\u200b <code>img_norm_cfg</code> \u200b\u4e3a\u200b <code>dict(mean=[0, 0, 0], std=[255., 255., 255.], to_rgb=True)</code>\u3002</li> </ul> <p>MMdetection \u200b\u5e38\u7528\u200b\u5230\u200b\u7684\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\u8868\u200b\u6240\u793a\u200b\uff1a</p> \u200b\u6a21\u578b\u200b \u200b\u6765\u6e90\u200b \u200b\u94fe\u63a5\u200b \u200b\u63cf\u8ff0\u200b ResNet50 TorchVision torchvision \u200b\u4e2d\u200b\u7684\u200b ResNet-50 \u200b\u6765\u81ea\u200b torchvision \u200b\u4e2d\u200b\u7684\u200b ResNet-50\u3002 ResNet101 TorchVision torchvision \u200b\u4e2d\u200b\u7684\u200b ResNet-101 \u200b\u6765\u81ea\u200b torchvision \u200b\u4e2d\u200b\u7684\u200b ResNet-101\u3002 RegNetX Pycls RegNetX_3.2gf\uff0cRegNetX_800mf \u200b\u7b49\u200b \u200b\u6765\u81ea\u200b pycls\u3002 ResNet50_Caffe MSRA MSRA \u200b\u4e2d\u200b\u7684\u200b ResNet-50 \u200b\u7531\u200b Detectron2 \u200b\u4e2d\u200b\u7684\u200b R-50.pkl \u200b\u8f6c\u5316\u200b\u7684\u200b\u526f\u672c\u200b\u3002\u200b\u539f\u59cb\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u6765\u81ea\u200b MSRA \u200b\u4e2d\u200b\u7684\u200b\u539f\u59cb\u200b ResNet-50\u3002 ResNet101_Caffe MSRA MSRA \u200b\u4e2d\u200b\u7684\u200b ResNet-101 \u200b\u7531\u200b Detectron2 \u200b\u4e2d\u200b\u7684\u200b R-101.pkl \u200b\u8f6c\u5316\u200b\u7684\u200b\u526f\u672c\u200b\u3002\u200b\u539f\u59cb\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u6765\u81ea\u200b MSRA \u200b\u4e2d\u200b\u7684\u200b\u539f\u59cb\u200b ResNet-101\u3002 ResNext101_32x8d Caffe2 Caffe2 ResNext101_32x8d \u200b\u7531\u200b Detectron2 \u200b\u4e2d\u200b\u7684\u200b X-101-32x8d.pkl \u200b\u8f6c\u5316\u200b\u7684\u200b\u526f\u672c\u200b\u3002\u200b\u539f\u59cb\u200b ResNeXt-101-32x8d \u200b\u7531\u200b FB \u200b\u4f7f\u7528\u200b Caffe2 \u200b\u8bad\u7ec3\u200b\u3002"},{"location":"model_zoo/#baselines","title":"Baselines","text":""},{"location":"model_zoo/#rpn","title":"RPN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b RPN\u3002</p>"},{"location":"model_zoo/#faster-r-cnn","title":"Faster R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Faster R-CNN\u3002</p>"},{"location":"model_zoo/#mask-r-cnn","title":"Mask R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Mask R-CNN\u3002</p>"},{"location":"model_zoo/#fast-r-cnn-proposals","title":"Fast R-CNN (\u200b\u4f7f\u7528\u200b\u63d0\u524d\u200b\u8ba1\u7b97\u200b\u7684\u200b proposals)","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Fast R-CNN\u3002</p>"},{"location":"model_zoo/#retinanet","title":"RetinaNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b RetinaNet\u3002</p>"},{"location":"model_zoo/#cascade-r-cnn-and-cascade-mask-r-cnn","title":"Cascade R-CNN and Cascade Mask R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Cascade R-CNN\u3002</p>"},{"location":"model_zoo/#hybrid-task-cascade-htc","title":"Hybrid Task Cascade (HTC)","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b HTC\u3002</p>"},{"location":"model_zoo/#ssd","title":"SSD","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b SSD\u3002</p>"},{"location":"model_zoo/#group-normalization-gn","title":"Group Normalization (GN)","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Group Normalization\u3002</p>"},{"location":"model_zoo/#weight-standardization","title":"Weight Standardization","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Weight Standardization\u3002</p>"},{"location":"model_zoo/#deformable-convolution-v2","title":"Deformable Convolution v2","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Deformable Convolutional Networks\u3002</p>"},{"location":"model_zoo/#carafe-content-aware-reassembly-of-features","title":"CARAFE: Content-Aware ReAssembly of FEatures","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b CARAFE\u3002</p>"},{"location":"model_zoo/#instaboost","title":"Instaboost","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Instaboost\u3002</p>"},{"location":"model_zoo/#libra-r-cnn","title":"Libra R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Libra R-CNN\u3002</p>"},{"location":"model_zoo/#guided-anchoring","title":"Guided Anchoring","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Guided Anchoring\u3002</p>"},{"location":"model_zoo/#fcos","title":"FCOS","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b FCOS\u3002</p>"},{"location":"model_zoo/#foveabox","title":"FoveaBox","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b FoveaBox\u3002</p>"},{"location":"model_zoo/#reppoints","title":"RepPoints","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b RepPoints\u3002</p>"},{"location":"model_zoo/#freeanchor","title":"FreeAnchor","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b FreeAnchor\u3002</p>"},{"location":"model_zoo/#grid-r-cnn-plus","title":"Grid R-CNN (plus)","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Grid R-CNN\u3002</p>"},{"location":"model_zoo/#ghm","title":"GHM","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b GHM\u3002</p>"},{"location":"model_zoo/#gcnet","title":"GCNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b GCNet\u3002</p>"},{"location":"model_zoo/#hrnet","title":"HRNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b HRNet\u3002</p>"},{"location":"model_zoo/#mask-scoring-r-cnn","title":"Mask Scoring R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Mask Scoring R-CNN\u3002</p>"},{"location":"model_zoo/#train-from-scratch","title":"Train from Scratch","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Rethinking ImageNet Pre-training\u3002</p>"},{"location":"model_zoo/#nas-fpn","title":"NAS-FPN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b NAS-FPN\u3002</p>"},{"location":"model_zoo/#atss","title":"ATSS","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b ATSS\u3002</p>"},{"location":"model_zoo/#fsaf","title":"FSAF","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b FSAF\u3002</p>"},{"location":"model_zoo/#regnetx","title":"RegNetX","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b RegNet\u3002</p>"},{"location":"model_zoo/#res2net","title":"Res2Net","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Res2Net\u3002</p>"},{"location":"model_zoo/#groie","title":"GRoIE","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b GRoIE\u3002</p>"},{"location":"model_zoo/#dynamic-r-cnn","title":"Dynamic R-CNN","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Dynamic R-CNN\u3002</p>"},{"location":"model_zoo/#pointrend","title":"PointRend","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b PointRend\u3002</p>"},{"location":"model_zoo/#detectors","title":"DetectoRS","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b DetectoRS\u3002</p>"},{"location":"model_zoo/#generalized-focal-loss","title":"Generalized Focal Loss","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Generalized Focal Loss\u3002</p>"},{"location":"model_zoo/#cornernet","title":"CornerNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b CornerNet\u3002</p>"},{"location":"model_zoo/#yolov3","title":"YOLOv3","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b YOLOv3\u3002</p>"},{"location":"model_zoo/#paa","title":"PAA","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b PAA\u3002</p>"},{"location":"model_zoo/#sabl","title":"SABL","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b SABL\u3002</p>"},{"location":"model_zoo/#centripetalnet","title":"CentripetalNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b CentripetalNet\u3002</p>"},{"location":"model_zoo/#resnest","title":"ResNeSt","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b ResNeSt\u3002</p>"},{"location":"model_zoo/#detr","title":"DETR","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b DETR\u3002</p>"},{"location":"model_zoo/#deformable-detr","title":"Deformable DETR","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Deformable DETR\u3002</p>"},{"location":"model_zoo/#autoassign","title":"AutoAssign","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b AutoAssign\u3002</p>"},{"location":"model_zoo/#yolof","title":"YOLOF","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b YOLOF\u3002</p>"},{"location":"model_zoo/#seesaw-loss","title":"Seesaw Loss","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b Seesaw Loss\u3002</p>"},{"location":"model_zoo/#centernet","title":"CenterNet","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b CenterNet\u3002</p>"},{"location":"model_zoo/#yolox","title":"YOLOX","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b YOLOX\u3002</p>"},{"location":"model_zoo/#pvt","title":"PVT","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b PVT\u3002</p>"},{"location":"model_zoo/#solo","title":"SOLO","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b SOLO\u3002</p>"},{"location":"model_zoo/#queryinst","title":"QueryInst","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b QueryInst\u3002</p>"},{"location":"model_zoo/#other-datasets","title":"Other datasets","text":"<p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u5728\u200b PASCAL VOC\uff0cCityscapes \u200b\u548c\u200b WIDER FACE \u200b\u4e0a\u200b\u5bf9\u200b\u4e00\u4e9b\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u4e86\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u3002</p>"},{"location":"model_zoo/#pre-trained-models","title":"Pre-trained Models","text":"<p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u901a\u8fc7\u200b\u591a\u200b\u5c3a\u5ea6\u200b\u8bad\u7ec3\u200b\u548c\u200b\u66f4\u957f\u200b\u7684\u200b\u8bad\u7ec3\u200b\u7b56\u7565\u200b\u6765\u200b\u8bad\u7ec3\u200b\u7528\u200b ResNet-50 \u200b\u548c\u200b RegNetX-3.2G \u200b\u4f5c\u4e3a\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b Faster R-CNN \u200b\u548c\u200b Mask R-CNN\u3002\u200b\u8fd9\u4e9b\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"model_zoo/#_4","title":"\u901f\u5ea6\u200b\u57fa\u51c6","text":""},{"location":"model_zoo/#_5","title":"\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u57fa\u51c6","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b analyze_logs.py \u200b\u6765\u200b\u5f97\u5230\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u8fed\u4ee3\u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u3002\u200b\u793a\u4f8b\u200b\u8bf7\u200b\u53c2\u8003\u200b Log Analysis\u3002</p> <p>\u200b\u6211\u4eec\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u6d41\u884c\u200b\u6846\u67b6\u200b\u7684\u200b Mask R-CNN \u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff08\u200b\u6570\u636e\u200b\u662f\u4ece\u200b detectron2 \u200b\u590d\u5236\u200b\u800c\u200b\u6765\u200b\uff09\u3002\u200b\u5728\u200b mmdetection \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b mask-rcnn_r50-caffe_fpn_poly-1x_coco_v1.py \u200b\u8fdb\u884c\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u3002\u200b\u5b83\u200b\u4e0e\u200b detectron2 \u200b\u7684\u200b mask_rcnn_R_50_FPN_noaug_1x.yaml \u200b\u8bbe\u7f6e\u200b\u5b8c\u5168\u200b\u4e00\u6837\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u548c\u200b\u8bad\u7ec3\u200b log \u200b\u4f5c\u4e3a\u200b\u53c2\u8003\u200b\u3002\u200b\u4e3a\u4e86\u200b\u8df3\u8fc7\u200b GPU \u200b\u9884\u70ed\u200b\u65f6\u95f4\u200b\uff0c\u200b\u541e\u5410\u91cf\u200b\u6309\u7167\u200b100-500\u200b\u6b21\u200b\u8fed\u4ee3\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5e73\u5747\u200b\u541e\u5410\u91cf\u200b\u6765\u200b\u8ba1\u7b97\u200b\u3002</p> \u200b\u6846\u67b6\u200b \u200b\u541e\u5410\u91cf\u200b (img/s) Detectron2 62 MMDetection 61 maskrcnn-benchmark 53 tensorpack 50 simpledet 39 Detectron 19 matterport/Mask_RCNN 14"},{"location":"model_zoo/#_6","title":"\u63a8\u7406\u200b\u65f6\u95f4\u200b\u57fa\u51c6","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b benchmark.py \u200b\u5bf9\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\u8fdb\u884c\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u3002\u200b\u6b64\u200b\u811a\u672c\u200b\u5c06\u200b\u63a8\u7406\u200b 2000 \u200b\u5f20\u200b\u56fe\u7247\u200b\u5e76\u200b\u8ba1\u7b97\u200b\u5ffd\u7565\u200b\u524d\u200b 5 \u200b\u6b21\u200b\u63a8\u7406\u200b\u7684\u200b\u5e73\u5747\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\u3002\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>LOG-INTERVAL</code> \u200b\u6765\u200b\u6539\u53d8\u200b log \u200b\u8f93\u51fa\u200b\u95f4\u9694\u200b\uff08\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 50\uff09\u3002</p> <pre><code>python tools/benchmark.py ${CONFIG} ${CHECKPOINT} [--log-interval $[LOG-INTERVAL]] [--fuse-conv-bn]\n</code></pre> <p>\u200b\u6a21\u578b\u5e93\u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u6a21\u578b\u200b\u5728\u200b\u57fa\u51c6\u200b\u6d4b\u91cf\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\u65f6\u200b\u90fd\u200b\u6ca1\u200b\u8bbe\u7f6e\u200b <code>fuse-conv-bn</code>, \u200b\u6b64\u200b\u8bbe\u7f6e\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\u66f4\u200b\u77ed\u200b\u3002</p>"},{"location":"model_zoo/#detectron2","title":"\u4e0e\u200b Detectron2 \u200b\u5bf9\u6bd4","text":"<p>\u200b\u6211\u4eec\u200b\u5728\u200b\u901f\u5ea6\u200b\u548c\u200b\u7cbe\u5ea6\u200b\u65b9\u9762\u200b\u5bf9\u200b mmdetection \u200b\u548c\u200b Detectron2 \u200b\u8fdb\u884c\u200b\u5bf9\u6bd4\u200b\u3002\u200b\u5bf9\u6bd4\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b detectron2 \u200b\u7684\u200b commit id \u200b\u4e3a\u200b 185c27e(30/4/2020)\u3002 \u200b\u4e3a\u4e86\u200b\u516c\u5e73\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u6211\u4eec\u200b\u6240\u6709\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u90fd\u200b\u5728\u200b\u540c\u4e00\u200b\u673a\u5668\u200b\u4e0b\u200b\u8fdb\u884c\u200b\u3002</p>"},{"location":"model_zoo/#_7","title":"\u786c\u4ef6","text":"<ul> <li>8 NVIDIA Tesla V100 (32G) GPUs</li> <li>Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz</li> </ul>"},{"location":"model_zoo/#_8","title":"\u8f6f\u4ef6\u200b\u73af\u5883","text":"<ul> <li>Python 3.7</li> <li>PyTorch 1.4</li> <li>CUDA 10.1</li> <li>CUDNN 7.6.03</li> <li>NCCL 2.4.08</li> </ul>"},{"location":"model_zoo/#_9","title":"\u7cbe\u5ea6","text":"\u6a21\u578b\u200b \u200b\u8bad\u7ec3\u200b\u7b56\u7565\u200b Detectron2 mmdetection \u200b\u4e0b\u8f7d\u200b Faster R-CNN 1x 37.9 38.0 model | log Mask R-CNN 1x 38.6 &amp; 35.2 38.8 &amp; 35.4 model | log Retinanet 1x 36.5 37.0 model | log"},{"location":"model_zoo/#_10","title":"\u8bad\u7ec3\u200b\u901f\u5ea6","text":"<p>\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u4f7f\u7528\u200b s/iter \u200b\u6765\u200b\u5ea6\u91cf\u200b\u3002\u200b\u7ed3\u679c\u200b\u8d8a\u4f4e\u200b\u8d8a\u200b\u597d\u200b\u3002</p> \u200b\u6a21\u578b\u200b Detectron2 mmdetection Faster R-CNN 0.210 0.216 Mask R-CNN 0.261 0.265 Retinanet 0.200 0.205"},{"location":"model_zoo/#_11","title":"\u63a8\u7406\u200b\u901f\u5ea6","text":"<p>\u200b\u63a8\u7406\u200b\u901f\u5ea6\u200b\u901a\u8fc7\u200b\u5355\u5f20\u200b GPU \u200b\u4e0b\u200b\u7684\u200b fps(img/s) \u200b\u6765\u200b\u5ea6\u91cf\u200b\uff0c\u200b\u8d8a\u9ad8\u8d8a\u200b\u597d\u200b\u3002 \u200b\u4e3a\u4e86\u200b\u4e0e\u200b Detectron2 \u200b\u4fdd\u6301\u4e00\u81f4\u200b\uff0c\u200b\u6211\u4eec\u200b\u6240\u5199\u200b\u7684\u200b\u63a8\u7406\u200b\u65f6\u95f4\u200b\u9664\u53bb\u200b\u4e86\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u65f6\u95f4\u200b\u3002 \u200b\u5bf9\u4e8e\u200b Mask RCNN\uff0c\u200b\u6211\u4eec\u200b\u53bb\u200b\u9664\u4e86\u200b\u540e\u5904\u7406\u200b\u4e2d\u200b RLE \u200b\u7f16\u7801\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002 \u200b\u6211\u4eec\u200b\u5728\u200b\u62ec\u53f7\u200b\u4e2d\u200b\u7ed9\u51fa\u200b\u4e86\u200b\u5b98\u65b9\u200b\u7ed9\u51fa\u200b\u7684\u200b\u901f\u5ea6\u200b\u3002\u200b\u7531\u4e8e\u200b\u786c\u4ef6\u200b\u5dee\u5f02\u200b\uff0c\u200b\u5b98\u65b9\u200b\u7ed9\u51fa\u200b\u7684\u200b\u901f\u5ea6\u200b\u4f1a\u200b\u6bd4\u200b\u6211\u4eec\u200b\u6240\u200b\u6d4b\u8bd5\u200b\u5f97\u5230\u200b\u7684\u200b\u901f\u5ea6\u200b\u5feb\u200b\u4e00\u4e9b\u200b\u3002</p> \u200b\u6a21\u578b\u200b Detectron2 mmdetection Faster R-CNN 25.6 (26.3) 22.2 Mask R-CNN 22.5 (23.3) 19.6 Retinanet 17.8 (18.2) 20.6"},{"location":"model_zoo/#_12","title":"\u8bad\u7ec3\u200b\u5185\u5b58","text":"\u6a21\u578b\u200b Detectron2 mmdetection Faster R-CNN 3.0 3.8 Mask R-CNN 3.4 3.9 Retinanet 3.9 3.4"},{"location":"overview/","title":"\u6982\u8ff0","text":"<p>\u200b\u672c\u7ae0\u200b\u5411\u200b\u60a8\u200b\u4ecb\u7ecd\u200b MMDetection \u200b\u7684\u200b\u6574\u4f53\u200b\u6846\u67b6\u200b\uff0c\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u8be6\u7ec6\u200b\u7684\u200b\u6559\u7a0b\u200b\u94fe\u63a5\u200b\u3002</p>"},{"location":"overview/#mmdetection","title":"\u4ec0\u4e48\u200b\u662f\u200b MMDetection","text":"<p>MMDetection \u200b\u662f\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5de5\u5177\u7bb1\u200b\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u4e30\u5bcc\u200b\u7684\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u3001\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u3001\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7b97\u6cd5\u200b\u4ee5\u53ca\u200b\u76f8\u5173\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u548c\u200b\u6a21\u5757\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u5b83\u200b\u7684\u200b\u6574\u4f53\u200b\u6846\u67b6\u200b\uff1a</p> <p>MMDetection \u200b\u7531\u200b 7 \u200b\u4e2a\u200b\u4e3b\u8981\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b\uff0capis\u3001structures\u3001datasets\u3001models\u3001engine\u3001evaluation \u200b\u548c\u200b visualization\u3002</p> <ul> <li>apis \u200b\u4e3a\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\u63d0\u4f9b\u200b\u9ad8\u7ea7\u200b API\u3002</li> <li>structures \u200b\u63d0\u4f9b\u200b bbox\u3001mask \u200b\u548c\u200b DetDataSample \u200b\u7b49\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002</li> <li>datasets \u200b\u652f\u6301\u200b\u7528\u4e8e\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u3001\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u548c\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7684\u200b\u5404\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> <li>transforms \u200b\u5305\u542b\u200b\u5404\u79cd\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u53d8\u6362\u200b\u3002</li> <li>samplers \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u5668\u200b\u91c7\u6837\u200b\u7b56\u7565\u200b\u3002</li> <li>models \u200b\u662f\u200b\u68c0\u6d4b\u5668\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u5305\u542b\u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b\u4e0d\u540c\u200b\u7ec4\u4ef6\u200b\u3002</li> <li>detectors \u200b\u5b9a\u4e49\u200b\u6240\u6709\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u7c7b\u200b\u3002</li> <li>data_preprocessors \u200b\u7528\u4e8e\u200b\u9884\u5904\u7406\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u3002</li> <li>backbones \u200b\u5305\u542b\u200b\u5404\u79cd\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u3002</li> <li>necks \u200b\u5305\u542b\u200b\u5404\u79cd\u200b\u6a21\u578b\u200b\u9888\u90e8\u200b\u7ec4\u4ef6\u200b\u3002</li> <li>dense_heads \u200b\u5305\u542b\u200b\u6267\u884c\u200b\u5bc6\u96c6\u200b\u9884\u6d4b\u200b\u7684\u200b\u5404\u79cd\u200b\u68c0\u6d4b\u200b\u5934\u200b\u3002</li> <li>roi_heads \u200b\u5305\u542b\u200b\u4ece\u200b RoI \u200b\u9884\u6d4b\u200b\u7684\u200b\u5404\u79cd\u200b\u68c0\u6d4b\u200b\u5934\u200b\u3002</li> <li>seg_heads \u200b\u5305\u542b\u200b\u5404\u79cd\u200b\u5206\u5272\u200b\u5934\u200b\u3002</li> <li>losses \u200b\u5305\u542b\u200b\u5404\u79cd\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002</li> <li>task_modules \u200b\u4e3a\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b\u63d0\u4f9b\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f8b\u5982\u200b assigners\u3001samplers\u3001box coders \u200b\u548c\u200b prior generators\u3002</li> <li>layers \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u7684\u200b\u795e\u7ecf\u200b\u7f51\u7edc\u5c42\u200b\u3002</li> <li>engine \u200b\u662f\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002</li> <li>runner \u200b\u4e3a\u200b MMEngine \u200b\u7684\u200b\u6267\u884c\u5668\u200b\u63d0\u4f9b\u200b\u6269\u5c55\u200b\u3002</li> <li>schedulers \u200b\u63d0\u4f9b\u200b\u7528\u4e8e\u200b\u8c03\u6574\u200b\u4f18\u5316\u200b\u8d85\u200b\u53c2\u6570\u200b\u7684\u200b\u8c03\u5ea6\u200b\u7a0b\u5e8f\u200b\u3002</li> <li>optimizers \u200b\u63d0\u4f9b\u200b\u4f18\u5316\u200b\u5668\u200b\u548c\u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u3002</li> <li>hooks \u200b\u63d0\u4f9b\u200b\u6267\u884c\u5668\u200b\u7684\u200b\u5404\u79cd\u200b\u94a9\u5b50\u200b\u3002</li> <li>evaluation \u200b\u4e3a\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u63d0\u4f9b\u200b\u4e0d\u540c\u200b\u7684\u200b\u6307\u6807\u200b\u3002</li> <li>visualization \u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u3002</li> </ul>"},{"location":"overview/#_2","title":"\u5982\u4f55\u200b\u4f7f\u7528\u200b\u672c\u200b\u6307\u5357","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b MMDetection \u200b\u7684\u200b\u8be6\u7ec6\u200b\u6307\u5357\u200b\uff1a</p> <ol> <li> <p>\u200b\u5b89\u88c5\u200b\u8bf4\u660e\u200b\u89c1\u200b\u5f00\u59cb\u200b\u4f60\u200b\u7684\u200b\u7b2c\u4e00\u6b65\u200b\u3002</p> </li> <li> <p>MMDetection \u200b\u7684\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u8bf7\u200b\u53c2\u8003\u200b\u4ee5\u4e0b\u200b\u6559\u7a0b\u200b\u3002</p> </li> <li> <p>\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b</p> </li> <li> <p>\u200b\u5b9e\u7528\u5de5\u5177\u200b</p> </li> <li> <p>\u200b\u53c2\u8003\u200b\u4ee5\u4e0b\u200b\u6559\u7a0b\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b\uff1a</p> </li> <li> <p>\u200b\u57fa\u7840\u200b\u6982\u5ff5\u200b</p> </li> <li> <p>\u200b\u7ec4\u4ef6\u200b\u5b9a\u5236\u200b</p> </li> <li> <p>\u200b\u5bf9\u4e8e\u200b MMDetection 2.x \u200b\u7248\u672c\u200b\u7684\u200b\u7528\u6237\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8fc1\u79fb\u200b\u6307\u5357\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u5b8c\u6210\u200b\u65b0\u200b\u7248\u672c\u200b\u7684\u200b\u9002\u914d\u200b\u3002</p> </li> </ol>"},{"location":"advanced_guides/conventions/","title":"\u9ed8\u8ba4\u200b\u7ea6\u5b9a","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u628a\u200b MMDetection \u200b\u4fee\u6539\u200b\u4e3a\u200b\u81ea\u5df1\u200b\u7684\u200b\u9879\u76ee\u200b\uff0c\u200b\u8bf7\u200b\u9075\u5faa\u200b\u4e0b\u9762\u200b\u7684\u200b\u7ea6\u5b9a\u200b\u3002</p>"},{"location":"advanced_guides/conventions/#shape","title":"\u5173\u4e8e\u200b\u56fe\u7247\u200b shape \u200b\u987a\u5e8f\u200b\u7684\u200b\u8bf4\u660e","text":"<p>\u200b\u5728\u200bOpenMMLab 2.0\u200b\u4e2d\u200b\uff0c \u200b\u4e3a\u4e86\u200b\u4e0e\u200b OpenCV \u200b\u7684\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u76f8\u4e00\u81f4\u200b\uff0c\u200b\u56fe\u7247\u200b\u5904\u7406\u200b pipeline \u200b\u4e2d\u200b\u5173\u4e8e\u200b\u56fe\u50cf\u200b shape \u200b\u7684\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u603b\u662f\u200b\u4ee5\u200b <code>(width, height)</code> \u200b\u7684\u200b\u987a\u5e8f\u6392\u5217\u200b\u3002 \u200b\u76f8\u53cd\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u8ba1\u7b97\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u7ecf\u8fc7\u200b pipeline \u200b\u548c\u200b model \u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u7684\u200b\u987a\u5e8f\u200b\u662f\u200b <code>(height, width)</code>\u3002\u200b\u5177\u4f53\u6765\u8bf4\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u200b pipeline \u200b\u5904\u7406\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e2d\u200b\uff0c\u200b\u5b57\u6bb5\u200b\u548c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u542b\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>img_shape: (height, width)</li> <li>ori_shape: (height, width)</li> <li>pad_shape: (height, width)</li> <li>batch_input_shape: (height, width)</li> </ul> <p>\u200b\u4ee5\u200b <code>Mosaic</code> \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u5176\u200b\u521d\u59cb\u5316\u200b\u53c2\u6570\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>@TRANSFORMS.register_module()\nclass Mosaic(BaseTransform):\n    def __init__(self,\n                img_scale: Tuple[int, int] = (640, 640),\n                center_ratio_range: Tuple[float, float] = (0.5, 1.5),\n                bbox_clip_border: bool = True,\n                pad_val: float = 114.0,\n                prob: float = 1.0) -&gt; None:\n       ...\n\n       # img_scale \u200b\u987a\u5e8f\u200b\u5e94\u8be5\u200b\u662f\u200b (width, height)\n       self.img_scale = img_scale\n\n    def transform(self, results: dict) -&gt; dict:\n        ...\n\n        results['img'] = mosaic_img\n        # (height, width)\n        results['img_shape'] = mosaic_img.shape[:2]\n</code></pre>"},{"location":"advanced_guides/conventions/#_2","title":"\u635f\u5931","text":"<p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c<code>model(**data)</code> \u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\uff0c\u200b\u5305\u542b\u200b\u7740\u200b\u6240\u6709\u200b\u7684\u200b\u635f\u5931\u200b\u548c\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u5c06\u4f1a\u200b\u7531\u200b <code>model(**data)</code> \u200b\u8fd4\u56de\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b bbox head \u200b\u4e2d\u200b\uff0c</p> <pre><code>class BBoxHead(nn.Module):\n    ...\n    def loss(self, ...):\n        losses = dict()\n        # \u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\n        losses['loss_cls'] = self.loss_cls(...)\n        # \u200b\u5206\u7c7b\u200b\u51c6\u786e\u7387\u200b\n        losses['acc'] = accuracy(...)\n        # \u200b\u8fb9\u754c\u200b\u6846\u200b\u635f\u5931\u200b\n        losses['loss_bbox'] = self.loss_bbox(...)\n        return losses\n</code></pre> <p><code>'bbox_head.loss()'</code> \u200b\u5728\u200b\u6a21\u578b\u200b forward \u200b\u9636\u6bb5\u200b\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\u3002\u200b\u8fd4\u56de\u200b\u7684\u200b\u5b57\u5178\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e86\u200b <code>'loss_bbox'</code>,<code>'loss_cls'</code>,<code>'acc'</code>\u3002\u200b\u53ea\u6709\u200b <code>'loss_bbox'</code>, <code>'loss_cls'</code> \u200b\u4f1a\u200b\u88ab\u200b\u7528\u4e8e\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\uff0c<code>'acc'</code> \u200b\u53ea\u4f1a\u200b\u88ab\u200b\u4f5c\u4e3a\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u6765\u200b\u76d1\u63a7\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u9ed8\u8ba4\u200b\uff0c\u200b\u53ea\u6709\u200b\u90a3\u4e9b\u200b\u952e\u200b\u7684\u200b\u540d\u79f0\u200b\u4e2d\u200b\u5305\u542b\u200b <code>'loss'</code> \u200b\u7684\u200b\u503c\u4f1a\u200b\u88ab\u200b\u7528\u4e8e\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u884c\u4e3a\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b <code>BaseDetector.train_step()</code> \u200b\u6765\u200b\u6539\u53d8\u200b\u3002</p>"},{"location":"advanced_guides/conventions/#proposals","title":"\u7a7a\u200b proposals","text":"<p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e3a\u200b\u4e24\u200b\u9636\u6bb5\u200b\u65b9\u6cd5\u200b\u4e2d\u7a7a\u200b proposals \u200b\u7684\u200b\u60c5\u51b5\u200b\u589e\u52a0\u200b\u4e86\u200b\u7279\u6b8a\u200b\u5904\u7406\u200b\u548c\u200b\u5355\u5143\u6d4b\u8bd5\u200b\u3002\u200b\u6211\u4eec\u200b\u540c\u65f6\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u6574\u4e2a\u200b batch \u200b\u548c\u200b\u5355\u4e00\u200b\u56fe\u7247\u200b\u4e2d\u7a7a\u200b proposals \u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b CascadeRoIHead \u200b\u4e2d\u200b\uff0c</p> <pre><code># \u200b\u7b80\u5355\u200b\u7684\u200b\u6d4b\u8bd5\u200b\n...\n\n# \u200b\u5728\u200b\u6574\u4e2a\u200b batch\u200b\u4e2d\u200b \u200b\u90fd\u200b\u6ca1\u6709\u200b proposals\nif rois.shape[0] == 0:\n    bbox_results = [[\n        np.zeros((0, 5), dtype=np.float32)\n        for _ in range(self.bbox_head[-1].num_classes)\n    ]] * num_imgs\n    if self.with_mask:\n        mask_classes = self.mask_head[-1].num_classes\n        segm_results = [[[] for _ in range(mask_classes)]\n                        for _ in range(num_imgs)]\n        results = list(zip(bbox_results, segm_results))\n    else:\n        results = bbox_results\n    return results\n...\n\n# \u200b\u5728\u200b\u5355\u5f20\u200b\u56fe\u7247\u200b\u4e2d\u200b\u6ca1\u6709\u200b proposals\nfor i in range(self.num_stages):\n    ...\n    if i &lt; self.num_stages - 1:\n          for j in range(num_imgs):\n                # \u200b\u5904\u7406\u200b\u7a7a\u200b proposals\n                if rois[j].shape[0] &gt; 0:\n                    bbox_label = cls_score[j][:, :-1].argmax(dim=1)\n                    refine_roi = self.bbox_head[i].regress_by_class(\n                         rois[j], bbox_label[j], bbox_pred[j], img_metas[j])\n                    refine_roi_list.append(refine_roi)\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6709\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b <code>RoIHead</code>, \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5904\u7406\u200b\u7a7a\u200b proposals \u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p>"},{"location":"advanced_guides/conventions/#_3","title":"\u5168\u666f\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u652f\u6301\u200b\u4e86\u200b COCO \u200b\u5168\u666f\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6\u200b <code>CocoPanopticDataset</code>\u3002\u200b\u5bf9\u4e8e\u200b\u5b83\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u58f0\u660e\u200b\u4e00\u4e9b\u200b\u9ed8\u8ba4\u200b\u7ea6\u5b9a\u200b\u3002</p> <ol> <li>\u200b\u5728\u200b mmdet\\&lt;=2.16.0 \u200b\u65f6\u200b\uff0c\u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6807\u6ce8\u200b\u4e2d\u200b\u7684\u200b\u524d\u666f\u200b\u548c\u200b\u80cc\u666f\u200b\u6807\u7b7e\u200b\u8303\u56f4\u200b\u4e0e\u200b MMDetection \u200b\u4e2d\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u89c4\u5b9a\u200b\u6709\u6240\u4e0d\u540c\u200b\u3002\u200b\u6807\u7b7e\u200b <code>0</code> \u200b\u4ee3\u8868\u200b <code>VOID</code> \u200b\u6807\u7b7e\u200b\u3002    \u200b\u4ece\u200b mmdet=2.17.0 \u200b\u5f00\u59cb\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u548c\u200b\u6846\u200b\u7684\u200b\u7c7b\u522b\u200b\u6807\u6ce8\u200b\u4fdd\u6301\u4e00\u81f4\u200b\uff0c\u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6807\u6ce8\u200b\u7684\u200b\u7c7b\u522b\u200b\u6807\u7b7e\u200b\u4e5f\u200b\u6539\u4e3a\u200b\u4ece\u200b <code>0</code> \u200b\u5f00\u59cb\u200b\uff0c\u200b\u6807\u7b7e\u200b <code>255</code> \u200b\u4ee3\u8868\u200b <code>VOID</code> \u200b\u7c7b\u200b\u3002    \u200b\u4e3a\u4e86\u200b\u8fbe\u6210\u200b\u8fd9\u4e00\u200b\u76ee\u6807\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u6d41\u7a0b\u200b <code>Pad</code> \u200b\u91cc\u200b\u652f\u6301\u200b\u4e86\u200b\u8bbe\u7f6e\u200b <code>seg</code> \u200b\u7684\u200b\u586b\u5145\u200b\u503c\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</li> <li>\u200b\u5728\u200b\u8bc4\u4f30\u200b\u4e2d\u200b\uff0c\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7ed3\u679c\u200b\u5fc5\u987b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u539f\u56fe\u200b\u5927\u5c0f\u200b\u76f8\u540c\u200b\u7684\u200b\u56fe\u200b\u3002\u200b\u7ed3\u679c\u200b\u56fe\u4e2d\u200b\u6bcf\u4e2a\u200b\u50cf\u7d20\u200b\u7684\u200b\u503c\u200b\u6709\u200b\u5982\u6b64\u200b\u5f62\u5f0f\u200b\uff1a<code>instance_id * INSTANCE_OFFSET + category_id</code>\u3002</li> </ol>"},{"location":"advanced_guides/customize_dataset/","title":"\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6","text":""},{"location":"advanced_guides/customize_dataset/#_2","title":"\u652f\u6301\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f","text":"<p>\u200b\u4e3a\u4e86\u200b\u652f\u6301\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u5c06\u200b\u6570\u636e\u200b\u8f6c\u6362\u6210\u200b\u73b0\u6210\u200b\u7684\u200b\u683c\u5f0f\u200b\uff08COCO \u200b\u6216\u8005\u200b PASCAL\uff09\u200b\u6216\u200b\u5c06\u200b\u5176\u200b\u8f6c\u6362\u6210\u200b\u4e2d\u95f4\u200b\u683c\u5f0f\u200b\u3002\u200b\u5f53\u7136\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u4ee5\u200b\u79bb\u7ebf\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff08\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e4b\u524d\u200b\u4f7f\u7528\u200b\u811a\u672c\u200b\u8f6c\u6362\u200b\uff09\u200b\u6216\u8005\u200b\u5728\u7ebf\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff08\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b dataset \u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\uff09\u200b\u6765\u200b\u8f6c\u6362\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5c06\u200b\u6570\u636e\u200b\u8f6c\u6362\u6210\u200b COCO \u200b\u683c\u5f0f\u200b\u5e76\u200b\u4ee5\u200b\u79bb\u7ebf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u5b8c\u6210\u200b\u6570\u636e\u200b\u8f6c\u6362\u200b\u540e\u200b\u53ea\u200b\u9700\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\u7684\u200b\u8def\u5f84\u200b\u548c\u200b\u7c7b\u522b\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"advanced_guides/customize_dataset/#_3","title":"\u5c06\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u73b0\u6709\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f","text":"<p>\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b\u5c06\u200b\u4f60\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u8f6c\u6362\u6210\u200b\u73b0\u6709\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\uff08COCO \u200b\u6216\u8005\u200b PASCAL VOC\uff09</p> <p>COCO \u200b\u683c\u5f0f\u200b\u7684\u200b JSON \u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u6709\u200b\u5982\u4e0b\u200b\u5fc5\u8981\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\uff1a</p> <pre><code>'images': [\n    {\n        'file_name': 'COCO_val2014_000000001268.jpg',\n        'height': 427,\n        'width': 640,\n        'id': 1268\n    },\n    ...\n],\n\n'annotations': [\n    {\n        'segmentation': [[192.81,\n            247.09,\n            ...\n            219.03,\n            249.06]],  # \u200b\u5982\u679c\u200b\u6709\u200b mask \u200b\u6807\u7b7e\u200b\u4e14\u200b\u4e3a\u200b\u591a\u8fb9\u5f62\u200b XY \u200b\u70b9\u200b\u5750\u6807\u200b\u683c\u5f0f\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u4fdd\u8bc1\u200b\u81f3\u5c11\u200b\u5305\u62ec\u200b 3 \u200b\u4e2a\u70b9\u200b\u5750\u6807\u200b\uff0c\u200b\u5426\u5219\u200b\u4e3a\u200b\u65e0\u6548\u200b\u591a\u8fb9\u5f62\u200b\n        'area': 1035.749,\n        'iscrowd': 0,\n        'image_id': 1268,\n        'bbox': [192.81, 224.8, 74.73, 33.43],\n        'category_id': 16,\n        'id': 42986\n    },\n    ...\n],\n\n'categories': [\n    {'id': 0, 'name': 'car'},\n ]\n</code></pre> <p>\u200b\u5728\u200b JSON \u200b\u6587\u4ef6\u200b\u4e2d\u6709\u200b\u4e09\u4e2a\u200b\u5fc5\u8981\u200b\u7684\u200b\u952e\u200b\uff1a</p> <ul> <li><code>images</code>: \u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u56fe\u7247\u200b\u4ee5\u53ca\u200b\u5b83\u4eec\u200b\u7684\u200b\u4fe1\u606f\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>file_name</code>\u3001<code>height</code>\u3001<code>width</code> \u200b\u548c\u200b <code>id</code>\u3002</li> <li><code>annotations</code>: \u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u5b9e\u4f8b\u200b\u6807\u6ce8\u200b\u4fe1\u606f\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002</li> <li><code>categories</code>: \u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u7c7b\u522b\u200b\u540d\u5b57\u200b\u548c\u200b ID \u200b\u7684\u200b\u6570\u7ec4\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b\u6570\u636e\u200b\u9884\u5904\u7406\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f7f\u7528\u200b\u73b0\u6709\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\u6765\u200b\u8bad\u7ec3\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u6709\u200b\u5982\u4e0b\u200b\u4e24\u6b65\u200b\uff08\u200b\u4ee5\u200b COCO \u200b\u4e3a\u4f8b\u200b\uff09\uff1a</p> <ol> <li>\u200b\u4e3a\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002</li> <li>\u200b\u68c0\u67e5\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6807\u6ce8\u200b\u3002</li> </ol> <p>\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u4e3e\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u6765\u200b\u5c55\u793a\u200b\u4e0a\u9762\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4f7f\u7528\u200b\u5305\u62ec\u200b 5 \u200b\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b COCO \u200b\u683c\u5f0f\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u6765\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u73b0\u6709\u200b\u7684\u200b Cascade Mask R-CNN R50-FPN \u200b\u68c0\u6d4b\u5668\u200b</p>"},{"location":"advanced_guides/customize_dataset/#1","title":"1. \u200b\u4e3a\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u6d89\u53ca\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\uff1a</p> <ol> <li><code>dataloaer</code> \u200b\u90e8\u5206\u200b\u3002\u200b\u9700\u8981\u200b\u5728\u200b <code>train_dataloader.dataset</code>\u3001<code>val_dataloader.dataset</code> \u200b\u548c\u200b <code>test_dataloader.dataset</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b <code>metainfo=dict(classes=classes)</code>, \u200b\u5176\u4e2d\u200b classes \u200b\u5fc5\u987b\u200b\u662f\u200b tuple \u200b\u7c7b\u578b\u200b\u3002</li> <li><code>model</code> \u200b\u90e8\u5206\u200b\u4e2d\u200b\u7684\u200b <code>num_classes</code>\u3002\u200b\u9700\u8981\u200b\u5c06\u200b\u9ed8\u8ba4\u503c\u200b\uff08COCO \u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u4e3a\u200b 80\uff09\u200b\u4fee\u6539\u200b\u4e3a\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u200b\u3002</li> </ol> <p><code>configs/my_custom_config.py</code> \u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code># \u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u6765\u81ea\u200b\u57fa\u7840\u200b\u7684\u200b\u914d\u7f6e\u200b\u4ee5\u200b\u66f4\u597d\u200b\u5730\u200b\u8bf4\u660e\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u7684\u200b\u5730\u65b9\u200b\n_base_ = './cascade_mask_rcnn_r50_fpn_1x_coco.py'\n\n# 1. \u200b\u6570\u636e\u200b\u96c6\u200b\u8bbe\u5b9a\u200b\ndataset_type = 'CocoDataset'\nclasses = ('a', 'b', 'c', 'd', 'e')\ndata_root='path/to/your/'\n\ntrain_dataloader = dict(\n    batch_size=2,\n    num_workers=2,\n    dataset=dict(\n        type=dataset_type,\n        # \u200b\u5c06\u200b\u7c7b\u522b\u200b\u540d\u5b57\u200b\u6dfb\u52a0\u200b\u81f3\u200b `metainfo` \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\n        metainfo=dict(classes=classes),\n        data_root=data_root,\n        ann_file='train/annotation_data',\n        data_prefix=dict(img='train/image_data')\n        )\n    )\n\nval_dataloader = dict(\n    batch_size=1,\n    num_workers=2,\n    dataset=dict(\n        type=dataset_type,\n        test_mode=True,\n        # \u200b\u5c06\u200b\u7c7b\u522b\u200b\u540d\u5b57\u200b\u6dfb\u52a0\u200b\u81f3\u200b `metainfo` \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\n        metainfo=dict(classes=classes),\n        data_root=data_root,\n        ann_file='val/annotation_data',\n        data_prefix=dict(img='val/image_data')\n    )\n\ntest_dataloader = dict(\n    batch_size=1,\n    num_workers=2,\n    dataset=dict(\n        type=dataset_type,\n        test_mode=True,\n        # \u200b\u5c06\u200b\u7c7b\u522b\u200b\u540d\u5b57\u200b\u6dfb\u52a0\u200b\u81f3\u200b `metainfo` \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\n        metainfo=dict(classes=classes),\n        data_root=data_root,\n        ann_file='test/annotation_data',\n        data_prefix=dict(img='test/image_data')\n        )\n    )\n\n# 2. \u200b\u6a21\u578b\u200b\u8bbe\u7f6e\u200b\n\n# \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b `num_classes` \u200b\u9ed8\u8ba4\u503c\u200b\u4fee\u6539\u200b\u4e3a\u200b 5\uff08\u200b\u539f\u6765\u200b\u4e3a\u200b80\uff09\nmodel = dict(\n    roi_head=dict(\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                # \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b `num_classes` \u200b\u9ed8\u8ba4\u503c\u200b\u4fee\u6539\u200b\u4e3a\u200b 5\uff08\u200b\u539f\u6765\u200b\u4e3a\u200b 80\uff09\n                num_classes=5),\n            dict(\n                type='Shared2FCBBoxHead',\n                # \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b `num_classes` \u200b\u9ed8\u8ba4\u503c\u200b\u4fee\u6539\u200b\u4e3a\u200b 5\uff08\u200b\u539f\u6765\u200b\u4e3a\u200b 80\uff09\n                num_classes=5),\n            dict(\n                type='Shared2FCBBoxHead',\n                # \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b `num_classes` \u200b\u9ed8\u8ba4\u503c\u200b\u4fee\u6539\u200b\u4e3a\u200b 5\uff08\u200b\u539f\u6765\u200b\u4e3a\u200b 80\uff09\n                num_classes=5)],\n    # \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b `num_classes` \u200b\u9ed8\u8ba4\u503c\u200b\u4fee\u6539\u200b\u4e3a\u200b 5\uff08\u200b\u539f\u6765\u200b\u4e3a\u200b 80\uff09\n    mask_head=dict(num_classes=5)))\n</code></pre>"},{"location":"advanced_guides/customize_dataset/#2","title":"2. \u200b\u68c0\u67e5\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6807\u6ce8","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u662f\u200b COCO \u200b\u683c\u5f0f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u9700\u8981\u200b\u4fdd\u8bc1\u6570\u636e\u200b\u7684\u200b\u6807\u6ce8\u200b\u6ca1\u6709\u200b\u95ee\u9898\u200b\uff1a</p> <ol> <li>\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u4e2d\u200b <code>categories</code> \u200b\u7684\u200b\u957f\u5ea6\u200b\u8981\u200b\u4e0e\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u7684\u200b <code>classes</code> \u200b\u5143\u7ec4\u200b\u957f\u5ea6\u200b\u76f8\u5339\u914d\u200b\uff0c\u200b\u5b83\u4eec\u200b\u90fd\u200b\u8868\u793a\u200b\u6709\u200b\u51e0\u7c7b\u200b\u3002\uff08\u200b\u5982\u200b\u4f8b\u5b50\u200b\u4e2d\u6709\u200b 5 \u200b\u4e2a\u200b\u7c7b\u522b\u200b\uff09</li> <li>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b <code>classes</code> \u200b\u5b57\u6bb5\u200b\u5e94\u200b\u4e0e\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u91cc\u200b <code>categories</code> \u200b\u4e0b\u200b\u7684\u200b <code>name</code> \u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u5143\u7d20\u200b\u4e14\u200b\u987a\u5e8f\u200b\u4e00\u81f4\u200b\u3002MMDetection \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5c06\u200b <code>categories</code> \u200b\u4e2d\u200b\u4e0d\u200b\u8fde\u7eed\u200b\u7684\u200b <code>id</code> \u200b\u6620\u5c04\u200b\u6210\u200b\u8fde\u7eed\u200b\u7684\u200b\u7d22\u5f15\u200b\uff0c\u200b\u56e0\u6b64\u200b <code>categories</code> \u200b\u4e0b\u200b\u7684\u200b <code>name</code>\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u987a\u5e8f\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u6807\u7b7e\u200b\u7684\u200b\u7d22\u5f15\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>classes</code> \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u987a\u5e8f\u200b\u4e5f\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u5230\u200b\u9884\u6d4b\u200b\u6846\u200b\u53ef\u89c6\u5316\u200b\u65f6\u200b\u7684\u200b\u6807\u7b7e\u200b\u3002</li> <li><code>annotations</code> \u200b\u4e2d\u200b\u7684\u200b <code>category_id</code> \u200b\u5fc5\u987b\u200b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u6bd4\u5982\u200b\u6240\u6709\u200b <code>category_id</code> \u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u5e94\u8be5\u200b\u5c5e\u4e8e\u200b <code>categories</code> \u200b\u4e2d\u200b\u7684\u200b <code>id</code>\u3002</li> </ol> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u6807\u6ce8\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>'annotations': [\n    {\n        'segmentation': [[192.81,\n            247.09,\n            ...\n            219.03,\n            249.06]],  # \u200b\u5982\u679c\u200b\u6709\u200b mask \u200b\u6807\u7b7e\u200b\u3002\n        'area': 1035.749,\n        'iscrowd': 0,\n        'image_id': 1268,\n        'bbox': [192.81, 224.8, 74.73, 33.43],\n        'category_id': 16,\n        'id': 42986\n    },\n    ...\n],\n\n# MMDetection \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5c06\u200b `categories` \u200b\u4e2d\u200b\u4e0d\u200b\u8fde\u7eed\u200b\u7684\u200b `id` \u200b\u6620\u5c04\u200b\u6210\u200b\u8fde\u7eed\u200b\u7684\u200b\u7d22\u5f15\u200b\u3002\n'categories': [\n    {'id': 1, 'name': 'a'}, {'id': 3, 'name': 'b'}, {'id': 4, 'name': 'c'}, {'id': 16, 'name': 'd'}, {'id': 17, 'name': 'e'},\n ]\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u6765\u200b\u652f\u6301\u200b CityScapes \u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u811a\u672c\u200b\u5728\u200b cityscapes.py \u200b\u5e76\u4e14\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5fae\u8c03\u200b\u7684\u200b configs.</p> <p>\u200b\u6ce8\u610f\u200b</p> <ol> <li>\u200b\u5bf9\u4e8e\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6\u200b, MMDetection \u200b\u76ee\u524d\u200b\u53ea\u200b\u652f\u6301\u200b\u8bc4\u4f30\u200b COCO \u200b\u683c\u5f0f\u200b\u7684\u200b mask AP.</li> <li>\u200b\u63a8\u8350\u200b\u8bad\u7ec3\u200b\u4e4b\u524d\u200b\u8fdb\u884c\u200b\u79bb\u7ebf\u200b\u8f6c\u6362\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u4f7f\u7528\u200b <code>CocoDataset</code> \u200b\u4e14\u200b\u53ea\u200b\u9700\u200b\u4fee\u6539\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4ee5\u53ca\u200b\u8bad\u7ec3\u200b\u7684\u200b\u79cd\u7c7b\u200b\u3002</li> </ol>"},{"location":"advanced_guides/customize_dataset/#_4","title":"\u8c03\u6574\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\u4e3a\u200b\u4e2d\u95f4\u200b\u683c\u5f0f","text":"<p>\u200b\u5982\u679c\u200b\u4e0d\u60f3\u200b\u5c06\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u8f6c\u6362\u200b\u4e3a\u200b COCO \u200b\u6216\u8005\u200b PASCAL \u200b\u683c\u5f0f\u200b\u4e5f\u200b\u662f\u200b\u53ef\u884c\u200b\u7684\u200b\u3002\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b MMEngine \u200b\u7684\u200b BaseDataset \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7b80\u5355\u200b\u7684\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u5e76\u4e14\u200b\u4e0e\u200b\u6240\u6709\u200b\u73b0\u6709\u200b\u7684\u200b\u6570\u636e\u683c\u5f0f\u200b\u517c\u5bb9\u200b\uff0c\u200b\u4e5f\u200b\u80fd\u200b\u8fdb\u884c\u200b\u79bb\u7ebf\u200b\u6216\u8005\u200b\u5728\u7ebf\u200b\u8f6c\u6362\u200b\u3002</p> <p>\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6807\u6ce8\u200b\u5fc5\u987b\u200b\u4e3a\u200b <code>json</code> \u200b\u6216\u200b <code>yaml</code>\uff0c<code>yml</code> \u200b\u6216\u200b <code>pickle</code>\uff0c<code>pkl</code> \u200b\u683c\u5f0f\u200b\uff1b\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u7684\u200b\u5b57\u5178\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b <code>metainfo</code> \u200b\u548c\u200b <code>data_list</code> \u200b\u4e24\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\u3002\u200b\u5176\u4e2d\u200b <code>metainfo</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\uff0c\u200b\u91cc\u9762\u200b\u5305\u542b\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u5143\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\uff1b<code>data_list</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u5217\u8868\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\uff0c\u200b\u8be5\u200b\u5b57\u5178\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u539f\u59cb\u6570\u636e\u200b\uff08raw data\uff09\uff0c\u200b\u6bcf\u4e2a\u200b\u539f\u59cb\u6570\u636e\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6216\u200b\u82e5\u5e72\u4e2a\u200b\u8bad\u7ec3\u200b/\u200b\u6d4b\u8bd5\u200b\u6837\u672c\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b JSON \u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f8b\u5b50\u200b:</p> <pre><code>{\n    'metainfo':\n        {\n            'classes': ('person', 'bicycle', 'car', 'motorcycle'),\n            ...\n        },\n    'data_list':\n        [\n            {\n                \"img_path\": \"xxx/xxx_1.jpg\",\n                \"height\": 604,\n                \"width\": 640,\n                \"instances\":\n                [\n                  {\n                    \"bbox\": [0, 0, 10, 20],\n                    \"bbox_label\": 1,\n                    \"ignore_flag\": 0\n                  },\n                  {\n                    \"bbox\": [10, 10, 110, 120],\n                    \"bbox_label\": 2,\n                    \"ignore_flag\": 0\n                  }\n                ]\n              },\n            {\n                \"img_path\": \"xxx/xxx_2.jpg\",\n                \"height\": 320,\n                \"width\": 460,\n                \"instances\":\n                [\n                  {\n                    \"bbox\": [10, 0, 20, 20],\n                    \"bbox_label\": 3,\n                    \"ignore_flag\": 1\n                  }\n                ]\n              },\n            ...\n        ]\n}\n</code></pre> <p>\u200b\u6709\u4e9b\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u63d0\u4f9b\u200b\u5982\u200b\uff1acrowd/difficult/ignored bboxes \u200b\u6807\u6ce8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b <code>ignore_flag</code>\u200b\u6765\u200b\u5305\u542b\u200b\u5b83\u4eec\u200b\u3002</p> <p>\u200b\u5728\u200b\u5f97\u5230\u200b\u4e0a\u8ff0\u200b\u6807\u51c6\u200b\u7684\u200b\u6570\u636e\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u4f7f\u7528\u200b MMDetection \u200b\u7684\u200b BaseDetDataset \uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\u3002</p>"},{"location":"advanced_guides/customize_dataset/#_5","title":"\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u4f8b\u5b50","text":"<p>\u200b\u5047\u8bbe\u200b\u6587\u672c\u6587\u4ef6\u200b\u4e2d\u200b\u8868\u793a\u200b\u7684\u200b\u662f\u200b\u4e00\u79cd\u200b\u5168\u65b0\u200b\u7684\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u3002\u200b\u8fb9\u754c\u200b\u6846\u200b\u7684\u200b\u6807\u6ce8\u200b\u4fe1\u606f\u200b\u4fdd\u5b58\u200b\u5728\u200b <code>annotation.txt</code> \u200b\u4e2d\u200b\uff0c\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#\n000001.jpg\n1280 720\n2\n10 20 40 60 1\n20 40 50 60 2\n#\n000002.jpg\n1280 720\n3\n50 20 40 60 2\n20 40 30 45 2\n30 40 50 60 3\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>mmdet/datasets/my_dataset.py</code> \u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b dataset \u200b\u7528\u4ee5\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u3002</p> <pre><code>import mmengine\nfrom mmdet.base_det_dataset import BaseDetDataset\nfrom mmdet.registry import DATASETS\n\n\n@DATASETS.register_module()\nclass MyDataset(BaseDetDataset):\n\n    METAINFO = {\n       'classes': ('person', 'bicycle', 'car', 'motorcycle'),\n        'palette': [(220, 20, 60), (119, 11, 32), (0, 0, 142), (0, 0, 230)]\n    }\n\n    def load_data_list(self, ann_file):\n        ann_list = mmengine.list_from_file(ann_file)\n\n        data_infos = []\n        for i, ann_line in enumerate(ann_list):\n            if ann_line != '#':\n                continue\n\n            img_shape = ann_list[i + 2].split(' ')\n            width = int(img_shape[0])\n            height = int(img_shape[1])\n            bbox_number = int(ann_list[i + 3])\n\n            instances = []\n            for anns in ann_list[i + 4:i + 4 + bbox_number]:\n                instance = {}\n                instance['bbox'] = [float(ann) for ann in anns.split(' ')[:4]]\n                instance['bbox_label']=int(anns[4])\n                instances.append(instance)\n\n            data_infos.append(\n                dict(\n                    img_path=ann_list[i + 1],\n                    img_id=i,\n                    width=width,\n                    height=height,\n                    instances=instances\n                ))\n\n        return data_infos\n</code></pre> <p>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>MyDataset</code> \u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u4fee\u6539\u200b</p> <pre><code>dataset_A_train = dict(\n    type='MyDataset',\n    ann_file = 'image_list.txt',\n    pipeline=train_pipeline\n)\n</code></pre>"},{"location":"advanced_guides/customize_dataset/#dataset","title":"\u4f7f\u7528\u200b dataset \u200b\u5305\u88c5\u200b\u5668\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6","text":"<p>MMEngine \u200b\u4e5f\u200b\u652f\u6301\u200b\u975e\u5e38\u200b\u591a\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u5305\u88c5\u200b\u5668\u200b\uff08wrapper\uff09\u200b\u6765\u200b\u6df7\u5408\u200b\u6570\u636e\u200b\u96c6\u200b\u6216\u200b\u5728\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u4fee\u6539\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u5176\u200b\u652f\u6301\u200b\u5982\u4e0b\u200b\u4e09\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u5305\u88c5\u200b\uff1a</p> <ul> <li><code>RepeatDataset</code>\uff1a\u200b\u5c06\u200b\u6574\u4e2a\u200b\u6570\u636e\u200b\u96c6\u200b\u7b80\u5355\u200b\u5730\u200b\u91cd\u590d\u200b\u3002</li> <li><code>ClassBalancedDataset</code>\uff1a\u200b\u4ee5\u200b\u7c7b\u522b\u200b\u5747\u8861\u200b\u7684\u200b\u65b9\u5f0f\u200b\u91cd\u590d\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> <li><code>ConcatDataset</code>\uff1a\u200b\u5408\u5e76\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> </ul> <p>\u200b\u5177\u4f53\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u89c1\u200b MMEngine \u200b\u6570\u636e\u200b\u96c6\u200b\u5305\u88c5\u200b\u5668\u200b\u3002</p>"},{"location":"advanced_guides/customize_dataset/#_6","title":"\u4fee\u6539\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u7c7b\u522b","text":"<p>\u200b\u6839\u636e\u200b\u73b0\u6709\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u5b83\u4eec\u200b\u7684\u200b\u7c7b\u522b\u200b\u540d\u79f0\u200b\u6765\u200b\u8bad\u7ec3\u200b\u5176\u200b\u6807\u6ce8\u200b\u7684\u200b\u5b50\u96c6\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u53ea\u60f3\u200b\u8bad\u7ec3\u200b\u5f53\u524d\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u4e09\u4e2a\u200b\u7c7b\u522b\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b <code>metainfo</code> \u200b\u5b57\u5178\u200b\uff0c\u200b\u6570\u636e\u200b\u96c6\u5c31\u4f1a\u200b\u81ea\u52a8\u200b\u5c4f\u853d\u6389\u200b\u5176\u4ed6\u200b\u7c7b\u522b\u200b\u7684\u200b\u771f\u5b9e\u200b\u6846\u200b\u3002</p> <pre><code>classes = ('person', 'bicycle', 'car')\ntrain_dataloader = dict(\n    dataset=dict(\n        metainfo=dict(classes=classes))\n    )\nval_dataloader = dict(\n    dataset=dict(\n        metainfo=dict(classes=classes))\n    )\ntest_dataloader = dict(\n    dataset=dict(\n        metainfo=dict(classes=classes))\n    )\n</code></pre> <p>\u200b\u6ce8\u610f\u200b</p> <ul> <li>\u200b\u5728\u200b MMDetection v2.5.0 \u200b\u4e4b\u524d\u200b\uff0c\u200b\u5982\u679c\u200b\u7c7b\u522b\u200b\u4e3a\u200b\u96c6\u5408\u200b\u65f6\u200b\u6570\u636e\u200b\u96c6\u5c06\u200b\u81ea\u52a8\u200b\u8fc7\u6ee4\u200b\u6389\u200b\u4e0d\u200b\u5305\u542b\u200b GT \u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u4e14\u200b\u6ca1\u200b\u529e\u6cd5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u5c06\u200b\u5176\u200b\u5173\u95ed\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u4e0d\u200b\u53ef\u53d6\u200b\u7684\u200b\u884c\u4e3a\u200b\u800c\u4e14\u200b\u4f1a\u200b\u5f15\u8d77\u200b\u6df7\u6dc6\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5f53\u200b\u7c7b\u522b\u200b\u4e0d\u662f\u200b\u96c6\u5408\u200b\u65f6\u200b\u6570\u636e\u200b\u96c6\u65f6\u200b\uff0c\u200b\u53ea\u6709\u200b\u5728\u200b <code>filter_empty_gt=True</code> \u200b\u4ee5\u53ca\u200b <code>test_mode=False</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u624d\u200b\u4f1a\u200b\u8fc7\u6ee4\u200b\u6389\u200b\u4e0d\u200b\u5305\u542b\u200b GT \u200b\u7684\u200b\u56fe\u7247\u200b\u3002\u200b\u5728\u200b MMDetection v2.5.0 \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u56fe\u7247\u200b\u7684\u200b\u8fc7\u6ee4\u200b\u4ee5\u53ca\u200b\u7c7b\u522b\u200b\u7684\u200b\u4fee\u6539\u200b\u8fdb\u884c\u200b\u89e3\u200b\u8026\u200b\uff0c\u200b\u6570\u636e\u200b\u96c6\u200b\u53ea\u6709\u200b\u5728\u200b <code>filter_cfg=dict(filter_empty_gt=True)</code> \u200b\u548c\u200b <code>test_mode=False</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u624d\u200b\u4f1a\u200b\u8fc7\u6ee4\u200b\u6389\u200b\u4e0d\u200b\u5305\u542b\u200b GT \u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u65e0\u8bba\u200b\u7c7b\u522b\u200b\u662f\u5426\u200b\u4e3a\u200b\u96c6\u5408\u200b\u3002\u200b\u8bbe\u7f6e\u200b\u7c7b\u522b\u200b\u53ea\u4f1a\u200b\u5f71\u54cd\u200b\u7528\u4e8e\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6807\u6ce8\u200b\u7c7b\u522b\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8fc7\u6ee4\u200b\u4e0d\u200b\u5305\u542b\u200b GT \u200b\u7684\u200b\u56fe\u7247\u200b\u3002</li> <li>\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b MMEngine \u200b\u4e2d\u200b\u7684\u200b <code>BaseDataset</code> \u200b\u6216\u8005\u200b MMDetection \u200b\u4e2d\u200b\u7684\u200b <code>BaseDetDataset</code> \u200b\u65f6\u200b\u7528\u6237\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u6765\u200b\u8fc7\u6ee4\u200b\u4e0d\u200b\u542b\u200b GT \u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u79bb\u7ebf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u89e3\u51b3\u200b\u3002</li> <li>\u200b\u5f53\u200b\u8bbe\u7f6e\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b <code>classes</code> \u200b\u65f6\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u4fee\u6539\u200b <code>num_classes</code>\u3002\u200b\u4ece\u200b v2.9.0 (PR#4508) \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u4e86\u200b NumClassCheckHook \u200b\u6765\u200b\u68c0\u67e5\u200b\u7c7b\u522b\u200b\u6570\u200b\u662f\u5426\u200b\u4e00\u81f4\u200b\u3002</li> </ul>"},{"location":"advanced_guides/customize_dataset/#coco","title":"COCO \u200b\u5168\u666f\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u4e5f\u200b\u652f\u6301\u200b COCO Panoptic Dataset\uff0c\u200b\u5168\u666f\u200b\u6ce8\u91ca\u200b\u7684\u200b\u683c\u5f0f\u200b\u4e0e\u200b COCO \u200b\u683c\u5f0f\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5176\u200b\u524d\u666f\u200b\u548c\u200b\u80cc\u666f\u200b\u90fd\u200b\u5c06\u200b\u5b58\u5728\u200b\u4e8e\u200b\u6ce8\u91ca\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002COCO Panoptic \u200b\u683c\u5f0f\u200b\u7684\u200b\u6ce8\u91ca\u200b JSON \u200b\u6587\u4ef6\u200b\u5177\u6709\u200b\u4ee5\u4e0b\u200b\u5fc5\u8981\u200b\u7684\u200b\u952e\u200b\uff1a</p> <pre><code>'images': [\n    {\n        'file_name': '000000001268.jpg',\n        'height': 427,\n        'width': 640,\n        'id': 1268\n    },\n    ...\n]\n\n'annotations': [\n    {\n        'filename': '000000001268.jpg',\n        'image_id': 1268,\n        'segments_info': [\n            {\n                'id':8345037,  # One-to-one correspondence with the id in the annotation map.\n                'category_id': 51,\n                'iscrowd': 0,\n                'bbox': (x1, y1, w, h),  # The bbox of the background is the outer rectangle of its mask.\n                'area': 24315\n            },\n            ...\n        ]\n    },\n    ...\n]\n\n'categories': [  # including both foreground categories and background categories\n    {'id': 0, 'name': 'person'},\n    ...\n ]\n</code></pre> <p>\u200b\u6b64\u5916\u200b\uff0c<code>seg</code> \u200b\u5fc5\u987b\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u5168\u666f\u200b\u6ce8\u91ca\u200b\u56fe\u50cf\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</p> <pre><code>dataset_type = 'CocoPanopticDataset'\ndata_root='path/to/your/'\n\ntrain_dataloader = dict(\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        data_prefix=dict(\n            img='train/image_data/', seg='train/panoptic/image_annotation_data/')\n    )\n)\nval_dataloader = dict(\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        data_prefix=dict(\n            img='val/image_data/', seg='val/panoptic/image_annotation_data/')\n    )\n)\ntest_dataloader = dict(\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        data_prefix=dict(\n            img='test/image_data/', seg='test/panoptic/image_annotation_data/')\n    )\n)\n</code></pre>"},{"location":"advanced_guides/customize_losses/","title":"\u81ea\u5b9a\u4e49\u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>MMDetection \u200b\u4e3a\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e0d\u540c\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u4f46\u662f\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u914d\u7f6e\u200b\u53ef\u80fd\u200b\u65e0\u6cd5\u200b\u9002\u5e94\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u548c\u200b\u6a21\u578b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5e0c\u671b\u200b\u4fee\u6539\u200b\u67d0\u200b\u4e00\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u6765\u200b\u9002\u5e94\u200b\u65b0\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u9996\u5148\u200b\u8be6\u7ec6\u200b\u7684\u200b\u89e3\u91ca\u200b\u8ba1\u7b97\u200b\u635f\u5931\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u7136\u540e\u200b\u7ed9\u51fa\u200b\u4e00\u4e9b\u200b\u5173\u4e8e\u200b\u5982\u4f55\u200b\u4fee\u6539\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6b65\u9aa4\u200b\u7684\u200b\u6307\u5bfc\u200b\u3002\u200b\u5bf9\u200b\u635f\u5931\u200b\u7684\u200b\u4fee\u6539\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5206\u4e3a\u200b\u5fae\u8c03\u200b\u548c\u200b\u52a0\u6743\u200b\u3002</p>"},{"location":"advanced_guides/customize_losses/#_2","title":"\u4e00\u4e2a\u200b\u635f\u5931\u200b\u7684\u200b\u8ba1\u7b97\u200b\u8fc7\u7a0b","text":"<p>\u200b\u7ed9\u5b9a\u200b\u8f93\u5165\u200b\uff08\u200b\u5305\u62ec\u200b\u9884\u6d4b\u200b\u548c\u200b\u76ee\u6807\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6743\u91cd\u200b\uff09\uff0c\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4f1a\u200b\u628a\u200b\u8f93\u5165\u200b\u7684\u200b\u5f20\u91cf\u200b\u6620\u5c04\u200b\u5230\u200b\u6700\u540e\u200b\u7684\u200b\u635f\u5931\u200b\u6807\u91cf\u200b\u3002\u200b\u6620\u5c04\u200b\u8fc7\u7a0b\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u4e0b\u9762\u200b\u4e94\u4e2a\u200b\u6b65\u9aa4\u200b\uff1a</p> <ol> <li> <p>\u200b\u8bbe\u7f6e\u200b\u91c7\u6837\u200b\u65b9\u6cd5\u200b\u4e3a\u200b\u5bf9\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b\u3002</p> </li> <li> <p>\u200b\u901a\u8fc7\u200b\u635f\u5931\u200b\u6838\u200b\u51fd\u6570\u200b\u83b7\u53d6\u200b\u5143\u7d20\u200b\u6216\u8005\u200b\u6837\u672c\u200b\u635f\u5931\u200b\u3002</p> </li> <li> <p>\u200b\u901a\u8fc7\u200b\u6743\u91cd\u200b\u5f20\u91cf\u200b\u6765\u200b\u7ed9\u200b\u635f\u5931\u200b\u9010\u200b\u5143\u7d20\u200b\u6743\u91cd\u200b\u3002</p> </li> <li> <p>\u200b\u628a\u200b\u635f\u5931\u200b\u5f20\u91cf\u200b\u5f52\u7eb3\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6807\u91cf\u200b\u3002</p> </li> <li> <p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u5f20\u91cf\u200b\u7ed9\u200b\u5f53\u524d\u200b\u635f\u5931\u200b\u4e00\u4e2a\u200b\u6743\u91cd\u200b\u3002</p> </li> </ol>"},{"location":"advanced_guides/customize_losses/#1","title":"\u8bbe\u7f6e\u200b\u91c7\u6837\u200b\u65b9\u6cd5\u200b\uff08\u200b\u6b65\u9aa4\u200b 1\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e9b\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u9700\u8981\u200b\u91c7\u6837\u200b\u7b56\u7565\u200b\u6765\u200b\u907f\u514d\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4e0d\u200b\u5e73\u8861\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200bRPN head\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>CrossEntropyLoss</code>\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5728\u200b<code>train_cfg</code>\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b<code>RandomSampler</code></p> <pre><code>train_cfg=dict(\n    rpn=dict(\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False))\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b\u5176\u4ed6\u200b\u4e00\u4e9b\u200b\u5177\u6709\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b\u5e73\u8861\u200b\u673a\u5236\u200b\u7684\u200b\u635f\u5931\u200b\uff0c\u200b\u4f8b\u5982\u200b Focal Loss\u3001GHMC \u200b\u548c\u200b QualityFocalLoss\uff0c\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b\u3002</p>"},{"location":"advanced_guides/customize_losses/#_3","title":"\u5fae\u8c03\u200b\u635f\u5931","text":"<p>\u200b\u5fae\u8c03\u200b\u4e00\u4e2a\u200b\u635f\u5931\u200b\u4e3b\u8981\u200b\u4e0e\u200b\u6b65\u9aa4\u200b 2\uff0c4\uff0c5 \u200b\u6709\u5173\u200b\uff0c\u200b\u5927\u90e8\u5206\u200b\u7684\u200b\u4fee\u6539\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u7528\u200b Focal Loss (FL) \u200b\u4f5c\u4e3a\u200b\u4f8b\u5b50\u200b\u3002 \u200b\u4e0b\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u5206\u522b\u200b\u662f\u200b\u6784\u5efa\u200b FL \u200b\u7684\u200b\u65b9\u6cd5\u200b\u548c\u200b\u5b83\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u662f\u200b\u4e00\u4e00\u5bf9\u5e94\u200b\u7684\u200b\u3002</p> <pre><code>@LOSSES.register_module()\nclass FocalLoss(nn.Module):\n\n    def __init__(self,\n                 use_sigmoid=True,\n                 gamma=2.0,\n                 alpha=0.25,\n                 reduction='mean',\n                 loss_weight=1.0):\n</code></pre> <pre><code>loss_cls=dict(\n    type='FocalLoss',\n    use_sigmoid=True,\n    gamma=2.0,\n    alpha=0.25,\n    loss_weight=1.0)\n</code></pre>"},{"location":"advanced_guides/customize_losses/#2","title":"\u5fae\u8c03\u200b\u8d85\u200b\u53c2\u6570\u200b\uff08\u200b\u6b65\u9aa4\u200b2\uff09","text":"<p><code>gamma</code> \u200b\u548c\u200b <code>beta</code> \u200b\u662f\u200b Focal Loss \u200b\u4e2d\u200b\u7684\u200b\u4e24\u4e2a\u200b\u8d85\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u200b\u628a\u200b <code>gamma</code> \u200b\u7684\u200b\u503c\u200b\u8bbe\u4e3a\u200b 1.5\uff0c\u200b\u628a\u200b <code>alpha</code> \u200b\u7684\u200b\u503c\u200b\u8bbe\u4e3a\u200b 0.5\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u6307\u5b9a\u200b\uff1a</p> <pre><code>loss_cls=dict(\n    type='FocalLoss',\n    use_sigmoid=True,\n    gamma=1.5,\n    alpha=0.5,\n    loss_weight=1.0)\n</code></pre>"},{"location":"advanced_guides/customize_losses/#4","title":"\u5fae\u8c03\u200b\u5f52\u7eb3\u200b\u65b9\u5f0f\u200b\uff08\u200b\u6b65\u9aa4\u200b4\uff09","text":"<p>Focal Loss \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u5f52\u7eb3\u200b\u65b9\u5f0f\u200b\u662f\u200b <code>mean</code>\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u200b\u628a\u200b\u5f52\u7eb3\u200b\u65b9\u5f0f\u200b\u4ece\u200b <code>mean</code> \u200b\u6539\u6210\u200b <code>sum</code>\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u6307\u5b9a\u200b\uff1a</p> <pre><code>loss_cls=dict(\n    type='FocalLoss',\n    use_sigmoid=True,\n    gamma=2.0,\n    alpha=0.25,\n    loss_weight=1.0,\n    reduction='sum')\n</code></pre>"},{"location":"advanced_guides/customize_losses/#5","title":"\u5fae\u8c03\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\uff08\u200b\u6b65\u9aa4\u200b5\uff09","text":"<p>\u200b\u8fd9\u91cc\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6807\u91cf\u200b\uff0c\u200b\u4ed6\u200b\u7528\u6765\u200b\u63a7\u5236\u200b\u591a\u4efb\u52a1\u200b\u5b66\u4e60\u200b\u4e2d\u200b\u4e0d\u540c\u200b\u635f\u5931\u200b\u7684\u200b\u91cd\u8981\u200b\u7a0b\u5ea6\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u548c\u200b\u56de\u5f52\u200b\u635f\u5931\u200b\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u200b\u628a\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u7684\u200b\u6743\u91cd\u200b\u8bbe\u200b\u4e3a\u200b 0.5\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u5982\u4e0b\u200b\u6307\u5b9a\u200b\uff1a</p> <pre><code>loss_cls=dict(\n    type='FocalLoss',\n    use_sigmoid=True,\n    gamma=2.0,\n    alpha=0.25,\n    loss_weight=0.5)\n</code></pre>"},{"location":"advanced_guides/customize_losses/#3","title":"\u52a0\u6743\u200b\u635f\u5931\u200b\uff08\u200b\u6b65\u9aa4\u200b3\uff09","text":"<p>\u200b\u52a0\u6743\u200b\u635f\u5931\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u9010\u200b\u5143\u7d20\u200b\u4fee\u6539\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\u3002\u200b\u66f4\u200b\u5177\u4f53\u6765\u8bf4\u200b\uff0c\u200b\u6211\u4eec\u200b\u7ed9\u200b\u635f\u5931\u200b\u5f20\u91cf\u200b\u4e58\u4ee5\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u4ed6\u200b\u6709\u200b\u76f8\u540c\u200b\u5f62\u72b6\u200b\u7684\u200b\u6743\u91cd\u200b\u5f20\u91cf\u200b\u3002\u200b\u6240\u4ee5\u200b\uff0c\u200b\u635f\u5931\u200b\u4e2d\u200b\u4e0d\u540c\u200b\u7684\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8d4b\u4e88\u200b\u4e0d\u540c\u200b\u7684\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u53eb\u505a\u200b\u9010\u200b\u5143\u7d20\u200b\u3002\u200b\u635f\u5931\u200b\u7684\u200b\u6743\u91cd\u200b\u5728\u200b\u4e0d\u540c\u200b\u6a21\u578b\u200b\u4e2d\u200b\u53d8\u5316\u5f88\u5927\u200b\uff0c\u200b\u800c\u4e14\u200b\u4e0e\u200b\u4e0a\u4e0b\u6587\u200b\u76f8\u5173\u200b\uff0c\u200b\u4f46\u662f\u200b\u603b\u7684\u6765\u8bf4\u200b\u4e3b\u8981\u200b\u6709\u200b\u4e24\u79cd\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\uff1a\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u7684\u200b <code>label_weights</code> \u200b\u548c\u200b\u8fb9\u754c\u200b\u6846\u200b\u7684\u200b <code>bbox_weights</code>\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u76f8\u5e94\u200b\u7684\u200b\u5934\u200b\u4e2d\u200b\u7684\u200b <code>get_target</code> \u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u627e\u5230\u200b\u4ed6\u4eec\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b ATSSHead \u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u3002\u200b\u5b83\u200b\u7ee7\u627f\u200b\u4e86\u200b AnchorHead \uff0c\u200b\u4f46\u662f\u200b\u6211\u4eec\u200b\u91cd\u5199\u200b\u5b83\u200b\u7684\u200b <code>get_targets</code> \u200b\u65b9\u6cd5\u200b\u6765\u200b\u4ea7\u751f\u200b\u4e0d\u540c\u200b\u7684\u200b <code>label_weights</code> \u200b\u548c\u200b <code>bbox_weights</code>\u3002</p> <pre><code>class ATSSHead(AnchorHead):\n\n    ...\n\n    def get_targets(self,\n                    anchor_list,\n                    valid_flag_list,\n                    gt_bboxes_list,\n                    img_metas,\n                    gt_bboxes_ignore_list=None,\n                    gt_labels_list=None,\n                    label_channels=1,\n                    unmap_outputs=True):\n</code></pre>"},{"location":"advanced_guides/customize_models/","title":"\u81ea\u5b9a\u4e49\u200b\u6a21\u578b","text":"<p>\u200b\u6211\u4eec\u200b\u7b80\u5355\u200b\u5730\u200b\u628a\u200b\u6a21\u578b\u200b\u7684\u200b\u5404\u4e2a\u200b\u7ec4\u4ef6\u200b\u5206\u4e3a\u200b\u4e94\u7c7b\u200b\uff1a</p> <ul> <li>\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b (backbone)\uff1a\u200b\u901a\u5e38\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u6765\u200b\u63d0\u53d6\u200b\u7279\u5f81\u200b\u56fe\u200b (feature map) \u200b\u7684\u200b\u5168\u200b\u5377\u79ef\u200b\u7f51\u7edc\u200b (FCN network)\uff0c\u200b\u4f8b\u5982\u200b\uff1aResNet, MobileNet\u3002</li> <li>Neck\uff1a\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u548c\u200b Head \u200b\u4e4b\u95f4\u200b\u7684\u200b\u8fde\u63a5\u200b\u90e8\u5206\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1aFPN, PAFPN\u3002</li> <li>Head\uff1a\u200b\u7528\u4e8e\u200b\u5177\u4f53\u4efb\u52a1\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a\u200b\u8fb9\u754c\u200b\u6846\u200b\u9884\u6d4b\u200b\u548c\u200b\u63a9\u7801\u200b\u9884\u6d4b\u200b\u3002</li> <li>\u200b\u533a\u57df\u200b\u63d0\u53d6\u200b\u5668\u200b (roi extractor)\uff1a\u200b\u4ece\u200b\u7279\u5f81\u200b\u56fe\u4e2d\u200b\u63d0\u53d6\u200b RoI \u200b\u7279\u5f81\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1aRoI Align\u3002</li> <li>\u200b\u635f\u5931\u200b (loss)\uff1a\u200b\u5728\u200b Head \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u635f\u5931\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1aFocalLoss, L1Loss, GHMLoss.</li> </ul>"},{"location":"advanced_guides/customize_models/#_2","title":"\u5f00\u53d1\u65b0\u200b\u7684\u200b\u7ec4\u4ef6","text":""},{"location":"advanced_guides/customize_models/#_3","title":"\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u4e3b\u5e72\u200b\u7f51\u7edc","text":"<p>\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ee5\u200b MobileNet \u200b\u4e3a\u200b\u4f8b\u6765\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u5f00\u53d1\u65b0\u200b\u7ec4\u4ef6\u200b\u3002</p>"},{"location":"advanced_guides/customize_models/#1-mobilenet","title":"1. \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\uff08\u200b\u4ee5\u200b MobileNet \u200b\u4e3a\u4f8b\u200b\uff09","text":"<p>\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b <code>mmdet/models/backbones/mobilenet.py</code></p> <pre><code>import torch.nn as nn\n\nfrom mmdet.registry import MODELS\n\n\n@MODELS.register_module()\nclass MobileNet(nn.Module):\n\n    def __init__(self, arg1, arg2):\n        pass\n\n    def forward(self, x):  # should return a tuple\n        pass\n</code></pre>"},{"location":"advanced_guides/customize_models/#2","title":"2. \u200b\u5bfc\u5165\u200b\u8be5\u200b\u6a21\u5757","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u4e0b\u8ff0\u200b\u4ee3\u7801\u200b\u5230\u200b <code>mmdet/models/backbones/__init__.py</code></p> <pre><code>from .mobilenet import MobileNet\n</code></pre> <p>\u200b\u6216\u200b\u6dfb\u52a0\u200b\uff1a</p> <pre><code>custom_imports = dict(\n    imports=['mmdet.models.backbones.mobilenet'],\n    allow_failed_imports=False)\n</code></pre> <p>\u200b\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4ee5\u200b\u907f\u514d\u200b\u539f\u59cb\u200b\u4ee3\u7801\u200b\u88ab\u200b\u4fee\u6539\u200b\u3002</p>"},{"location":"advanced_guides/customize_models/#3","title":"3. \u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8be5\u200b\u4e3b\u5e72\u200b\u7f51\u7edc","text":"<pre><code>model = dict(\n    ...\n    backbone=dict(\n        type='MobileNet',\n        arg1=xxx,\n        arg2=xxx),\n    ...\n</code></pre>"},{"location":"advanced_guides/customize_models/#neck","title":"\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b Neck","text":""},{"location":"advanced_guides/customize_models/#1-neck-pafpn","title":"1. \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b Neck\uff08\u200b\u4ee5\u200b PAFPN \u200b\u4e3a\u4f8b\u200b\uff09","text":"<p>\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b <code>mmdet/models/necks/pafpn.py</code></p> <pre><code>import torch.nn as nn\n\nfrom mmdet.registry import MODELS\n\n\n@MODELS.register_module()\nclass PAFPN(nn.Module):\n\n    def __init__(self,\n                in_channels,\n                out_channels,\n                num_outs,\n                start_level=0,\n                end_level=-1,\n                add_extra_convs=False):\n        pass\n\n    def forward(self, inputs):\n        # implementation is ignored\n        pass\n</code></pre>"},{"location":"advanced_guides/customize_models/#2_1","title":"2. \u200b\u5bfc\u5165\u200b\u8be5\u200b\u6a21\u5757","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u4e0b\u8ff0\u200b\u4ee3\u7801\u200b\u5230\u200b <code>mmdet/models/necks/__init__.py</code></p> <pre><code>from .pafpn import PAFPN\n</code></pre> <p>\u200b\u6216\u200b\u6dfb\u52a0\u200b\uff1a</p> <pre><code>custom_imports = dict(\n    imports=['mmdet.models.necks.pafpn'],\n    allow_failed_imports=False)\n</code></pre> <p>\u200b\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4ee5\u200b\u907f\u514d\u200b\u539f\u59cb\u200b\u4ee3\u7801\u200b\u88ab\u200b\u4fee\u6539\u200b\u3002</p>"},{"location":"advanced_guides/customize_models/#3_1","title":"3. \u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>neck=dict(\n    type='PAFPN',\n    in_channels=[256, 512, 1024, 2048],\n    out_channels=256,\n    num_outs=5)\n</code></pre>"},{"location":"advanced_guides/customize_models/#head","title":"\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b Head","text":"<p>\u200b\u6211\u4eec\u200b\u4ee5\u200b Double Head R-CNN \u200b\u4e3a\u200b\u4f8b\u6765\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b Head\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b bbox head \u200b\u5230\u200b <code>mmdet/models/roi_heads/bbox_heads/double_bbox_head.py</code>\u3002 Double Head R-CNN \u200b\u5728\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b bbox head\u3002\u200b\u4e3a\u4e86\u200b\u5b9e\u73b0\u200b bbox head\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u7684\u200b\u65b0\u200b\u6a21\u5757\u200b\u4e2d\u200b\u4e09\u4e2a\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>from typing import Tuple\n\nimport torch.nn as nn\nfrom mmcv.cnn import ConvModule\nfrom mmengine.model import BaseModule, ModuleList\nfrom torch import Tensor\n\nfrom mmdet.models.backbones.resnet import Bottleneck\nfrom mmdet.registry import MODELS\nfrom mmdet.utils import ConfigType, MultiConfig, OptConfigType, OptMultiConfig\nfrom .bbox_head import BBoxHead\n\n\n@MODELS.register_module()\nclass DoubleConvFCBBoxHead(BBoxHead):\n    r\"\"\"Bbox head used in Double-Head R-CNN\n\n    .. code-block:: none\n\n                                          /-&gt; cls\n                      /-&gt; shared convs -&gt;\n                                          \\-&gt; reg\n        roi features\n                                          /-&gt; cls\n                      \\-&gt; shared fc    -&gt;\n                                          \\-&gt; reg\n    \"\"\"  # noqa: W605\n\n    def __init__(self,\n                 num_convs: int = 0,\n                 num_fcs: int = 0,\n                 conv_out_channels: int = 1024,\n                 fc_out_channels: int = 1024,\n                 conv_cfg: OptConfigType = None,\n                 norm_cfg: ConfigType = dict(type='BN'),\n                 init_cfg: MultiConfig = dict(\n                     type='Normal',\n                     override=[\n                         dict(type='Normal', name='fc_cls', std=0.01),\n                         dict(type='Normal', name='fc_reg', std=0.001),\n                         dict(\n                             type='Xavier',\n                             name='fc_branch',\n                             distribution='uniform')\n                     ]),\n                 **kwargs) -&gt; None:\n        kwargs.setdefault('with_avg_pool', True)\n        super().__init__(init_cfg=init_cfg, **kwargs)\n\n    def forward(self, x_cls: Tensor, x_reg: Tensor) -&gt; Tuple[Tensor]:\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u5982\u200b\u6709\u200b\u5fc5\u8981\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b bbox head\u3002\u200b\u6211\u4eec\u200b\u6253\u7b97\u200b\u4ece\u200b <code>StandardRoIHead</code> \u200b\u6765\u200b\u7ee7\u627f\u200b\u65b0\u200b\u7684\u200b <code>DoubleHeadRoIHead</code>\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b <code>StandardRoIHead</code> \u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e0b\u8ff0\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>from typing import List, Optional, Tuple\n\nimport torch\nfrom torch import Tensor\n\nfrom mmdet.registry import MODELS, TASK_UTILS\nfrom mmdet.structures import DetDataSample\nfrom mmdet.structures.bbox import bbox2roi\nfrom mmdet.utils import ConfigType, InstanceList\nfrom ..task_modules.samplers import SamplingResult\nfrom ..utils import empty_instances, unpack_gt_instances\nfrom .base_roi_head import BaseRoIHead\n\n\n@MODELS.register_module()\nclass StandardRoIHead(BaseRoIHead):\n    \"\"\"Simplest base roi head including one bbox head and one mask head.\"\"\"\n\n    def init_assigner_sampler(self) -&gt; None:\n\n    def init_bbox_head(self, bbox_roi_extractor: ConfigType,\n                       bbox_head: ConfigType) -&gt; None:\n\n    def init_mask_head(self, mask_roi_extractor: ConfigType,\n                       mask_head: ConfigType) -&gt; None:\n\n    def forward(self, x: Tuple[Tensor],\n                rpn_results_list: InstanceList) -&gt; tuple:\n\n    def loss(self, x: Tuple[Tensor], rpn_results_list: InstanceList,\n             batch_data_samples: List[DetDataSample]) -&gt; dict:\n\n    def _bbox_forward(self, x: Tuple[Tensor], rois: Tensor) -&gt; dict:\n\n    def bbox_loss(self, x: Tuple[Tensor],\n                  sampling_results: List[SamplingResult]) -&gt; dict:\n\n    def mask_loss(self, x: Tuple[Tensor],\n                  sampling_results: List[SamplingResult], bbox_feats: Tensor,\n                  batch_gt_instances: InstanceList) -&gt; dict:\n\n    def _mask_forward(self,\n                      x: Tuple[Tensor],\n                      rois: Tensor = None,\n                      pos_inds: Optional[Tensor] = None,\n                      bbox_feats: Optional[Tensor] = None) -&gt; dict:\n\n    def predict_bbox(self,\n                     x: Tuple[Tensor],\n                     batch_img_metas: List[dict],\n                     rpn_results_list: InstanceList,\n                     rcnn_test_cfg: ConfigType,\n                     rescale: bool = False) -&gt; InstanceList:\n\n    def predict_mask(self,\n                     x: Tuple[Tensor],\n                     batch_img_metas: List[dict],\n                     results_list: InstanceList,\n                     rescale: bool = False) -&gt; InstanceList:\n</code></pre> <p>Double Head \u200b\u7684\u200b\u4fee\u6539\u200b\u4e3b\u8981\u200b\u5728\u200b bbox_forward \u200b\u7684\u200b\u903b\u8f91\u200b\u4e2d\u200b\uff0c\u200b\u4e14\u200b\u5b83\u200b\u4ece\u200b <code>StandardRoIHead</code> \u200b\u4e2d\u200b\u7ee7\u627f\u200b\u4e86\u200b\u5176\u4ed6\u200b\u903b\u8f91\u200b\u3002\u200b\u5728\u200b <code>mmdet/models/roi_heads/double_roi_head.py</code> \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u7528\u200b\u4e0b\u8ff0\u200b\u4ee3\u7801\u200b\u5b9e\u73b0\u200b\u65b0\u200b\u7684\u200b bbox head\uff1a</p> <pre><code>from typing import Tuple\n\nfrom torch import Tensor\n\nfrom mmdet.registry import MODELS\nfrom .standard_roi_head import StandardRoIHead\n\n\n@MODELS.register_module()\nclass DoubleHeadRoIHead(StandardRoIHead):\n    \"\"\"RoI head for `Double Head RCNN &lt;https://arxiv.org/abs/1904.06493&gt;`_.\n\n    Args:\n        reg_roi_scale_factor (float): The scale factor to extend the rois\n            used to extract the regression features.\n    \"\"\"\n\n    def __init__(self, reg_roi_scale_factor: float, **kwargs):\n        super().__init__(**kwargs)\n        self.reg_roi_scale_factor = reg_roi_scale_factor\n\n    def _bbox_forward(self, x: Tuple[Tensor], rois: Tensor) -&gt; dict:\n        \"\"\"Box head forward function used in both training and testing.\n\n        Args:\n            x (tuple[Tensor]): List of multi-level img features.\n            rois (Tensor): RoIs with the shape (n, 5) where the first\n                column indicates batch id of each RoI.\n\n        Returns:\n             dict[str, Tensor]: Usually returns a dictionary with keys:\n\n                - `cls_score` (Tensor): Classification scores.\n                - `bbox_pred` (Tensor): Box energies / deltas.\n                - `bbox_feats` (Tensor): Extract bbox RoI features.\n        \"\"\"\n        bbox_cls_feats = self.bbox_roi_extractor(\n            x[:self.bbox_roi_extractor.num_inputs], rois)\n        bbox_reg_feats = self.bbox_roi_extractor(\n            x[:self.bbox_roi_extractor.num_inputs],\n            rois,\n            roi_scale_factor=self.reg_roi_scale_factor)\n        if self.with_shared_head:\n            bbox_cls_feats = self.shared_head(bbox_cls_feats)\n            bbox_reg_feats = self.shared_head(bbox_reg_feats)\n        cls_score, bbox_pred = self.bbox_head(bbox_cls_feats, bbox_reg_feats)\n\n        bbox_results = dict(\n            cls_score=cls_score,\n            bbox_pred=bbox_pred,\n            bbox_feats=bbox_cls_feats)\n        return bbox_results\n</code></pre> <p>\u200b\u6700\u7ec8\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u628a\u200b\u8be5\u200b\u6a21\u5757\u200b\u6dfb\u52a0\u200b\u5230\u200b <code>mmdet/models/bbox_heads/__init__.py</code> \u200b\u548c\u200b <code>mmdet/models/roi_heads/__init__.py</code> \u200b\u4ee5\u200b\u4f7f\u200b\u76f8\u5173\u200b\u7684\u200b\u6ce8\u518c\u8868\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b\u5e76\u200b\u52a0\u8f7d\u200b\u4ed6\u4eec\u200b\u3002</p> <p>\u200b\u6216\u8005\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\uff1a</p> <pre><code>custom_imports=dict(\n    imports=['mmdet.models.roi_heads.double_roi_head', 'mmdet.models.roi_heads.bbox_heads.double_bbox_head'])\n</code></pre> <p>\u200b\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5e76\u200b\u5b9e\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u76ee\u7684\u200b\u3002</p> <p>Double Head R-CNN \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>_base_ = '../faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py'\nmodel = dict(\n    roi_head=dict(\n        type='DoubleHeadRoIHead',\n        reg_roi_scale_factor=1.3,\n        bbox_head=dict(\n            _delete_=True,\n            type='DoubleConvFCBBoxHead',\n            num_convs=4,\n            num_fcs=2,\n            in_channels=256,\n            conv_out_channels=1024,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0., 0., 0., 0.],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=2.0),\n            loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=2.0))))\n</code></pre> <p>\u200b\u4ece\u200b MMDetection 2.0 \u200b\u7248\u672c\u200b\u8d77\u200b\uff0c\u200b\u914d\u7f6e\u200b\u7cfb\u7edf\u200b\u652f\u6301\u200b\u7ee7\u627f\u200b\u914d\u7f6e\u200b\u4ee5\u200b\u4f7f\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u4fee\u6539\u200b\u3002 Double Head R-CNN \u200b\u4e3b\u8981\u200b\u4f7f\u7528\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>DoubleHeadRoIHead</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>DoubleConvFCBBoxHead</code>\uff0c\u200b\u53c2\u6570\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u6bcf\u4e2a\u200b\u6a21\u5757\u200b\u7684\u200b <code>__init__</code> \u200b\u51fd\u6570\u200b\u6765\u200b\u8bbe\u7f6e\u200b\u3002</p>"},{"location":"advanced_guides/customize_models/#_4","title":"\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u635f\u5931","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u60f3\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u635f\u5931\u200b <code>MyLoss</code> \u200b\u7528\u4e8e\u200b\u8fb9\u754c\u200b\u6846\u200b\u56de\u5f52\u200b\u3002 \u200b\u4e3a\u4e86\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b <code>mmdet/models/losses/my_loss.py</code> \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u3002 \u200b\u88c5\u9970\u200b\u5668\u200b <code>weighted_loss</code> \u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u635f\u5931\u200b\u6bcf\u4e2a\u200b\u90e8\u5206\u200b\u52a0\u6743\u200b\u3002</p> <pre><code>import torch\nimport torch.nn as nn\n\nfrom mmdet.registry import LOSSES\nfrom .utils import weighted_loss\n\n\n@weighted_loss\ndef my_loss(pred, target):\n    assert pred.size() == target.size() and target.numel() &gt; 0\n    loss = torch.abs(pred - target)\n    return loss\n\n@LOSSES.register_module()\nclass MyLoss(nn.Module):\n\n    def __init__(self, reduction='mean', loss_weight=1.0):\n        super(MyLoss, self).__init__()\n        self.reduction = reduction\n        self.loss_weight = loss_weight\n\n    def forward(self,\n                pred,\n                target,\n                weight=None,\n                avg_factor=None,\n                reduction_override=None):\n        assert reduction_override in (None, 'none', 'mean', 'sum')\n        reduction = (\n            reduction_override if reduction_override else self.reduction)\n        loss_bbox = self.loss_weight * my_loss(\n            pred, target, weight, reduction=reduction, avg_factor=avg_factor)\n        return loss_bbox\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u628a\u200b\u5b83\u200b\u52a0\u5230\u200b <code>mmdet/models/losses/__init__.py</code>\u3002</p> <pre><code>from .my_loss import MyLoss, my_loss\n</code></pre> <p>\u200b\u6216\u8005\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\uff1a</p> <pre><code>custom_imports=dict(\n    imports=['mmdet.models.losses.my_loss'])\n</code></pre> <p>\u200b\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u5b9e\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u76ee\u7684\u200b\u3002</p> <p>\u200b\u5982\u200b\u4f7f\u7528\u200b\uff0c\u200b\u8bf7\u200b\u4fee\u6539\u200b <code>loss_xxx</code> \u200b\u5b57\u200b\u6bb5\u200b\u3002 \u200b\u56e0\u4e3a\u200b MyLoss \u200b\u662f\u200b\u7528\u4e8e\u200b\u56de\u5f52\u200b\u7684\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b Head \u200b\u4e2d\u200b\u4fee\u6539\u200b <code>loss_xxx</code> \u200b\u5b57\u200b\u6bb5\u200b\u3002</p> <pre><code>loss_bbox=dict(type='MyLoss', loss_weight=1.0))\n</code></pre>"},{"location":"advanced_guides/customize_runtime/","title":"\u81ea\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u914d\u7f6e","text":""},{"location":"advanced_guides/customize_runtime/#_2","title":"\u81ea\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u76f8\u5173\u200b\u7684\u200b\u914d\u7f6e","text":"<p>\u200b\u4f18\u5316\u200b\u76f8\u5173\u200b\u7684\u200b\u914d\u7f6e\u200b\u73b0\u5728\u200b\u5df2\u200b\u5168\u90e8\u200b\u96c6\u6210\u200b\u5230\u200b <code>optim_wrapper</code> \u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u57df\u200b\uff1a<code>optimizer</code>, <code>paramwise_cfg</code>\uff0c<code>clip_grad</code>\uff0c\u200b\u5177\u4f53\u200b\u7ec6\u8282\u200b\u89c1\u200b OptimWrapper\u3002\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e86\u200b <code>AdamW</code> \u200b\u4f5c\u4e3a\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u4e3b\u5e72\u200b\u90e8\u5206\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u7f29\u5c0f\u200b\u5230\u200b\u539f\u6765\u200b\u7684\u200b\u5341\u5206\u4e4b\u4e00\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3002</p> <pre><code>optim_wrapper = dict(\n    type='OptimWrapper',\n    # \u200b\u4f18\u5316\u200b\u5668\u200b\n    optimizer=dict(\n        type='AdamW',\n        lr=0.0001,\n        weight_decay=0.05,\n        eps=1e-8,\n        betas=(0.9, 0.999)),\n\n    # \u200b\u53c2\u6570\u200b\u5c42\u9762\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b\u6b63\u5219\u200b\u5316\u200b\u8bbe\u7f6e\u200b\n    paramwise_cfg=dict(\n        custom_keys={\n            'backbone': dict(lr_mult=0.1, decay_mult=1.0),\n        },\n        norm_decay_mult=0.0),\n\n    # \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\n    clip_grad=dict(max_norm=0.01, norm_type=2))\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#pytorch","title":"\u81ea\u5b9a\u4e49\u200b Pytorch \u200b\u4e2d\u200b\u4f18\u5316\u200b\u5668\u200b\u8bbe\u7f6e","text":"<p>\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u652f\u6301\u200b\u4e86\u200b Pytorch \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6240\u6709\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u8981\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u4f18\u5316\u200b\u5668\u200b\u552f\u4e00\u200b\u8981\u200b\u505a\u200b\u5c31\u662f\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>optimi_wrapper</code> \u200b\u4e2d\u200b\u7684\u200b <code>optimzer</code> \u200b\u57df\u200b\u3002\u200b\u6bd4\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u60f3\u8981\u200b\u4f7f\u7528\u200b <code>ADAM</code> \u200b\u4f5c\u4e3a\u200b\u4f18\u5316\u200b\u5668\u200b\uff08\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b\uff09\uff0c\u200b\u6240\u200b\u9700\u8981\u200b\u505a\u200b\u7684\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>optim_wrapper = dict(\n    type='OptimWrapper',\n    optimizer=dict(type='Adam', lr=0.0003, weight_decay=0.0001))\n</code></pre> <p>\u200b\u8981\u200b\u4fee\u6539\u200b\u6a21\u578b\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\uff0c\u200b\u7528\u6237\u200b\u53ea\u200b\u9700\u8981\u200b\u4fee\u6539\u200b <code>optimizer</code> \u200b\u4e2d\u200b\u7684\u200b <code>lr</code> \u200b\u57df\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u53c2\u8003\u200b PyToch \u200b\u7684\u200b API doc \u200b\u6765\u200b\u8fdb\u884c\u200b\u53c2\u6570\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002</p>"},{"location":"advanced_guides/customize_runtime/#_3","title":"\u81ea\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u5668","text":""},{"location":"advanced_guides/customize_runtime/#1","title":"1. \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u4f18\u5316\u200b\u5668","text":"<p>\u200b\u81ea\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u5668\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u60f3\u8981\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b <code>MyOptimizer</code> \u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u5b83\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u53c2\u6570\u200b <code>a</code>\uff0c<code>b</code>\uff0c<code>c</code>\u3002\u200b\u4f60\u200b\u9700\u8981\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b <code>mmdet/engine/optimizers</code> \u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u3002\u200b\u7136\u540e\u200b\u5728\u200b\u6587\u4ef6\u200b\uff08\u200b\u6bd4\u5982\u200b\uff0c<code>mmdet/engine/optimizers/my_optimizer.py</code>\uff09\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\u3002</p> <pre><code>from mmdet.registry import OPTIMIZERS\nfrom torch.optim import Optimizer\n\n\n@OPTIMIZERS.register_module()\nclass MyOptimizer(Optimizer):\n\n    def __init__(self, a, b, c)\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#2","title":"2. \u200b\u5bfc\u5165\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u4f18\u5316\u200b\u5668","text":"<p>\u200b\u4e3a\u4e86\u200b\u80fd\u200b\u627e\u5230\u200b\u4e0a\u9762\u200b\u7684\u200b\u6240\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\u5fc5\u987b\u200b\u8981\u200b\u5148\u200b\u5bfc\u5165\u5230\u200b\u4e3b\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u3002\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u3002</p> <ul> <li>\u200b\u4fee\u6539\u200b <code>mmdet/engine/optimizers/__init__.py</code> \u200b\u6765\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\u3002</li> </ul> <p>\u200b\u65b0\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\u5fc5\u987b\u200b\u5bfc\u5165\u5230\u200b <code>mmdet/engine/optimizers/__init__.py</code>\uff0c\u200b\u8fd9\u6837\u200b\u6ce8\u518c\u5668\u200b\u624d\u80fd\u200b\u627e\u5230\u200b\u8be5\u200b\u6a21\u5757\u200b\u5e76\u200b\u6dfb\u52a0\u200b\u5b83\u200b\u3002</p> <pre><code>from .my_optimizer import MyOptimizer\n</code></pre> <ul> <li>\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f7f\u7528\u200b <code>custom_imports</code> \u200b\u6765\u200b\u624b\u52a8\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\u3002</li> </ul> <pre><code>custom_imports = dict(imports=['mmdet.engine.optimizers.my_optimizer'], allow_failed_imports=False)\n</code></pre> <p><code>mmdet.engine.optimizers.my_optimizer</code> \u200b\u6a21\u5757\u200b\u5c06\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u5f00\u59cb\u200b\u65f6\u200b\u5bfc\u5165\u200b\uff0c\u200b\u4e4b\u540e\u200b <code>MyOptimizer</code> \u200b\u7c7b\u4f1a\u200b\u88ab\u200b\u81ea\u52a8\u200b\u6ce8\u518c\u200b\u3002\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5e94\u8be5\u200b\u5bfc\u5165\u200b <code>MyOptimizer</code> \u200b\u6240\u5728\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5373\u200b <code>mmdet.engine.optimizers.my_optimizer</code>\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b <code>mmdet.engine.optimizers.my_optimizer.MyOptimizer</code>\u3002</p> <p>\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u7528\u6237\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u522b\u7684\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u4e0b\u6765\u200b\u8fdb\u884c\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\uff0c\u200b\u53ea\u8981\u200b\u6539\u200b\u6a21\u5757\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>PYTHONPATH</code> \u200b\u4e2d\u200b\u627e\u5230\u200b\u3002</p>"},{"location":"advanced_guides/customize_runtime/#3","title":"3. \u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u4f18\u5316\u200b\u5668","text":"<p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>optim_wrapper</code> \u200b\u57df\u200b\u4e2d\u200b\u7684\u200b\u4e2d\u200b <code>optimizer</code> \u200b\u57df\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u4f60\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b <code>MyOptimizer</code>\u3002\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u4f18\u5316\u200b\u5668\u200b\u5728\u200b <code>optimizer</code> \u200b\u57df\u200b\u4e2d\u200b\u7684\u200b\u914d\u7f6e\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>optim_wrapper = dict(\n    type='OptimWrapper',\n    optimizer=dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001))\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u4f7f\u7528\u200b\u4f60\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u4fee\u6539\u200b</p> <pre><code>optim_wrapper = dict(\n    type='OptimWrapper',\n    optimizer=dict(type='MyOptimizer', a=a_value, b=b_value, c=c_value))\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#_4","title":"\u81ea\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u5668\u200b\u5305\u88c5\u200b\u6784\u9020\u200b\u7c7b","text":"<p>\u200b\u4e00\u4e9b\u200b\u6a21\u578b\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u4e00\u4e9b\u200b\u7279\u5b9a\u200b\u53c2\u6570\u200b\u7684\u200b\u4f18\u5316\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u6bd4\u5982\u200b\uff0cBN \u200b\u5c42\u200b\u7684\u200b\u6743\u91cd\u200b\u8870\u51cf\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u81ea\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u5668\u200b\u5305\u88c5\u200b\u6784\u9020\u200b\u7c7b\u6765\u200b\u5b9e\u73b0\u200b\u8fd9\u4e9b\u200b\u7cbe\u7ec6\u5316\u200b\u7684\u200b\u53c2\u6570\u200b\u8c03\u6574\u200b\u3002</p> <pre><code>from mmengine.optim import DefaultOptiWrapperConstructor\n\nfrom mmdet.registry import OPTIM_WRAPPER_CONSTRUCTORS\nfrom .my_optimizer import MyOptimizer\n\n\n@OPTIM_WRAPPER_CONSTRUCTORS.register_module()\nclass MyOptimizerWrapperConstructor(DefaultOptimWrapperConstructor):\n\n    def __init__(self,\n                 optim_wrapper_cfg: dict,\n                 paramwise_cfg: Optional[dict] = None):\n\n    def __call__(self, model: nn.Module) -&gt; OptimWrapper:\n\n        return optim_wrapper\n</code></pre> <p>\u200b\u4f18\u5316\u200b\u5668\u200b\u5305\u88c5\u200b\u6784\u9020\u200b\u7c7b\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u89c1\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u7528\u6237\u200b\u4ee5\u200b\u5b83\u200b\u4e3a\u200b\u6a21\u677f\u200b\uff0c\u200b\u6765\u200b\u5b9e\u73b0\u200b\u65b0\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\u5305\u88c5\u200b\u6784\u9020\u200b\u7c7b\u200b\u3002</p>"},{"location":"advanced_guides/customize_runtime/#_5","title":"\u989d\u5916\u200b\u7684\u200b\u8bbe\u7f6e","text":"<p>\u200b\u4e00\u4e9b\u200b\u6ca1\u6709\u200b\u88ab\u200b\u4f18\u5316\u200b\u5668\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6280\u5de7\u200b\uff08\u200b\u6bd4\u5982\u200b\uff0c\u200b\u53c2\u6570\u200b\u5c42\u9762\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u8bbe\u7f6e\u200b\uff09\u200b\u5e94\u8be5\u200b\u901a\u8fc7\u200b\u4f18\u5316\u200b\u5668\u200b\u5305\u88c5\u200b\u6784\u9020\u200b\u7c7b\u6765\u200b\u5b9e\u73b0\u200b\u6216\u8005\u200b\u94a9\u5b50\u200b\u3002\u200b\u6211\u4eec\u200b\u5217\u51fa\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5e38\u7528\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u7528\u4e8e\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\u6216\u8005\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\u3002\u200b\u8bf7\u200b\u968f\u610f\u200b\u521b\u5efa\u200b PR\uff0c\u200b\u53d1\u5e03\u200b\u66f4\u200b\u591a\u200b\u8bbe\u7f6e\u200b\u3002</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u6765\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b:   \u200b\u4e00\u4e9b\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u6765\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4f8b\u5b50\u200b\u5982\u4e0b\u200b\uff1a</li> </ul> <pre><code>optim_wrapper = dict(\n    _delete_=True, clip_grad=dict(max_norm=35, norm_type=2))\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u914d\u7f6e\u200b\u5df2\u7ecf\u200b\u96c6\u6210\u200b\u4e86\u200b\u57fa\u7840\u200b\u914d\u7f6e\u200b\uff08\u200b\u5305\u542b\u200b\u4e86\u200b <code>optim_wrapper</code> \u200b\u7684\u200b\u914d\u7f6e\u200b\uff09\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b <code>_delete_=True</code> \u200b\u6765\u200b\u8986\u76d6\u200b\u6389\u200b\u4e0d\u200b\u9700\u8981\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u5177\u4f53\u200b\u89c1\u200b\u914d\u7f6e\u200b\u76f8\u5173\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u52a8\u91cf\u200b\u8c03\u5ea6\u200b\u52a0\u901f\u200b\u6a21\u578b\u200b\u6536\u655b\u200b:   \u200b\u6211\u4eec\u200b\u652f\u6301\u200b\u52a8\u91cf\u200b\u8c03\u5ea6\u200b\u5668\u200b\u6839\u636e\u200b\u5b66\u4e60\u200b\u7387\u200b\u4fee\u6539\u200b\u6a21\u578b\u200b\u7684\u200b\u52a8\u91cf\u200b\uff0c\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u6a21\u578b\u200b\u4ee5\u200b\u66f4\u200b\u5feb\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6536\u655b\u200b\u3002\u200b\u52a8\u91cf\u200b\u8c03\u5ea6\u200b\u5668\u200b\u901a\u5e38\u200b\u4e0e\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u5ea6\u200b\u5668\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f8b\u5982\u200b 3D \u200b\u68c0\u6d4b\u200b \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u914d\u7f6e\u200b\u4ee5\u200b\u52a0\u901f\u200b\u6536\u655b\u200b\u3002   \u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b CosineAnnealingLR \u200b\u548c\u200b CosineAnnealingMomentum \u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u3002</li> </ul> <pre><code>param_scheduler = [\n    # \u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u5ea6\u200b\u5668\u200b\n    # \u200b\u5728\u200b\u524d\u200b 8 \u200b\u4e2a\u200b epoch, \u200b\u5b66\u4e60\u200b\u7387\u200b\u4ece\u200b 0 \u200b\u589e\u5927\u200b\u5230\u200b lr * 10\n    # \u200b\u5728\u200b\u63a5\u4e0b\u6765\u200b 12 \u200b\u4e2a\u200b epoch, \u200b\u5b66\u4e60\u200b\u7387\u200b\u4ece\u200b lr * 10 \u200b\u51cf\u5c0f\u200b\u5230\u200b lr * 1e-4\n    dict(\n        type='CosineAnnealingLR',\n        T_max=8,\n        eta_min=lr * 10,\n        begin=0,\n        end=8,\n        by_epoch=True,\n        convert_to_iter_based=True),\n    dict(\n        type='CosineAnnealingLR',\n        T_max=12,\n        eta_min=lr * 1e-4,\n        begin=8,\n        end=20,\n        by_epoch=True,\n        convert_to_iter_based=True),\n    # \u200b\u52a8\u91cf\u200b\u8c03\u5ea6\u200b\u5668\u200b\n    # \u200b\u5728\u200b\u524d\u200b 8 \u200b\u4e2a\u200b epoch, \u200b\u52a8\u91cf\u200b\u4ece\u200b 0 \u200b\u589e\u5927\u200b\u5230\u200b 0.85 / 0.95\n    # \u200b\u5728\u200b\u63a5\u4e0b\u6765\u200b 12 \u200b\u4e2a\u200b epoch, \u200b\u5b66\u4e60\u200b\u7387\u200b\u4ece\u200b 0.85 / 0.95 \u200b\u589e\u5927\u200b\u5230\u200b 1\n    dict(\n        type='CosineAnnealingMomentum',\n        T_max=8,\n        eta_min=0.85 / 0.95,\n        begin=0,\n        end=8,\n        by_epoch=True,\n        convert_to_iter_based=True),\n    dict(\n        type='CosineAnnealingMomentum',\n        T_max=12,\n        eta_min=1,\n        begin=8,\n        end=20,\n        by_epoch=True,\n        convert_to_iter_based=True)\n]\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#_6","title":"\u81ea\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u7b56\u7565","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b 1x \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u6761\u7528\u200b MMEngine \u200b\u4e2d\u200b\u7684\u200b MultiStepLR\u3002 \u200b\u6211\u4eec\u200b\u652f\u6301\u200b\u8bb8\u591a\u200b\u5176\u4ed6\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b\uff0c\u200b\u5177\u4f53\u200b\u89c1\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>CosineAnnealingLR</code> \u200b\u548c\u200b <code>PolyLR</code> \u200b\u7b56\u7565\u200b\u3002\u200b\u4e0b\u9762\u200b\u6709\u4e9b\u200b\u4f8b\u5b50\u200b</p> <ul> <li>\u200b\u591a\u9879\u5f0f\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b:</li> </ul> <pre><code>param_scheduler = [\n    dict(\n        type='PolyLR',\n        power=0.9,\n        eta_min=1e-4,\n        begin=0,\n        end=8,\n        by_epoch=True)]\n</code></pre> <ul> <li>\u200b\u4f59\u5f26\u200b\u9000\u706b\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b</li> </ul> <pre><code>param_scheduler = [\n    dict(\n        type='CosineAnnealingLR',\n        T_max=8,\n        eta_min=lr * 1e-5,\n        begin=0,\n        end=8,\n        by_epoch=True)]\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#_7","title":"\u81ea\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u5faa\u73af","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5728\u200b <code>train_cfg</code> \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>EpochBasedTrainLoop</code>\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u6bcf\u4e2a\u200b epoch \u200b\u8bad\u7ec3\u200b\u4e4b\u540e\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code>train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=12, val_begin=1, val_interval=1)\n</code></pre> <p>\u200b\u5b9e\u9645\u4e0a\u200b\uff0c<code>IterBasedTrainLoop</code> \u200b\u548c\u200b[<code>EpochBasedTrainLoop</code>](https:// github.com/open-mmlab/mmengine/blob/main/mmengine/runner/loops.py#L18) \u200b\u652f\u6301\u200b\u52a8\u6001\u200b\u533a\u95f4\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u89c1\u200b\u4e0b\u4f8b\u200b\u3002</p> <pre><code># \u200b\u5728\u200b\u7b2c\u200b 365001 \u200b\u6b21\u200b\u8fed\u4ee3\u200b\u4e4b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u6bcf\u200b 5000 \u200b\u6b21\u200b\u8fed\u4ee3\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b\u8bc4\u4f30\u200b\u3002\n# \u200b\u5728\u200b\u7b2c\u200b 365000 \u200b\u6b21\u200b\u8fed\u4ee3\u200b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u6bcf\u200b 368750 \u200b\u6b21\u200b\u8fed\u4ee3\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b\u8bc4\u4f30\u200b\uff0c\n# \u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6211\u4eec\u200b\u5728\u200b\u8bad\u7ec3\u200b\u7ed3\u675f\u200b\u65f6\u200b\u8fdb\u884c\u200b\u8bc4\u4f30\u200b\u3002\n\ninterval = 5000\nmax_iters = 368750\ndynamic_intervals = [(max_iters // interval * interval + 1, max_iters)]\ntrain_cfg = dict(\n    type='IterBasedTrainLoop',\n    max_iters=max_iters,\n    val_interval=interval,\n    dynamic_intervals=dynamic_intervals)\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#_8","title":"\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50","text":""},{"location":"advanced_guides/customize_runtime/#_9","title":"\u81ea\u5b9a\u4e49\u200b\u81ea\u884c\u200b\u5b9e\u73b0\u200b\u7684\u200b\u94a9\u5b50","text":""},{"location":"advanced_guides/customize_runtime/#1_1","title":"1. \u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u94a9\u5b50","text":"<p>MMEngine \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8bb8\u591a\u200b\u6709\u7528\u200b\u7684\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u67d0\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u65b0\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002MMDetection \u200b\u5728\u200b v3.0 \u200b\u4e2d\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b mmdet \u200b\u6216\u200b\u5176\u200b\u57fa\u4e8e\u200b mmdet \u200b\u7684\u200b\u4ee3\u7801\u200b\u5e93\u4e2d\u200b\u5b9e\u73b0\u200b\u94a9\u5b50\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u4ec5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u6765\u200b\u4f7f\u7528\u200b\u94a9\u5b50\u200b\u3002 \u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b\u5728\u200b mmdet \u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u94a9\u5b50\u200b\u5e76\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5b83\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>from mmengine.hooks import Hook\nfrom mmdet.registry import HOOKS\n\n\n@HOOKS.register_module()\nclass MyHook(Hook):\n\n    def __init__(self, a, b):\n\n    def before_run(self, runner) -&gt; None:\n\n    def after_run(self, runner) -&gt; None:\n\n    def before_train(self, runner) -&gt; None:\n\n    def after_train(self, runner) -&gt; None:\n\n    def before_train_epoch(self, runner) -&gt; None:\n\n    def after_train_epoch(self, runner) -&gt; None:\n\n    def before_train_iter(self,\n                          runner,\n                          batch_idx: int,\n                          data_batch: DATA_BATCH = None) -&gt; None:\n\n    def after_train_iter(self,\n                         runner,\n                         batch_idx: int,\n                         data_batch: DATA_BATCH = None,\n                         outputs: Optional[dict] = None) -&gt; None:\n</code></pre> <p>\u200b\u6839\u636e\u200b\u94a9\u5b50\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b <code>before_run</code>\u3001<code>after_run</code>\u3001<code>before_train</code>\u3001<code>after_train</code>\u3001<code>before_train_epoch</code>\u3001<code>after_train_epoch</code>\u3001<code>before_train_iter</code> \u200b\u548c\u200b <code>after_train_iter</code>\u3002\u200b\u8fd8\u6709\u200b\u66f4\u200b\u591a\u200b\u53ef\u4ee5\u200b\u63d2\u5165\u200b\u94a9\u5b50\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b base hook class\u3002</p>"},{"location":"advanced_guides/customize_runtime/#2_1","title":"2. \u200b\u6ce8\u518c\u200b\u65b0\u200b\u94a9\u5b50","text":"<p>\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5bfc\u5165\u200b <code>MyHook</code>\u3002\u200b\u5047\u8bbe\u200b\u8be5\u200b\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b <code>mmdet/engine/hooks/my_hook.py</code> \u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4fee\u6539\u200b <code>mmdet/engine/hooks/__init__.py</code> \u200b\u4ee5\u200b\u5bfc\u5165\u200b\u5b83\u200b\u3002</li> </ul> <p>\u200b\u65b0\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\u5e94\u8be5\u200b\u5728\u200b <code>mmdet/engine/hooks/__init__.py</code> \u200b\u4e2d\u200b\u5bfc\u5165\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u6ce8\u518c\u8868\u200b\u627e\u5230\u200b\u65b0\u200b\u6a21\u5757\u200b\u5e76\u200b\u6dfb\u52a0\u200b\u5b83\u200b\uff1a</p> <pre><code>from .my_hook import MyHook\n</code></pre> <ul> <li>\u200b\u5728\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>custom_imports</code> \u200b\u624b\u52a8\u200b\u5bfc\u5165\u200b\u5b83\u200b</li> </ul> <pre><code>custom_imports = dict(imports=['mmdet.engine.hooks.my_hook'], allow_failed_imports=False)\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#3_1","title":"3. \u200b\u4fee\u6539\u200b\u914d\u7f6e","text":"<pre><code>custom_hooks = [\n    dict(type='MyHook', a=a_value, b=b_value)\n]\n</code></pre> <p>\u200b\u4f60\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u952e\u200b <code>priority</code> \u200b\u7684\u200b\u503c\u200b\u4e3a\u200b <code>NORMAL</code> \u200b\u6216\u200b <code>HIGHEST</code> \u200b\u6765\u200b\u8bbe\u7f6e\u200b\u6302\u94a9\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b</p> <pre><code>custom_hooks = [\n    dict(type='MyHook', a=a_value, b=b_value, priority='NORMAL')\n]\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u94a9\u5b50\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u5728\u200b\u6ce8\u518c\u200b\u671f\u95f4\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>NORMAL</code>\u3002</p>"},{"location":"advanced_guides/customize_runtime/#mmdetection","title":"\u4f7f\u7528\u200b MMDetection \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u94a9\u5b50","text":"<p>\u200b\u5982\u679c\u200b MMDetection \u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u8be5\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u4ee5\u200b\u4f7f\u7528\u200b\u8be5\u200b\u94a9\u5b50\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b</p>"},{"location":"advanced_guides/customize_runtime/#numclasscheckhook","title":"\u4f8b\u5b50\u200b: <code>NumClassCheckHook</code>","text":"<p>\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b NumClassCheckHook \u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\u6765\u200b\u68c0\u67e5\u200b <code>num_classes</code> \u200b\u662f\u5426\u200b\u5728\u200b head \u200b\u4e2d\u200b\u548c\u200b <code>dataset</code> \u200b\u4e2d\u200b\u7684\u200b <code>classes</code> \u200b\u7684\u200b\u957f\u5ea6\u200b\u76f8\u5339\u914d\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5728\u200b default_runtime.py \u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u5b83\u200b\u3002</p> <pre><code>custom_hooks = [dict(type='NumClassCheckHook')]\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#_10","title":"\u4fee\u6539\u200b\u9ed8\u8ba4\u200b\u8fd0\u884c\u200b\u65f6\u200b\u94a9\u5b50","text":"<p>\u200b\u6709\u200b\u4e00\u4e9b\u200b\u5e38\u89c1\u200b\u7684\u200b\u94a9\u5b50\u200b\u662f\u200b\u901a\u8fc7\u200b <code>default_hooks</code> \u200b\u6ce8\u518c\u200b\u7684\u200b\uff0c\u200b\u5b83\u4eec\u200b\u662f\u200b</p> <ul> <li><code>IterTimerHook</code>\uff1a\u200b\u8bb0\u5f55\u200b \u201cdata_time\u201d \u200b\u7528\u4e8e\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u548c\u200b \u201ctime\u201d \u200b\u7528\u4e8e\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u6b65\u9aa4\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</li> <li><code>LoggerHook</code>\uff1a\u200b\u4ece\u200b<code>Runner</code>\u200b\u7684\u200b\u4e0d\u540c\u200b\u7ec4\u4ef6\u200b\u6536\u96c6\u200b\u65e5\u5fd7\u200b\u5e76\u200b\u5c06\u200b\u5b83\u4eec\u200b\u5199\u5165\u200b\u7ec8\u7aef\u200b\u3001JSON\u200b\u6587\u4ef6\u200b\u3001tensorboard\u200b\u548c\u200b wandb \u200b\u7b49\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</li> <li><code>ParamSchedulerHook</code>\uff1a\u200b\u66f4\u65b0\u200b\u4f18\u5316\u200b\u5668\u4e2d\u200b\u4e00\u4e9b\u200b\u8d85\u200b\u53c2\u6570\u200b\u7684\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b\u52a8\u91cf\u200b\u3002</li> <li><code>CheckpointHook</code>\uff1a\u200b\u5b9a\u671f\u200b\u4fdd\u5b58\u200b\u68c0\u67e5\u70b9\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</li> <li><code>DistSamplerSeedHook</code>\uff1a\u200b\u4e3a\u200b\u91c7\u6837\u5668\u200b\u548c\u200b\u6279\u5904\u7406\u200b\u91c7\u6837\u5668\u200b\u8bbe\u7f6e\u200b\u79cd\u5b50\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</li> <li><code>DetVisualizationHook</code>\uff1a\u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</li> </ul> <p><code>IterTimerHook</code>\u3001<code>ParamSchedulerHook</code> \u200b\u548c\u200b <code>DistSamplerSeedHook</code> \u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u901a\u5e38\u200b\u4e0d\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u5c06\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b <code>LoggerHook</code>\u3001<code>CheckpointHook</code> \u200b\u548c\u200b <code>DetVisualizationHook</code>\u3002</p>"},{"location":"advanced_guides/customize_runtime/#checkpointhook","title":"CheckpointHook","text":"<p>\u200b\u9664\u4e86\u200b\u5b9a\u671f\u200b\u4fdd\u5b58\u200b\u68c0\u67e5\u70b9\u200b\uff0c<code>CheckpointHook</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5176\u4ed6\u200b\u9009\u9879\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>max_keep_ckpts</code>\u3001<code>save_optimizer</code> \u200b\u7b49\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b <code>max_keep_ckpts</code> \u200b\u53ea\u200b\u4fdd\u5b58\u200b\u5c11\u91cf\u200b\u68c0\u67e5\u70b9\u200b\u6216\u200b\u901a\u8fc7\u200b <code>save_optimizer</code> \u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u5b58\u50a8\u200b\u4f18\u5316\u200b\u5668\u200b\u7684\u200b\u72b6\u6001\u200b\u5b57\u5178\u200b\u3002\u200b\u53c2\u6570\u200b\u7684\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u5728\u200b\u8fd9\u91cc\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b\u3002</p> <pre><code>default_hooks = dict(\n    checkpoint=dict(\n        type='CheckpointHook',\n        interval=1,\n        max_keep_ckpts=3,\n        save_optimizer=True))\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#loggerhook","title":"LoggerHook","text":"<p><code>LoggerHook</code> \u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u95f4\u9694\u200b\u3002\u200b\u8be6\u7ec6\u200b\u7528\u6cd5\u200b\u53ef\u4ee5\u200b\u5728\u200b docstring \u200b\u4e2d\u200b\u627e\u5230\u200b\u3002</p> <pre><code>default_hooks = dict(logger=dict(type='LoggerHook', interval=50))\n</code></pre>"},{"location":"advanced_guides/customize_runtime/#detvisualizationhook","title":"DetVisualizationHook","text":"<p><code>DetVisualizationHook</code> \u200b\u4f7f\u7528\u200b <code>DetLocalVisualizer</code> \u200b\u6765\u200b\u53ef\u89c6\u5316\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c<code>DetLocalVisualizer</code> \u200b\u652f\u6301\u200b\u4e0d\u540c\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>TensorboardVisBackend</code> \u200b\u548c\u200b <code>WandbVisBackend</code> \uff08\u200b\u89c1\u200b docstring \u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\uff09\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u591a\u4e2a\u200b\u540e\u7aef\u200b\u6765\u200b\u8fdb\u884c\u200b\u53ef\u89c6\u5316\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code>default_hooks = dict(\n    visualization=dict(type='DetVisualizationHook', draw=True))\n\nvis_backends = [dict(type='LocalVisBackend'),\n                dict(type='TensorboardVisBackend')]\nvisualizer = dict(\n    type='DetLocalVisualizer', vis_backends=vis_backends, name='visualizer')\n</code></pre>"},{"location":"advanced_guides/customize_transforms/","title":"\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u9884\u5904\u7406\u200b\u6d41\u7a0b","text":"<ol> <li>\u200b\u5728\u200b\u4efb\u610f\u200b\u6587\u4ef6\u200b\u91cc\u200b\u5199\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5728\u200b <code>my_pipeline.py</code>\uff0c\u200b\u5b83\u200b\u4ee5\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u5e76\u4e14\u200b\u8f93\u51fa\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\uff1a</li> </ol> <pre><code>import random\nfrom mmcv.transforms import BaseTransform\nfrom mmdet.registry import TRANSFORMS\n\n\n@TRANSFORMS.register_module()\nclass MyTransform(BaseTransform):\n    \"\"\"Add your transform\n\n    Args:\n        p (float): Probability of shifts. Default 0.5.\n    \"\"\"\n\n    def __init__(self, prob=0.5):\n        self.prob = prob\n\n    def transform(self, results):\n        if random.random() &gt; self.prob:\n            results['dummy'] = True\n        return results\n</code></pre> <ol> <li>\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\u8c03\u7528\u200b\u5e76\u200b\u4f7f\u7528\u200b\u4f60\u200b\u5199\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u9700\u8981\u200b\u786e\u4fdd\u200b\u4f60\u200b\u7684\u200b\u8bad\u7ec3\u200b\u811a\u672c\u200b\u80fd\u591f\u200b\u6b63\u786e\u200b\u5bfc\u5165\u200b\u65b0\u589e\u200b\u6a21\u5757\u200b\uff1a</li> </ol> <pre><code>custom_imports = dict(imports=['path.to.my_pipeline'], allow_failed_imports=False)\n\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='MyTransform', prob=0.2),\n    dict(type='PackDetInputs')\n]\n</code></pre> <ol> <li>\u200b\u53ef\u89c6\u5316\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u5904\u7406\u200b\u6d41\u7a0b\u200b\u7684\u200b\u7ed3\u679c\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\u60f3\u8981\u200b\u53ef\u89c6\u5316\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u5904\u7406\u200b\u6d41\u7a0b\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>tools/misc/browse_dataset.py</code> \u200b\u76f4\u89c2\u200b    \u200b\u5730\u200b\u6d4f\u89c8\u200b\u68c0\u6d4b\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u56fe\u50cf\u200b\u548c\u200b\u6807\u6ce8\u200b\u4fe1\u606f\u200b\uff09\uff0c\u200b\u6216\u200b\u5c06\u200b\u56fe\u50cf\u200b\u4fdd\u5b58\u200b\u5230\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u3002    \u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u8bf7\u200b\u53c2\u8003\u200b\u53ef\u89c6\u5316\u200b\u6587\u6863\u200b</p>"},{"location":"advanced_guides/data_flow/","title":"\u6570\u636e\u6d41\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/datasets/","title":"\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/engine/","title":"\u6267\u884c\u200b\u5f15\u64ce\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/evaluation/","title":"\u7cbe\u5ea6\u200b\u8bc4\u6d4b\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/how_to/","title":"How to","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u6536\u96c6\u200b\u4e86\u200b\u4efb\u4f55\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b MMDetection \u200b\u8fdb\u884c\u200b xxx \u200b\u7684\u200b\u7b54\u6848\u200b\u3002 \u200b\u5982\u679c\u200b\u60a8\u200b\u9047\u5230\u200b\u6709\u5173\u200b<code>\u200b\u5982\u4f55\u200b\u505a\u200b</code>\u200b\u7684\u200b\u95ee\u9898\u200b\u53ca\u200b\u7b54\u6848\u200b\uff0c\u200b\u8bf7\u200b\u968f\u65f6\u200b\u66f4\u65b0\u200b\u6b64\u200b\u6587\u6863\u200b\uff01</p>"},{"location":"advanced_guides/how_to/#mmpretrain","title":"\u4f7f\u7528\u200b MMPretrain \u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc","text":"<p>MMDet\u3001MMPretrain\u3001MMSeg \u200b\u4e2d\u200b\u7684\u200b\u6a21\u578b\u200b\u6ce8\u518c\u8868\u200b\u90fd\u200b\u7ee7\u627f\u200b\u81ea\u200b MMEngine \u200b\u4e2d\u200b\u7684\u200b\u6839\u200b\u6ce8\u518c\u8868\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8fd9\u4e9b\u200b\u5b58\u50a8\u200b\u5e93\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5f7c\u6b64\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6a21\u5757\u200b\u3002 \u200b\u56e0\u6b64\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u6765\u81ea\u200b MMPretrain \u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u5b9e\u73b0\u200bMMPretrain \u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u5b58\u5728\u200b\u7684\u200b\u7f51\u7edc\u200b\u3002</p>"},{"location":"advanced_guides/how_to/#mmpretrain_1","title":"\u4f7f\u7528\u200b\u5728\u200b MMPretrain \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc","text":"<p>\u200b\u5047\u8bbe\u200b\u60f3\u200b\u5c06\u200b <code>MobileNetV3-small</code> \u200b\u4f5c\u4e3a\u200b <code>RetinaNet</code> \u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5219\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/retinanet_r50_fpn.py',\n    '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\n# please install mmpretrain\n# import mmpretrain.models to trigger register_module in mmpretrain\ncustom_imports = dict(imports=['mmpretrain.models'], allow_failed_imports=False)\npretrained = 'https://download.openmmlab.com/mmclassification/v0/mobilenet_v3/convert/mobilenet_v3_small-8427ecf0.pth'\nmodel = dict(\n    backbone=dict(\n        _delete_=True, # \u200b\u5c06\u200b _base_ \u200b\u4e2d\u200b\u5173\u4e8e\u200b backbone \u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u5220\u9664\u200b\n        type='mmpretrain.MobileNetV3', # \u200b\u4f7f\u7528\u200b mmpretrain \u200b\u4e2d\u200b\u7684\u200b MobileNetV3\n        arch='small',\n        out_indices=(3, 8, 11), # \u200b\u4fee\u6539\u200b out_indices\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=pretrained,\n            prefix='backbone.')), # mmpretrain \u200b\u4e2d\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\u542b\u4e49\u200b prefix='backbone.'\uff0c\u200b\u4e3a\u4e86\u200b\u6b63\u5e38\u200b\u52a0\u8f7d\u200b\u6743\u91cd\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b\u8fd9\u4e2a\u200b prefix \u200b\u53bb\u6389\u200b\u3002\n    # \u200b\u4fee\u6539\u200b in_channels\n    neck=dict(in_channels=[24, 48, 96], start_level=0))\n</code></pre>"},{"location":"advanced_guides/how_to/#mmpretrain-timm","title":"\u901a\u8fc7\u200b MMPretrain \u200b\u4f7f\u7528\u200b TIMM \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc","text":"<p>\u200b\u7531\u4e8e\u200b MMPretrain \u200b\u63d0\u4f9b\u200b\u4e86\u200b PyTorch Image Models (<code>timm</code>) \u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u5c01\u88c5\u200b\uff0c\u200b\u7528\u6237\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b MMPretrain \u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b <code>timm</code> \u200b\u4e2d\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u3002\u200b\u5047\u8bbe\u200b\u60f3\u200b\u5c06\u200b <code>EfficientNet-B1</code> \u200b\u4f5c\u4e3a\u200b <code>RetinaNet</code> \u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5219\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code># https://github.com/open-mmlab/mmdetection/blob/main/configs/timm_example/retinanet_timm_efficientnet_b1_fpn_1x_coco.py\n_base_ = [\n    '../_base_/models/retinanet_r50_fpn.py',\n    '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\n\n# please install mmpretrain\n# import mmpretrain.models to trigger register_module in mmpretrain\ncustom_imports = dict(imports=['mmpretrain.models'], allow_failed_imports=False)\nmodel = dict(\n    backbone=dict(\n        _delete_=True, # \u200b\u5c06\u200b _base_ \u200b\u4e2d\u200b\u5173\u4e8e\u200b backbone \u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u5220\u9664\u200b\n        type='mmpretrain.TIMMBackbone', # \u200b\u4f7f\u7528\u200b mmpretrain \u200b\u4e2d\u200b timm \u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\n        model_name='efficientnet_b1',\n        features_only=True,\n        pretrained=True,\n        out_indices=(1, 2, 3, 4)), # \u200b\u4fee\u6539\u200b out_indices\n    neck=dict(in_channels=[24, 40, 112, 320])) # \u200b\u4fee\u6539\u200b in_channels\n\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\n</code></pre> <p><code>type='mmpretrain.TIMMBackbone'</code> \u200b\u8868\u793a\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u4f7f\u7528\u200b MMPretrain \u200b\u4e2d\u200b\u7684\u200b <code>TIMMBackbone</code> \u200b\u7c7b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4f7f\u7528\u200b\u7684\u200b\u6a21\u578b\u200b\u4e3a\u200b<code>EfficientNet-B1</code>\uff0c\u200b\u5176\u4e2d\u200b <code>mmpretrain</code> \u200b\u8868\u793a\u200b MMPretrain \u200b\u5e93\u200b\uff0c\u200b\u800c\u200b <code>TIMMBackbone</code> \u200b\u8868\u793a\u200b MMPretrain \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b TIMMBackbone \u200b\u5305\u88c5\u200b\u5668\u200b\u3002</p> <p>\u200b\u5173\u4e8e\u200b\u5c42\u6b21\u200b\u6ce8\u518c\u5668\u200b\u7684\u200b\u5177\u4f53\u200b\u539f\u7406\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b MMEngine \u200b\u6587\u6863\u200b\uff0c\u200b\u5173\u4e8e\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b MMPretrain \u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b backbone\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b MMPretrain \u200b\u6587\u6863\u200b\u3002</p>"},{"location":"advanced_guides/how_to/#_1","title":"\u4f7f\u7528\u200b\u9a6c\u8d5b\u514b\u200b\u6570\u636e\u200b\u589e\u5f3a","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>Mosaic</code>\uff0c\u200b\u90a3\u4e48\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4f60\u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b <code>MultiImageMixDataset</code>\u3002\u200b\u4ee5\u200b <code>Faster R-CNN</code> \u200b\u7b97\u6cd5\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u505a\u6cd5\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code># \u200b\u76f4\u63a5\u200b\u6253\u5f00\u200b configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py ,\u200b\u589e\u6dfb\u200b\u5982\u4e0b\u200b\u5b57\u200b\u6bb5\u200b\ndata_root = 'data/coco/'\ndataset_type = 'CocoDataset'\nimg_scale=(1333, 800)\n\ntrain_pipeline = [\n    dict(type='Mosaic', img_scale=img_scale, pad_val=114.0),\n    dict(\n        type='RandomAffine',\n        scaling_ratio_range=(0.1, 2),\n        border=(-img_scale[0] // 2, -img_scale[1] // 2)), # \u200b\u56fe\u50cf\u200b\u7ecf\u8fc7\u200b\u9a6c\u8d5b\u514b\u200b\u5904\u7406\u200b\u540e\u200b\u4f1a\u200b\u653e\u5927\u200b4\u200b\u500d\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4eff\u5c04\u53d8\u6362\u200b\u6765\u200b\u6062\u590d\u200b\u56fe\u50cf\u200b\u7684\u200b\u5927\u5c0f\u200b\u3002\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PackDetInputs'))\n]\n\ntrain_dataset = dict(\n    _delete_ = True, # \u200b\u5220\u9664\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u8bbe\u7f6e\u200b\n    type='MultiImageMixDataset',\n    dataset=dict(\n        type=dataset_type,\n        ann_file=data_root + 'annotations/instances_train2017.json',\n        img_prefix=data_root + 'train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True)\n        ],\n        filter_empty_gt=False,\n    ),\n    pipeline=train_pipeline\n    )\n\ndata = dict(\n    train=train_dataset\n    )\n</code></pre>"},{"location":"advanced_guides/how_to/#_2","title":"\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u51bb\u7ed3\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u540e\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u89e3\u51bb\u200b\u9aa8\u5e72\u200b\u7f51\u7edc","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u51bb\u7ed3\u200b\u4e86\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u5e76\u200b\u5e0c\u671b\u200b\u5728\u200b\u51e0\u4e2a\u200b\u8bad\u7ec3\u200b\u5468\u671f\u200b\u540e\u200b\u89e3\u51bb\u200b\u5b83\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b hook \u200b\u6765\u200b\u5b9e\u73b0\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u3002\u200b\u4ee5\u7528\u200b ResNet \u200b\u4e3a\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b Faster R-CNN \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u51bb\u7ed3\u200b\u4e00\u4e2a\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5c42\u200b\u5e76\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u5982\u4e0b\u200b <code>custom_hooks</code>:</p> <pre><code>_base_ = [\n    '../_base_/models/faster-rcnn_r50_fpn.py',\n    '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\nmodel = dict(\n    # freeze one stage of the backbone network.\n    backbone=dict(frozen_stages=1),\n)\ncustom_hooks = [dict(type=\"UnfreezeBackboneEpochBasedHook\", unfreeze_epoch=1)]\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u5728\u200b <code>mmdet/core/hook/unfreeze_backbone_epoch_based_hook.py</code> \u200b\u5f53\u4e2d\u200b\u4e66\u5199\u200b <code>UnfreezeBackboneEpochBasedHook</code> \u200b\u7c7b\u200b</p> <pre><code>from mmengine.model import is_model_wrapper\nfrom mmengine.hooks import Hook\nfrom mmdet.registry import HOOKS\n\n\n@HOOKS.register_module()\nclass UnfreezeBackboneEpochBasedHook(Hook):\n    \"\"\"Unfreeze backbone network Hook.\n\n    Args:\n        unfreeze_epoch (int): The epoch unfreezing the backbone network.\n    \"\"\"\n\n    def __init__(self, unfreeze_epoch=1):\n        self.unfreeze_epoch = unfreeze_epoch\n\n    def before_train_epoch(self, runner):\n        # Unfreeze the backbone network.\n        # Only valid for resnet.\n        if runner.epoch == self.unfreeze_epoch:\n            model = runner.model\n            if is_module_wrapper(model):\n                model = model.module\n            backbone = model.backbone\n            if backbone.frozen_stages &gt;= 0:\n                if backbone.deep_stem:\n                    backbone.stem.train()\n                    for param in backbone.stem.parameters():\n                        param.requires_grad = True\n                else:\n                    backbone.norm1.train()\n                    for m in [backbone.conv1, backbone.norm1]:\n                        for param in m.parameters():\n                            param.requires_grad = True\n\n            for i in range(1, backbone.frozen_stages + 1):\n                m = getattr(backbone, f'layer{i}')\n                m.train()\n                for param in m.parameters():\n                    param.requires_grad = True\n</code></pre>"},{"location":"advanced_guides/how_to/#_3","title":"\u83b7\u5f97\u200b\u65b0\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u901a\u9053\u200b\u6570","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u83b7\u5f97\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u901a\u9053\u200b\u6570\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5355\u72ec\u200b\u6784\u5efa\u200b\u8fd9\u4e2a\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u5e76\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u4f2a\u9020\u200b\u7684\u200b\u56fe\u7247\u200b\u6765\u200b\u83b7\u53d6\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u9636\u6bb5\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> <p>\u200b\u4ee5\u200b <code>ResNet</code> \u200b\u4e3a\u4f8b\u200b\uff1a</p> <pre><code>from mmdet.models import ResNet\nimport torch\nself = ResNet(depth=18)\nself.eval()\ninputs = torch.rand(1, 3, 32, 32)\nlevel_outputs = self.forward(inputs)\nfor level_out in level_outputs:\n    print(tuple(level_out.shape))\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u811a\u672c\u200b\u7684\u200b\u8f93\u51fa\u200b\u4e3a\u200b:</p> <pre><code>(1, 64, 8, 8)\n(1, 128, 4, 4)\n(1, 256, 2, 2)\n(1, 512, 1, 1)\n</code></pre> <p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5c06\u200b\u811a\u672c\u200b\u4e2d\u200b\u7684\u200b <code>ResNet(depth=18)</code> \u200b\u66ff\u6362\u200b\u4e3a\u200b\u81ea\u5df1\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u914d\u7f6e\u200b\u6765\u200b\u5f97\u5230\u200b\u65b0\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u901a\u9053\u200b\u6570\u200b\u3002</p>"},{"location":"advanced_guides/how_to/#mmdetection-detectron2","title":"MMDetection \u200b\u4e2d\u200b\u8bad\u7ec3\u200b Detectron2 \u200b\u7684\u200b\u6a21\u578b","text":"<p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>Detectron2Wrapper</code> \u200b\u4ece\u800c\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u4f7f\u7528\u200b Detectron2 \u200b\u7684\u200b\u6a21\u578b\u200b\u3002 \u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b Faster R-CNN, Mask R-CNN \u200b\u548c\u200b RetinaNet \u200b\u7684\u200b\u793a\u4f8b\u200b\u6765\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u8bad\u7ec3\u200b/\u200b\u6d4b\u8bd5\u200b Detectron2 \u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7b97\u6cd5\u200b\u7ec4\u4ef6\u200b\u8981\u200b\u548c\u200b Detectron2 \u200b\u4e2d\u200b\u7684\u200b\u76f8\u540c\u200b\u3002\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9996\u5148\u200b\u521d\u59cb\u5316\u200b Detectron2 \u200b\u7684\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u5c06\u200b\u8986\u76d6\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\uff0c\u200b\u6a21\u578b\u200b\u5c06\u200b\u57fa\u4e8e\u200b\u66f4\u65b0\u200b\u8fc7\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u6765\u200b\u5efa\u7acb\u200b\u3002 \u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9996\u5148\u200b\u8f6c\u6362\u6210\u200b Detectron2 \u200b\u7684\u200b\u7c7b\u578b\u200b\u5e76\u200b\u8f93\u5165\u200b\u8fdb\u200b Detectron2 \u200b\u7684\u200b\u6a21\u578b\u200b\u4e2d\u200b\u3002\u200b\u5728\u200b\u63a8\u7406\u200b\u9636\u6bb5\u200b\uff0cDetectron2 \u200b\u7684\u200b\u6a21\u578b\u200b\u7ed3\u679c\u200b\u5c06\u4f1a\u200b\u8f6c\u6362\u200b\u56de\u200b MMDetection \u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"advanced_guides/how_to/#detectron2","title":"\u4f7f\u7528\u200b Detectron2 \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd","text":"<p><code>Detectron2Wrapper</code> \u200b\u4e2d\u200b\u7684\u200b\u6743\u91cd\u200b\u521d\u59cb\u5316\u200b\u5c06\u200b\u4e0d\u200b\u4f7f\u7528\u200b MMDetection \u200b\u7684\u200b\u903b\u8f91\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b <code>model.d2_detector.weights=xxx</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6743\u91cd\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>model.d2_detector.weights='detectron2://ImageNetPretrained/MSRA/R-50.pkl'</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b ResNet-50 \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\uff0c\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b <code>model.d2_detector.weights='detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_1x/137260431/model_final_a54504.pkl'</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b Detectron2 \u200b\u4e2d\u200b\u63d0\u51fa\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200bMask R-CNN\u200b\u6743\u91cd\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a \u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b <code>load_from</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b Detectron2 \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>tools/model_converters/detectron2_to_mmdet.py</code> \u200b\u5148\u5bf9\u200b\u8be5\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\u3002</p> <p>\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\uff0c\u200b\u7528\u6237\u200b\u5e94\u8be5\u200b\u9996\u5148\u200b\u4f7f\u7528\u200b <code>tools/model_converters/detectron2_to_mmdet.py</code> \u200b\u5c06\u200b Detectron2 \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\u8f6c\u6362\u200b\u4e3a\u200b MMDetection \u200b\u53ef\u200b\u8bfb\u53d6\u200b\u7684\u200b\u7ed3\u6784\u200b\u3002</p> <pre><code>python tools/model_converters/detectron2_to_mmdet.py ${Detectron2 ckpt path} ${MMDetectron ckpt path}\u3002\n</code></pre>"},{"location":"advanced_guides/models/","title":"\u6a21\u578b\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/structures/","title":"\u6570\u636e\u7ed3\u6784\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":""},{"location":"advanced_guides/transforms/","title":"\u6570\u636e\u200b\u53d8\u6362\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":"<p>\u200b\u6309\u7167\u200b\u60ef\u4f8b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b <code>Dataset</code> \u200b\u548c\u200b <code>DataLoader</code> \u200b\u8fdb\u884c\u200b\u591a\u200b\u8fdb\u7a0b\u200b\u7684\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u3002<code>Dataset</code> \u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u6570\u636e\u200b\u5185\u5bb9\u200b\u4e3a\u200b\u6a21\u578b\u200b <code>forward</code> \u200b\u65b9\u6cd5\u200b\u7684\u200b\u5404\u4e2a\u200b\u53c2\u6570\u200b\u3002\u200b\u7531\u4e8e\u200b\u5728\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u4e2d\u200b\uff0c\u200b\u8f93\u5165\u200b\u7684\u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u5927\u5c0f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b <code>MMCV</code> \u200b\u91cc\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>DataContainer</code> \u200b\u7c7b\u53bb\u200b\u6536\u96c6\u200b\u548c\u200b\u5206\u53d1\u200b\u4e0d\u540c\u200b\u5927\u5c0f\u200b\u7684\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b\u8fd9\u91cc\u200b\u3002</p> <p>\u200b\u6570\u636e\u200b\u7684\u200b\u51c6\u5907\u200b\u6d41\u7a0b\u200b\u548c\u200b\u6570\u636e\u200b\u96c6\u662f\u200b\u89e3\u200b\u8026\u200b\u7684\u200b\u3002\u200b\u901a\u5e38\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u96c6\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5982\u4f55\u200b\u5904\u7406\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\uff08annotations\uff09\u200b\u4fe1\u606f\u200b\uff0c\u200b\u800c\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u51c6\u5907\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u5b57\u5178\u200b\u7684\u200b\u6240\u6709\u200b\u6b65\u9aa4\u200b\u3002\u200b\u4e00\u4e2a\u200b\u6d41\u7a0b\u200b\u5305\u62ec\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u628a\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u8f93\u51fa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5b57\u5178\u200b\u7ed9\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u53d8\u6362\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5728\u200b\u4e0b\u56fe\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7ecf\u5178\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\u3002\u200b\u84dd\u8272\u200b\u5757\u200b\u662f\u200b\u6570\u636e\u5904\u7406\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u968f\u7740\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\u7684\u200b\u5904\u7406\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7ed3\u679c\u200b\u5b57\u5178\u200b\u4e2d\u200b\u52a0\u5165\u200b\u65b0\u200b\u7684\u200b\u952e\u200b\uff08\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u7eff\u8272\u200b\uff09\u200b\u6216\u200b\u66f4\u65b0\u200b\u73b0\u6709\u200b\u7684\u200b\u952e\u200b\uff08\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u6a59\u8272\u200b\uff09\u3002</p> <p></p> <p>\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\uff08data loading\uff09\u3001\u200b\u9884\u5904\u7406\u200b\uff08pre-processing\uff09\u3001\u200b\u683c\u5f0f\u200b\u53d8\u5316\u200b\uff08formatting\uff09\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08test-time augmentation\uff09\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u662f\u200b <code>Faster R-CNN</code> \u200b\u7684\u200b\u4e00\u4e2a\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code>img_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='Normalize', **img_norm_cfg),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels']),\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(type='Normalize', **img_norm_cfg),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img']),\n        ])\n]\n</code></pre>"},{"location":"migration/api_and_registry_migration/","title":"\u5c06\u200b API \u200b\u548c\u200b\u6ce8\u518c\u5668\u200b\u4ece\u200b MMDetection 2.x \u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x","text":""},{"location":"migration/config_migration/","title":"\u5c06\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4ece\u200b MMDetection 2.x \u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x","text":"<p>MMDetection 3.x \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e0e\u200b 2.x \u200b\u76f8\u6bd4\u200b\u6709\u200b\u8f83\u5927\u200b\u53d8\u5316\u200b\uff0c\u200b\u8fd9\u7bc7\u200b\u6587\u6863\u200b\u5c06\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5c06\u200b 2.x \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fc1\u79fb\u200b\u5230\u200b 3.x\u3002</p> <p>\u200b\u5728\u200b\u524d\u9762\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6559\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ee5\u200b Mask R-CNN \u200b\u4e3a\u4f8b\u200b\u4ecb\u7ecd\u200b\u4e86\u200b MMDetection 3.x \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7ed3\u6784\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u5c06\u200b\u6309\u200b\u540c\u6837\u200b\u7684\u200b\u7ed3\u6784\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5c06\u200b 2.x \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x\u3002</p>"},{"location":"migration/config_migration/#_1","title":"\u6a21\u578b\u200b\u914d\u7f6e","text":"<p>\u200b\u6a21\u578b\u200b\u7684\u200b\u914d\u7f6e\u200b\u4e0e\u200b 2.x \u200b\u76f8\u6bd4\u200b\u5e76\u200b\u6ca1\u6709\u200b\u592a\u200b\u5927\u200b\u53d8\u5316\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b backbone\uff0cneck\uff0chead\uff0c\u200b\u4ee5\u53ca\u200b train_cfg \u200b\u548c\u200b test_cfg\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u53c2\u6570\u200b\u4e0e\u200b 2.x \u200b\u7248\u672c\u200b\u7684\u200b\u53c2\u6570\u200b\u4fdd\u6301\u4e00\u81f4\u200b\u3002</p> <p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b 3.x \u200b\u7248\u672c\u200b\u7684\u200b\u6a21\u578b\u200b\u4e2d\u200b\u65b0\u589e\u200b\u4e86\u200b <code>DataPreprocessor</code> \u200b\u6a21\u5757\u200b\u3002 <code>DataPreprocessor</code> \u200b\u6a21\u5757\u200b\u7684\u200b\u914d\u7f6e\u200b\u4f4d\u4e8e\u200b <code>model.data_preprocessor</code> \u200b\u4e2d\u200b\uff0c\u200b\u5b83\u200b\u7528\u4e8e\u200b\u5bf9\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u9884\u5904\u7406\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5bf9\u200b\u8f93\u5165\u200b\u56fe\u50cf\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u5c06\u200b\u4e0d\u540c\u200b\u5927\u5c0f\u200b\u7684\u200b\u56fe\u7247\u200b\u8fdb\u884c\u200b padding \u200b\u4ece\u800c\u200b\u7ec4\u6210\u200b batch\uff0c\u200b\u5c06\u200b\u56fe\u50cf\u200b\u4ece\u200b\u5185\u5b58\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u5230\u200b\u663e\u5b58\u200b\u4e2d\u7b49\u200b\u3002\u200b\u8fd9\u90e8\u5206\u200b\u914d\u7f6e\u200b\u53d6\u4ee3\u200b\u4e86\u200b\u539f\u672c\u200b\u5b58\u5728\u200b\u4e8e\u200b train_pipeline \u200b\u548c\u200b test_pipeline \u200b\u4e2d\u200b\u7684\u200b <code>Normalize</code> \u200b\u548c\u200b <code>Pad</code>\u3002</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code># \u200b\u56fe\u50cf\u200b\u5f52\u4e00\u5316\u200b\u53c2\u6570\u200b\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53],\n    std=[58.395, 57.12, 57.375],\n    to_rgb=True)\npipeline=[\n    ...,\n    dict(type='Normalize', **img_norm_cfg),\n    dict(type='Pad', size_divisor=32),  # \u200b\u56fe\u50cf\u200b padding \u200b\u5230\u200b 32 \u200b\u7684\u200b\u500d\u6570\u200b\n    ...\n]\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>model = dict(\n    data_preprocessor=dict(\n        type='DetDataPreprocessor',\n        # \u200b\u56fe\u50cf\u200b\u5f52\u4e00\u5316\u200b\u53c2\u6570\u200b\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        bgr_to_rgb=True,\n        # \u200b\u56fe\u50cf\u200b padding \u200b\u53c2\u6570\u200b\n        pad_mask=True,  # \u200b\u5728\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u5c06\u200b mask \u200b\u4e5f\u200b\u8fdb\u884c\u200b padding\n        pad_size_divisor=32)  # \u200b\u56fe\u50cf\u200b padding \u200b\u5230\u200b 32 \u200b\u7684\u200b\u500d\u6570\u200b\n)\n</code></pre>"},{"location":"migration/config_migration/#_2","title":"\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u8bc4\u6d4b\u200b\u5668\u200b\u914d\u7f6e","text":"<p>\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u8bc4\u6d4b\u200b\u90e8\u5206\u200b\u7684\u200b\u914d\u7f6e\u200b\u76f8\u6bd4\u200b 2.x \u200b\u7248\u672c\u200b\u6709\u200b\u8f83\u5927\u200b\u7684\u200b\u53d8\u5316\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u4ece\u200b Dataloader \u200b\u548c\u200b Dataset\uff0cData transform pipeline\uff0c\u200b\u4ee5\u53ca\u200b\u8bc4\u6d4b\u200b\u5668\u200b\u914d\u7f6e\u200b\u4e09\u4e2a\u200b\u65b9\u9762\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5c06\u200b 2.x \u200b\u7248\u672c\u200b\u7684\u200b\u914d\u7f6e\u200b\u8fc1\u79fb\u200b\u5230\u200b 3.x \u200b\u7248\u672c\u200b\u3002</p>"},{"location":"migration/config_migration/#dataloader-dataset","title":"Dataloader \u200b\u548c\u200b Dataset \u200b\u914d\u7f6e","text":"<p>\u200b\u5728\u200b\u65b0\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u4e0e\u200b PyTorch \u200b\u5b98\u65b9\u200b\u7684\u200b DataLoader \u200b\u4fdd\u6301\u4e00\u81f4\u200b\uff0c\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u7528\u6237\u200b\u66f4\u200b\u5bb9\u6613\u200b\u7406\u89e3\u200b\u548c\u200b\u4e0a\u200b\u624b\u200b\u3002 \u200b\u6211\u4eec\u200b\u5c06\u200b\u8bad\u7ec3\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u8bbe\u7f6e\u200b\u5206\u522b\u200b\u653e\u5728\u200b <code>train_dataloader</code>\uff0c<code>val_dataloader</code> \u200b\u548c\u200b <code>test_dataloader</code> \u200b\u4e2d\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5206\u522b\u200b\u5bf9\u200b\u8fd9\u4e9b\u200b dataloader \u200b\u8bbe\u7f6e\u200b\u4e0d\u540c\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5176\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u4e0e\u200b PyTorch \u200b\u7684\u200b Dataloader \u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u53c2\u6570\u200b\u57fa\u672c\u4e00\u81f4\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b 2.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u4e0d\u53ef\u200b\u914d\u7f6e\u200b\u7684\u200b <code>sampler</code>\uff0c<code>batch_sampler</code>\uff0c<code>persistent_workers</code> \u200b\u7b49\u200b\u53c2\u6570\u200b\u90fd\u200b\u653e\u5230\u200b\u4e86\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u5730\u200b\u8bbe\u7f6e\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>train_dataloader.dataset</code>\uff0c<code>val_dataloader.dataset</code> \u200b\u548c\u200b <code>test_dataloader.dataset</code> \u200b\u6765\u200b\u8bbe\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5b83\u4eec\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b 2.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b <code>data.train</code>\uff0c<code>data.val</code> \u200b\u548c\u200b <code>data.test</code>\u3002</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code>data = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type=dataset_type,\n        ann_file=data_root + 'annotations/instances_train2017.json',\n        img_prefix=data_root + 'train2017/',\n        pipeline=train_pipeline),\n    val=dict(\n        type=dataset_type,\n        ann_file=data_root + 'annotations/instances_val2017.json',\n        img_prefix=data_root + 'val2017/',\n        pipeline=test_pipeline),\n    test=dict(\n        type=dataset_type,\n        ann_file=data_root + 'annotations/instances_val2017.json',\n        img_prefix=data_root + 'val2017/',\n        pipeline=test_pipeline))\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>train_dataloader = dict(\n    batch_size=2,\n    num_workers=2,\n    persistent_workers=True,  # \u200b\u907f\u514d\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u540e\u200b dataloader \u200b\u91cd\u65b0\u200b\u521b\u5efa\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\n    sampler=dict(type='DefaultSampler', shuffle=True),  # \u200b\u9ed8\u8ba4\u200b\u7684\u200b sampler\uff0c\u200b\u540c\u65f6\u200b\u652f\u6301\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\u548c\u200b\u975e\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\n    batch_sampler=dict(type='AspectRatioBatchSampler'),  # \u200b\u9ed8\u8ba4\u200b\u7684\u200b batch_sampler\uff0c\u200b\u7528\u4e8e\u200b\u4fdd\u8bc1\u200b batch \u200b\u4e2d\u200b\u7684\u200b\u56fe\u7247\u200b\u5177\u6709\u200b\u76f8\u4f3c\u200b\u7684\u200b\u957f\u5bbd\u200b\u6bd4\u200b\uff0c\u200b\u4ece\u800c\u200b\u53ef\u4ee5\u200b\u66f4\u597d\u200b\u5730\u200b\u5229\u7528\u200b\u663e\u5b58\u200b\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        ann_file='annotations/instances_train2017.json',\n        data_prefix=dict(img='train2017/'),\n        filter_cfg=dict(filter_empty_gt=True, min_size=32),\n        pipeline=train_pipeline))\n# \u200b\u5728\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u914d\u7f6e\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b dataloader\nval_dataloader = dict(\n    batch_size=1,\n    num_workers=2,\n    persistent_workers=True,\n    drop_last=False,\n    sampler=dict(type='DefaultSampler', shuffle=False),\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        ann_file='annotations/instances_val2017.json',\n        data_prefix=dict(img='val2017/'),\n        test_mode=True,\n        pipeline=test_pipeline))\ntest_dataloader = val_dataloader  # \u200b\u6d4b\u8bd5\u200b dataloader \u200b\u7684\u200b\u914d\u7f6e\u200b\u4e0e\u200b\u9a8c\u8bc1\u200b dataloader \u200b\u7684\u200b\u914d\u7f6e\u200b\u76f8\u540c\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7701\u7565\u200b\n</code></pre>"},{"location":"migration/config_migration/#data-transform-pipeline","title":"Data transform pipeline \u200b\u914d\u7f6e","text":"<p>\u200b\u4e0a\u200b\u6587\u4e2d\u200b\u63d0\u5230\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u56fe\u50cf\u200b normalize \u200b\u548c\u200b padding \u200b\u7684\u200b\u914d\u7f6e\u200b\u4ece\u200b <code>train_pipeline</code> \u200b\u548c\u200b <code>test_pipeline</code> \u200b\u4e2d\u200b\u72ec\u7acb\u200b\u51fa\u6765\u200b\uff0c\u200b\u653e\u5230\u200b\u4e86\u200b <code>model.data_preprocessor</code> \u200b\u4e2d\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b 3.x \u200b\u7248\u672c\u200b\u7684\u200b pipeline \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b <code>Normalize</code> \u200b\u548c\u200b <code>Pad</code> \u200b\u8fd9\u200b\u4e24\u4e2a\u200b transform\u3002</p> <p>\u200b\u540c\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u5bf9\u200b\u8d1f\u8d23\u200b\u6570\u636e\u683c\u5f0f\u200b\u6253\u5305\u200b\u7684\u200b transform \u200b\u8fdb\u884c\u200b\u4e86\u200b\u91cd\u6784\u200b\uff0c\u200b\u5c06\u200b <code>Collect</code> \u200b\u548c\u200b <code>DefaultFormatBundle</code> \u200b\u8fd9\u200b\u4e24\u4e2a\u200b transform \u200b\u5408\u5e76\u200b\u4e3a\u4e86\u200b <code>PackDetInputs</code>\uff0c\u200b\u5b83\u200b\u8d1f\u8d23\u200b\u5c06\u200b data pipeline \u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u6253\u5305\u200b\u6210\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\uff0c\u200b\u5173\u4e8e\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\u7684\u200b\u8f6c\u6362\u200b\uff0c\u200b\u8be6\u89c1\u200b\u6570\u636e\u6d41\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u4ee5\u200b Mask R-CNN 1x \u200b\u7684\u200b train_pipeline \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5c06\u200b 2.x \u200b\u7248\u672c\u200b\u7684\u200b\u914d\u7f6e\u200b\u8fc1\u79fb\u200b\u5230\u200b 3.x \u200b\u7248\u672c\u200b\uff1a</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code>img_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='Normalize', **img_norm_cfg),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels']),\n]\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PackDetInputs')\n]\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b test_pipeline\uff0c\u200b\u9664\u4e86\u200b\u5c06\u200b <code>Normalize</code> \u200b\u548c\u200b <code>Pad</code> \u200b\u8fd9\u200b\u4e24\u4e2a\u200b transform \u200b\u53bb\u6389\u200b\u4e4b\u5916\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u5c06\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u7684\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08TTA\uff09\u200b\u4e0e\u200b\u666e\u901a\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u6d41\u7a0b\u200b\u5206\u5f00\u200b\uff0c\u200b\u79fb\u200b\u9664\u4e86\u200b <code>MultiScaleFlipAug</code>\u3002\u200b\u5173\u4e8e\u200b\u65b0\u7248\u200b\u7684\u200b TTA \u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\uff0c\u200b\u8be6\u89c1\u200bTTA \u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u540c\u6837\u200b\u4ee5\u200b Mask R-CNN 1x \u200b\u7684\u200b test_pipeline \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5c06\u200b 2.x \u200b\u7248\u672c\u200b\u7684\u200b\u914d\u7f6e\u200b\u8fc1\u79fb\u200b\u5230\u200b 3.x \u200b\u7248\u672c\u200b\uff1a</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code>test_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(type='Normalize', **img_norm_cfg),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img']),\n        ])\n]\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>test_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', scale=(1333, 800), keep_ratio=True),\n    dict(\n        type='PackDetInputs',\n        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',\n                   'scale_factor'))\n]\n</code></pre> <p>\u200b\u9664\u6b64\u4e4b\u5916\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u5bf9\u200b\u4e00\u4e9b\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u91cd\u6784\u200b\uff0c\u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b 2.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b transform \u200b\u4e0e\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b transform \u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\uff1a</p> \u200b\u540d\u79f0\u200b \u200b\u539f\u200b\u914d\u7f6e\u200b \u200b\u65b0\u200b\u914d\u7f6e\u200b Resize <pre><code>dict(type='Resize',\n     img_scale=(1333, 800),\n     keep_ratio=True)\n</code></pre> <pre><code>dict(type='Resize',\n     scale=(1333, 800),\n     keep_ratio=True)\n</code></pre> RandomResize <pre><code>dict(\n    type='Resize',\n    img_scale=[\n        (1333, 640), (1333, 800)],\n    multiscale_mode='range',\n    keep_ratio=True)\n</code></pre> <pre><code>dict(\n    type='RandomResize',\n    scale=[\n        (1333, 640), (1333, 800)],\n    keep_ratio=True)\n</code></pre> RandomChoiceResize <pre><code>dict(\n    type='Resize',\n    img_scale=[\n        (1333, 640), (1333, 672),\n        (1333, 704), (1333, 736),\n        (1333, 768), (1333, 800)],\n    multiscale_mode='value',\n    keep_ratio=True)\n</code></pre> <pre><code>dict(\n    type='RandomChoiceResize',\n    scales=[\n        (1333, 640), (1333, 672),\n        (1333, 704), (1333, 736),\n        (1333, 768), (1333, 800)],\n    keep_ratio=True)\n</code></pre> RandomFlip <pre><code>dict(type='RandomFlip',\n     flip_ratio=0.5)\n</code></pre> <pre><code>dict(type='RandomFlip',\n     prob=0.5)\n</code></pre>"},{"location":"migration/config_migration/#_3","title":"\u8bc4\u6d4b\u200b\u5668\u200b\u914d\u7f6e","text":"<p>\u200b\u5728\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u6a21\u578b\u200b\u7cbe\u5ea6\u200b\u8bc4\u6d4b\u200b\u4e0d\u518d\u200b\u4e0e\u200b\u6570\u636e\u200b\u96c6\u200b\u7ed1\u5b9a\u200b\uff0c\u200b\u800c\u662f\u200b\u901a\u8fc7\u200b\u8bc4\u6d4b\u200b\u5668\u200b\uff08Evaluator\uff09\u200b\u6765\u200b\u5b8c\u6210\u200b\u3002 \u200b\u8bc4\u6d4b\u200b\u5668\u200b\u914d\u7f6e\u200b\u5206\u4e3a\u200b val_evaluator \u200b\u548c\u200b test_evaluator \u200b\u4e24\u200b\u90e8\u5206\u200b\uff0c\u200b\u5176\u4e2d\u200b val_evaluator \u200b\u7528\u4e8e\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u8bc4\u6d4b\u200b\uff0ctest_evaluator \u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u8bc4\u6d4b\u200b\uff0c\u200b\u5bf9\u5e94\u200b 2.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b evaluation \u200b\u5b57\u200b\u6bb5\u200b\u3002 \u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b 2.x \u200b\u7248\u672c\u200b\u4e0e\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b\u8bc4\u6d4b\u200b\u5668\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\uff1a</p> \u200b\u8bc4\u6d4b\u200b\u6307\u6807\u200b\u540d\u79f0\u200b \u200b\u539f\u200b\u914d\u7f6e\u200b \u200b\u65b0\u200b\u914d\u7f6e\u200b COCO <pre><code>data = dict(\n    val=dict(\n        type='CocoDataset',\n        ann_file=data_root + 'annotations/instances_val2017.json'))\nevaluation = dict(metric=['bbox', 'segm'])\n</code></pre> <pre><code>val_evaluator = dict(\n    type='CocoMetric',\n    ann_file=data_root + 'annotations/instances_val2017.json',\n    metric=['bbox', 'segm'],\n    format_only=False)\n</code></pre> Pascal VOC <pre><code>data = dict(\n    val=dict(\n        type=dataset_type,\n        ann_file=data_root + 'VOC2007/ImageSets/Main/test.txt'))\nevaluation = dict(metric='mAP')\n</code></pre> <pre><code>val_evaluator = dict(\n    type='VOCMetric',\n    metric='mAP',\n    eval_mode='11points')\n</code></pre> OpenImages <pre><code>data = dict(\n    val=dict(\n        type='OpenImagesDataset',\n        ann_file=data_root + 'annotations/validation-annotations-bbox.csv',\n        img_prefix=data_root + 'OpenImages/validation/',\n        label_file=data_root + 'annotations/class-descriptions-boxable.csv',\n        hierarchy_file=data_root +\n        'annotations/bbox_labels_600_hierarchy.json',\n        meta_file=data_root + 'annotations/validation-image-metas.pkl',\n        image_level_ann_file=data_root +\n        'annotations/validation-annotations-human-imagelabels-boxable.csv'))\nevaluation = dict(interval=1, metric='mAP')\n</code></pre> <pre><code>val_evaluator = dict(\n    type='OpenImagesMetric',\n    iou_thrs=0.5,\n    ioa_thrs=0.5,\n    use_group_of=True,\n    get_supercategory=True)\n</code></pre> CityScapes <pre><code>data = dict(\n    val=dict(\n        type='CityScapesDataset',\n        ann_file=data_root +\n        'annotations/instancesonly_filtered_gtFine_val.json',\n        img_prefix=data_root + 'leftImg8bit/val/',\n        pipeline=test_pipeline))\nevaluation = dict(metric=['bbox', 'segm'])\n</code></pre> <pre><code>val_evaluator = [\n    dict(\n        type='CocoMetric',\n        ann_file=data_root +\n        'annotations/instancesonly_filtered_gtFine_val.json',\n        metric=['bbox', 'segm']),\n    dict(\n        type='CityScapesMetric',\n        ann_file=data_root +\n        'annotations/instancesonly_filtered_gtFine_val.json',\n        seg_prefix=data_root + '/gtFine/val',\n        outfile_prefix='./work_dirs/cityscapes_metric/instance')\n]\n</code></pre>"},{"location":"migration/config_migration/#_4","title":"\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u914d\u7f6e","text":"\u539f\u200b\u914d\u7f6e\u200b <pre><code>runner = dict(\n    type='EpochBasedRunner',  # \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\n    max_epochs=12)  # \u200b\u6700\u5927\u200b\u8bad\u7ec3\u200b\u8f6e\u6b21\u200b\nevaluation = dict(interval=2)  # \u200b\u9a8c\u8bc1\u200b\u95f4\u9694\u200b\u3002\u200b\u6bcf\u200b 2 \u200b\u4e2a\u200b epoch \u200b\u9a8c\u8bc1\u200b\u4e00\u6b21\u200b\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>train_cfg = dict(\n    type='EpochBasedTrainLoop',  # \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmengine/blob/main/mmengine/runner/loops.py\n    max_epochs=12,  # \u200b\u6700\u5927\u200b\u8bad\u7ec3\u200b\u8f6e\u6b21\u200b\n    val_interval=2)  # \u200b\u9a8c\u8bc1\u200b\u95f4\u9694\u200b\u3002\u200b\u6bcf\u200b 2 \u200b\u4e2a\u200b epoch \u200b\u9a8c\u8bc1\u200b\u4e00\u6b21\u200b\nval_cfg = dict(type='ValLoop')  # \u200b\u9a8c\u8bc1\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\ntest_cfg = dict(type='TestLoop')  # \u200b\u6d4b\u8bd5\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\n</code></pre>"},{"location":"migration/config_migration/#_5","title":"\u4f18\u5316\u200b\u76f8\u5173\u200b\u914d\u7f6e","text":"<p>\u200b\u4f18\u5316\u200b\u5668\u200b\u4ee5\u53ca\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u7684\u200b\u914d\u7f6e\u200b\u90fd\u200b\u79fb\u81f3\u200b optim_wrapper \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\u3002\u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b 2.x \u200b\u7248\u672c\u200b\u4e0e\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\u914d\u7f6e\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\uff1a</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code>optimizer = dict(\n    type='SGD',  # \u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u4f18\u5316\u200b\u5668\u200b\n    lr=0.02,  # \u200b\u57fa\u7840\u200b\u5b66\u4e60\u200b\u7387\u200b\n    momentum=0.9,  # \u200b\u5e26\u52a8\u200b\u91cf\u200b\u7684\u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\n    weight_decay=0.0001)  # \u200b\u6743\u91cd\u200b\u8870\u51cf\u200b\noptimizer_config = dict(grad_clip=None)  # \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b None \u200b\u5173\u95ed\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>optim_wrapper = dict(  # \u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u7684\u200b\u914d\u7f6e\u200b\n    type='OptimWrapper',  # \u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5207\u6362\u200b\u81f3\u200b AmpOptimWrapper \u200b\u6765\u200b\u542f\u7528\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\n    optimizer=dict(  # \u200b\u4f18\u5316\u200b\u5668\u200b\u914d\u7f6e\u200b\u3002\u200b\u652f\u6301\u200b PyTorch \u200b\u7684\u200b\u5404\u79cd\u200b\u4f18\u5316\u200b\u5668\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b https://pytorch.org/docs/stable/optim.html#algorithms\n        type='SGD',  # \u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u4f18\u5316\u200b\u5668\u200b\n        lr=0.02,  # \u200b\u57fa\u7840\u200b\u5b66\u4e60\u200b\u7387\u200b\n        momentum=0.9,  # \u200b\u5e26\u52a8\u200b\u91cf\u200b\u7684\u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\n        weight_decay=0.0001),  # \u200b\u6743\u91cd\u200b\u8870\u51cf\u200b\n    clip_grad=None,  # \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b None \u200b\u5173\u95ed\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3002\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u8bf7\u200b\u89c1\u200b https://mmengine.readthedocs.io/en/latest/tutorials/optimizer.html\n    )\n</code></pre> <p>\u200b\u5b66\u4e60\u200b\u7387\u200b\u7684\u200b\u914d\u7f6e\u200b\u4e5f\u200b\u4ece\u200b lr_config \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\u79fb\u81f3\u200b param_scheduler \u200b\u5b57\u6bb5\u200b\u4e2d\u200b\u3002param_scheduler \u200b\u7684\u200b\u914d\u7f6e\u200b\u66f4\u200b\u8d34\u8fd1\u200b PyTorch \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b\uff0c\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u3002\u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b 2.x \u200b\u7248\u672c\u200b\u4e0e\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u914d\u7f6e\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\uff1a</p> \u200b\u539f\u200b\u914d\u7f6e\u200b <pre><code>lr_config = dict(\n    policy='step',  # \u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f7f\u7528\u200b multi step \u200b\u5b66\u4e60\u200b\u7387\u200b\u7b56\u7565\u200b\n    warmup='linear',  # \u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\n    warmup_iters=500,  # \u200b\u5230\u200b\u7b2c\u200b 500 \u200b\u4e2a\u200b iteration \u200b\u7ed3\u675f\u200b\u9884\u70ed\u200b\n    warmup_ratio=0.001,  # \u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\u7684\u200b\u7cfb\u6570\u200b\n    step=[8, 11],  # \u200b\u5728\u200b\u54ea\u51e0\u4e2a\u200b epoch \u200b\u8fdb\u884c\u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u200b\n    gamma=0.1)  # \u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u7cfb\u6570\u200b\n</code></pre> \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>param_scheduler = [\n    dict(\n        type='LinearLR',  # \u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\n        start_factor=0.001, # \u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\u7684\u200b\u7cfb\u6570\u200b\n        by_epoch=False,  # \u200b\u6309\u200b iteration \u200b\u66f4\u65b0\u200b\u9884\u70ed\u200b\u5b66\u4e60\u200b\u7387\u200b\n        begin=0,  # \u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b iteration \u200b\u5f00\u59cb\u200b\n        end=500),  # \u200b\u5230\u200b\u7b2c\u200b 500 \u200b\u4e2a\u200b iteration \u200b\u7ed3\u675f\u200b\n    dict(\n        type='MultiStepLR',  # \u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f7f\u7528\u200b multi step \u200b\u5b66\u4e60\u200b\u7387\u200b\u7b56\u7565\u200b\n        by_epoch=True,  # \u200b\u6309\u200b epoch \u200b\u66f4\u65b0\u200b\u5b66\u4e60\u200b\u7387\u200b\n        begin=0,   # \u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b epoch \u200b\u5f00\u59cb\u200b\n        end=12,  # \u200b\u5230\u200b\u7b2c\u200b 12 \u200b\u4e2a\u200b epoch \u200b\u7ed3\u675f\u200b\n        milestones=[8, 11],  # \u200b\u5728\u200b\u54ea\u51e0\u4e2a\u200b epoch \u200b\u8fdb\u884c\u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u200b\n        gamma=0.1)  # \u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u7cfb\u6570\u200b\n]\n</code></pre> <p>\u200b\u5173\u4e8e\u200b\u5176\u4ed6\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b\u7684\u200b\u8fc1\u79fb\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b MMEngine \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u8fc1\u79fb\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"migration/config_migration/#_6","title":"\u5176\u4ed6\u200b\u914d\u7f6e\u200b\u7684\u200b\u8fc1\u79fb","text":""},{"location":"migration/config_migration/#checkpoint","title":"\u4fdd\u5b58\u200b checkpoint \u200b\u7684\u200b\u914d\u7f6e","text":"\u529f\u80fd\u200b \u200b\u539f\u200b\u914d\u7f6e\u200b \u200b\u65b0\u200b\u914d\u7f6e\u200b \u200b\u8bbe\u7f6e\u200b\u4fdd\u5b58\u200b\u95f4\u9694\u200b <pre><code>checkpoint_config = dict(\n    interval=1)\n</code></pre> <pre><code>default_hooks = dict(\n    checkpoint=dict(\n        type='CheckpointHook',\n        interval=1))\n</code></pre> \u200b\u4fdd\u5b58\u200b\u6700\u4f73\u200b\u6a21\u578b\u200b <pre><code>evaluation = dict(\n    save_best='auto')\n</code></pre> <pre><code>default_hooks = dict(\n    checkpoint=dict(\n        type='CheckpointHook',\n        save_best='auto'))\n</code></pre> \u200b\u53ea\u200b\u4fdd\u7559\u200b\u6700\u65b0\u200b\u7684\u200b\u51e0\u4e2a\u200b\u6a21\u578b\u200b <pre><code>checkpoint_config = dict(\n    max_keep_ckpts=3)\n</code></pre> <pre><code>default_hooks = dict(\n    checkpoint=dict(\n        type='CheckpointHook',\n        max_keep_ckpts=3))\n</code></pre>"},{"location":"migration/config_migration/#_7","title":"\u65e5\u5fd7\u200b\u7684\u200b\u914d\u7f6e","text":"<p>3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u65e5\u5fd7\u200b\u7684\u200b\u6253\u5370\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u7531\u200b MMEngine \u200b\u4e2d\u200b\u7684\u200b logger \u200b\u548c\u200b visualizer \u200b\u5206\u522b\u200b\u5b8c\u6210\u200b\u3002\u200b\u4e0b\u200b\u8868\u5217\u51fa\u200b\u4e86\u200b 2.x \u200b\u7248\u672c\u200b\u4e0e\u200b 3.x \u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200b\u65e5\u5fd7\u200b\u914d\u7f6e\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\uff1a</p> \u200b\u529f\u80fd\u200b \u200b\u539f\u200b\u914d\u7f6e\u200b \u200b\u65b0\u200b\u914d\u7f6e\u200b \u200b\u8bbe\u7f6e\u200b\u65e5\u5fd7\u200b\u6253\u5370\u200b\u95f4\u9694\u200b <pre><code>log_config = dict(\n    interval=50)\n</code></pre> <pre><code>default_hooks = dict(\n    logger=dict(\n        type='LoggerHook',\n        interval=50))\n# \u200b\u53ef\u200b\u9009\u200b\uff1a \u200b\u914d\u7f6e\u200b\u65e5\u5fd7\u200b\u6253\u5370\u200b\u6570\u503c\u200b\u7684\u200b\u5e73\u6ed1\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\nlog_processor = dict(\n    type='LogProcessor',\n    window_size=50)\n</code></pre> \u200b\u4f7f\u7528\u200b TensorBoard \u200b\u6216\u200b WandB \u200b\u53ef\u89c6\u5316\u200b\u65e5\u5fd7\u200b <pre><code>log_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TextLoggerHook'),\n        dict(type='TensorboardLoggerHook'),\n        dict(type='MMDetWandbHook',\n             init_kwargs={\n                'project': 'mmdetection',\n                'group': 'maskrcnn-r50-fpn-1x-coco'\n             },\n             interval=50,\n             log_checkpoint=True,\n             log_checkpoint_metadata=True,\n             num_eval_images=100)\n    ])\n</code></pre> <pre><code>vis_backends = [\n    dict(type='LocalVisBackend'),\n    dict(type='TensorboardVisBackend'),\n    dict(type='WandbVisBackend',\n         init_kwargs={\n            'project': 'mmdetection',\n            'group': 'maskrcnn-r50-fpn-1x-coco'\n         })\n]\nvisualizer = dict(\n    type='DetLocalVisualizer', vis_backends=vis_backends, name='visualizer')\n</code></pre> <p>\u200b\u5173\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u76f8\u5173\u200b\u7684\u200b\u6559\u7a0b\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b MMDetection \u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u6559\u7a0b\u200b\u3002</p>"},{"location":"migration/config_migration/#runtime","title":"Runtime \u200b\u7684\u200b\u914d\u7f6e","text":"<p>3.x \u200b\u7248\u672c\u200b\u4e2d\u200b runtime \u200b\u7684\u200b\u914d\u7f6e\u200b\u5b57\u200b\u6bb5\u200b\u6709\u6240\u200b\u8c03\u6574\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\u5982\u4e0b\u200b\uff1a</p> \u200b\u539f\u200b\u914d\u7f6e\u200b \u200b\u65b0\u200b\u914d\u7f6e\u200b <pre><code>cudnn_benchmark = False\nopencv_num_threads = 0\nmp_start_method = 'fork'\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\n</code></pre> <pre><code>env_cfg = dict(\n    cudnn_benchmark=False,\n    mp_cfg=dict(mp_start_method='fork',\n                opencv_num_threads=0),\n    dist_cfg=dict(backend='nccl'))\nlog_level = 'INFO'\nload_from = None\nresume = False\n</code></pre>"},{"location":"migration/dataset_migration/","title":"\u5c06\u200b\u6570\u636e\u200b\u96c6\u4ece\u200b MMDetection 2.x \u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x","text":""},{"location":"migration/migration/","title":"\u4ece\u200b MMDetection 2.x \u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x","text":"<p>MMDetection 3.x \u200b\u7248\u672c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u91cd\u5927\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u8bb8\u591a\u200b API \u200b\u548c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u53d8\u5316\u200b\u3002\u200b\u672c\u200b\u6587\u6863\u200b\u65e8\u5728\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u4ece\u200b MMDetection 2.x \u200b\u7248\u672c\u200b\u8fc1\u79fb\u200b\u5230\u200b 3.x \u200b\u7248\u672c\u200b\u3002 \u200b\u6211\u4eec\u200b\u5c06\u200b\u8fc1\u79fb\u200b\u6307\u5357\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fc1\u79fb\u200b</li> <li>API \u200b\u548c\u200b Registry \u200b\u8fc1\u79fb\u200b</li> <li>\u200b\u6570\u636e\u200b\u96c6\u200b\u8fc1\u79fb\u200b</li> <li>\u200b\u6a21\u578b\u200b\u8fc1\u79fb\u200b</li> <li>\u200b\u5e38\u89c1\u95ee\u9898\u200b</li> </ul> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u5728\u200b\u8fc1\u79fb\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9047\u5230\u200b\u4efb\u4f55\u200b\u95ee\u9898\u200b\uff0c\u200b\u6b22\u8fce\u200b\u5728\u200b issue \u200b\u4e2d\u200b\u63d0\u51fa\u200b\u3002\u200b\u6211\u4eec\u200b\u4e5f\u200b\u6b22\u8fce\u60a8\u200b\u4e3a\u672c\u200b\u6587\u6863\u200b\u505a\u51fa\u200b\u8d21\u732e\u200b\u3002</p>"},{"location":"migration/migration_faq/","title":"\u8fc1\u79fb\u200b FAQ","text":""},{"location":"migration/model_migration/","title":"\u5c06\u200b\u6a21\u578b\u200b\u4ece\u200b MMDetection 2.x \u200b\u8fc1\u79fb\u200b\u81f3\u200b 3.x","text":""},{"location":"notes/compatibility/","title":"MMDetection v2.x \u200b\u517c\u5bb9\u6027\u200b\u8bf4\u660e","text":""},{"location":"notes/compatibility/#mmdetection-2250","title":"MMDetection 2.25.0","text":"<p>\u200b\u4e3a\u4e86\u200b\u52a0\u5165\u200b Mask2Former \u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u6a21\u578b\u200b\uff0c\u200b\u5bf9\u200b Mask2Former \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u4e86\u200b\u91cd\u547d\u540d\u200b PR #7571\uff1a</p> \u200b\u5728\u200b v2.25.0 \u200b\u4e4b\u524d\u200b v2.25.0 \u200b\u53ca\u200b\u4e4b\u540e\u200b <pre><code>'mask2former_xxx_coco.py' \u200b\u4ee3\u8868\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n</code></pre> <pre><code>'mask2former_xxx_coco.py' \u200b\u4ee3\u8868\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n'mask2former_xxx_coco-panoptic.py' \u200b\u4ee3\u8868\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n</code></pre>"},{"location":"notes/compatibility/#mmdetection-2210","title":"MMDetection 2.21.0","text":"<p>\u200b\u4e3a\u4e86\u200b\u652f\u6301\u200b CPU \u200b\u8bad\u7ec3\u200b\uff0cMMCV \u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6279\u5904\u7406\u200b\u7684\u200b scatter \u200b\u7684\u200b\u4ee3\u7801\u200b\u903b\u8f91\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u4fee\u6539\u200b\u3002\u200b\u6211\u4eec\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b MMCV v1.4.4 \u200b\u6216\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b\uff0c \u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u8bf7\u200b\u53c2\u8003\u200b MMCV PR #1621.</p>"},{"location":"notes/compatibility/#mmdetection-2181","title":"MMDetection 2.18.1","text":""},{"location":"notes/compatibility/#mmcv-compatibility","title":"MMCV compatibility","text":"<p>\u200b\u4e3a\u4e86\u200b\u4fee\u590d\u200b BaseTransformerLayer \u200b\u4e2d\u200b\u7684\u200b\u6743\u91cd\u200b\u5f15\u7528\u200b\u95ee\u9898\u200b, MultiheadAttention \u200b\u4e2d\u200b batch first \u200b\u7684\u200b\u903b\u8f91\u200b\u6709\u6240\u200b\u6539\u53d8\u200b\u3002 \u200b\u6211\u4eec\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b MMCV v1.3.17 \u200b\u6216\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b\u3002 \u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u8bf7\u200b\u53c2\u8003\u200b MMCV PR #1418 \u3002</p>"},{"location":"notes/compatibility/#mmdetection-2180","title":"MMDetection 2.18.0","text":""},{"location":"notes/compatibility/#diihead","title":"DIIHead \u200b\u517c\u5bb9\u6027","text":"<p>\u200b\u4e3a\u4e86\u200b\u652f\u6301\u200b QueryInst\uff0c\u200b\u5728\u200b DIIHead \u200b\u7684\u200b\u8fd4\u56de\u200b\u5143\u7ec4\u200b\u4e2d\u200b\u52a0\u5165\u200b\u4e86\u200b attn_feats\u3002</p>"},{"location":"notes/compatibility/#mmdetection-v2140","title":"MMDetection v2.14.0","text":""},{"location":"notes/compatibility/#mmcv","title":"MMCV \u200b\u7248\u672c","text":"<p>\u200b\u4e3a\u4e86\u200b\u4fee\u590d\u200b EvalHook \u200b\u4f18\u5148\u7ea7\u200b\u8fc7\u4f4e\u200b\u7684\u200b\u95ee\u9898\u200b\uff0cMMCV v1.3.8 \u200b\u4e2d\u200b\u6240\u6709\u200b hook \u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u90fd\u200b\u91cd\u65b0\u200b\u8fdb\u884c\u200b\u4e86\u200b\u8c03\u6574\u200b\uff0c\u200b\u56e0\u6b64\u200b MMDetection v2.14.0 \u200b\u9700\u8981\u200b\u4f9d\u8d56\u200b\u6700\u65b0\u200b\u7684\u200b MMCV v1.3.8 \u200b\u7248\u672c\u200b\u3002 \u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b\u8bf7\u200b\u53c2\u8003\u200bPR #1120 \uff0c\u200b\u76f8\u5173\u200b\u95ee\u9898\u200b\u8bf7\u200b\u53c2\u8003\u200b#5343 \u3002</p>"},{"location":"notes/compatibility/#ssd","title":"SSD \u200b\u517c\u5bb9\u6027","text":"<p>\u200b\u5728\u200b v2.14.0 \u200b\u4e2d\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4f7f\u200b SSD \u200b\u80fd\u591f\u200b\u88ab\u200b\u66f4\u200b\u7075\u6d3b\u200b\u5730\u200b\u4f7f\u7528\u200b\uff0cPR #5291 \u200b\u91cd\u6784\u200b\u4e86\u200b SSD \u200b\u7684\u200b backbone\u3001neck \u200b\u548c\u200b head\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b tools/model_converters/upgrade_ssd_version.py \u200b\u8f6c\u6362\u200b\u65e7\u7248\u672c\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p> <pre><code>python tools/model_converters/upgrade_ssd_version.py ${OLD_MODEL_PATH} ${NEW_MODEL_PATH}\n</code></pre> <ul> <li>OLD_MODEL_PATH\uff1a\u200b\u65e7\u7248\u200b SSD \u200b\u6a21\u578b\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</li> <li>NEW_MODEL_PATH\uff1a\u200b\u4fdd\u5b58\u200b\u8f6c\u6362\u200b\u540e\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</li> </ul>"},{"location":"notes/compatibility/#mmdetection-v2120","title":"MMDetection v2.12.0","text":"<p>\u200b\u5728\u200b v2.12.0 \u200b\u5230\u200b v2.18.0\uff08\u200b\u6216\u200b\u4ee5\u4e0a\u200b\uff09\u200b\u7248\u672c\u200b\u7684\u200b\u8fd9\u200b\u6bb5\u65f6\u95f4\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u63d0\u5347\u200b\u901a\u7528\u6027\u200b\u548c\u200b\u4fbf\u6377\u6027\u200b\uff0cMMDetection \u200b\u6b63\u5728\u200b\u8fdb\u884c\u200b\u5927\u89c4\u6a21\u200b\u91cd\u6784\u200b\u3002\u200b\u5728\u200b\u5347\u7ea7\u200b\u5230\u200b v2.12.0 \u200b\u540e\u200b MMDetection \u200b\u4e0d\u53ef\u907f\u514d\u200b\u5730\u200b\u5e26\u6765\u200b\u4e86\u200b\u4e00\u4e9b\u200b BC Breaking\uff0c\u200b\u5305\u62ec\u200b MMCV \u200b\u7684\u200b\u7248\u672c\u200b\u4f9d\u8d56\u200b\u3001\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316\u200b\u65b9\u5f0f\u200b\u3001\u200b\u6a21\u578b\u200b registry \u200b\u548c\u200b mask AP \u200b\u7684\u200b\u8bc4\u4f30\u200b\u3002</p>"},{"location":"notes/compatibility/#mmcv_1","title":"MMCV \u200b\u7248\u672c","text":"<p>MMDetection v2.12.0 \u200b\u4f9d\u8d56\u200b MMCV v1.3.3 \u200b\u4e2d\u200b\u65b0\u200b\u589e\u52a0\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u5305\u62ec\u200b\uff1a\u200b\u4f7f\u7528\u200b <code>BaseModule</code> \u200b\u7edf\u4e00\u200b\u53c2\u6570\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u6a21\u578b\u200b registry\uff0c\u200b\u4ee5\u53ca\u200bDeformable DETR \u200b\u4e2d\u200b\u7684\u200b <code>MultiScaleDeformableAttn</code> CUDA \u200b\u7b97\u5b50\u200b\u3002 \u200b\u6ce8\u610f\u200b\uff0c\u200b\u5c3d\u7ba1\u200b MMCV v1.3.2 \u200b\u5df2\u7ecf\u200b\u5305\u542b\u200b\u4e86\u200b MMDet \u200b\u6240\u200b\u9700\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u4f46\u662f\u200b\u5b58\u5728\u200b\u4e00\u4e9b\u200b\u5df2\u77e5\u200b\u7684\u200b\u95ee\u9898\u200b\u3002\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u7528\u6237\u200b\u8df3\u8fc7\u200b MMCV v1.3.2 \u200b\u4f7f\u7528\u200b v1.3.3 \u200b\u7248\u672c\u200b\u3002</p>"},{"location":"notes/compatibility/#_1","title":"\u7edf\u4e00\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316","text":"<p>\u200b\u4e3a\u4e86\u200b\u7edf\u4e00\u200b OpenMMLab \u200b\u9879\u76ee\u200b\u4e2d\u200b\u7684\u200b\u53c2\u6570\u200b\u521d\u59cb\u5316\u200b\u65b9\u5f0f\u200b\uff0cMMCV \u200b\u65b0\u200b\u589e\u52a0\u200b\u4e86\u200b <code>BaseModule</code> \u200b\u7c7b\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>init_cfg</code> \u200b\u53c2\u6570\u200b\u5bf9\u200b\u6a21\u5757\u200b\u8fdb\u884c\u200b\u7edf\u4e00\u200b\u4e14\u200b\u7075\u6d3b\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u914d\u7f6e\u7ba1\u7406\u200b\u3002 \u200b\u73b0\u5728\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b\u8bad\u7ec3\u200b\u811a\u672c\u200b\u4e2d\u663e\u5f0f\u200b\u8c03\u7528\u200b <code>model.init_weights()</code> \u200b\u6765\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\uff08\u200b\u4f8b\u5982\u200b \u200b\u8fd9\u200b\u884c\u200b\u4ee3\u7801\u200b \uff0c\u200b\u5728\u200b\u8fd9\u200b\u4e4b\u524d\u200b\u5219\u200b\u662f\u200b\u5728\u200b detector \u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u7684\u200b\u3002 \u200b\u4e0b\u6e38\u200b\u9879\u76ee\u200b\u5fc5\u987b\u200b\u76f8\u5e94\u200b\u5730\u200b\u66f4\u65b0\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316\u200b\u65b9\u5f0f\u200b\u624d\u80fd\u200b\u4f7f\u7528\u200b MMDetection v2.12.0\u3002\u200b\u8bf7\u53c2\u9605\u200b PR #4750 \u200b\u4e86\u89e3\u200b\u8be6\u60c5\u200b\u3002</p>"},{"location":"notes/compatibility/#registry","title":"\u7edf\u4e00\u200b\u6a21\u578b\u200b registry","text":"<p>\u200b\u4e3a\u4e86\u200b\u80fd\u591f\u200b\u4f7f\u7528\u200b\u5728\u200b\u5176\u4ed6\u200b OpenMMLab \u200b\u9879\u76ee\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b backbone\uff0cMMDetection v2.12.0 \u200b\u7ee7\u627f\u200b\u4e86\u200b\u5728\u200b MMCV (#760) \u200b\u4e2d\u200b\u521b\u5efa\u200b\u7684\u200b\u6a21\u578b\u200b registry\u3002 \u200b\u8fd9\u6837\u200b\uff0c\u200b\u53ea\u8981\u200b OpenMMLab \u200b\u9879\u76ee\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u67d0\u4e2a\u200b backbone\uff0c\u200b\u5e76\u4e14\u200b\u8be5\u200b\u9879\u76ee\u200b\u4e5f\u200b\u4f7f\u7528\u200b MMCV \u200b\u4e2d\u200b\u7684\u200b registry\uff0c\u200b\u90a3\u4e48\u200b\u7528\u6237\u200b\u53ea\u200b\u9700\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8be5\u200b backbone\uff0c\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u5c06\u200b\u4ee3\u7801\u200b\u590d\u5236\u5230\u200b MMDetection \u200b\u4e2d\u200b\u3002 \u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b PR #5059 \u3002</p>"},{"location":"notes/compatibility/#mask-ap","title":"Mask AP \u200b\u8bc4\u4f30","text":"<p>\u200b\u5728\u200b PR #4898 \u200b\u548c\u200b v2.12.0 \u200b\u4e4b\u524d\u200b\uff0c\u200b\u5bf9\u200b\u5c0f\u200b\u3001\u200b\u4e2d\u200b\u3001\u200b\u5927\u200b\u76ee\u6807\u200b\u7684\u200b mask AP \u200b\u7684\u200b\u8bc4\u4f30\u200b\u662f\u200b\u57fa\u4e8e\u200b\u5176\u200b\u8fb9\u754c\u200b\u6846\u200b\u533a\u57df\u200b\u800c\u200b\u4e0d\u662f\u200b\u771f\u6b63\u200b\u7684\u200b mask \u200b\u533a\u57df\u200b\u3002 \u200b\u8fd9\u200b\u5bfc\u81f4\u200b <code>APs</code> \u200b\u548c\u200b <code>APm</code> \u200b\u53d8\u5f97\u200b\u66f4\u200b\u9ad8\u200b\u4f46\u200b <code>APl</code> \u200b\u53d8\u5f97\u200b\u66f4\u200b\u4f4e\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u6574\u4f53\u200b\u7684\u200b mask AP\u3002 PR #4898 \u200b\u5220\u9664\u200b\u4e86\u200b mask AP \u200b\u8ba1\u7b97\u200b\u4e2d\u200b\u7684\u200b <code>bbox</code> \uff0c\u200b\u6539\u4e3a\u200b\u4f7f\u7528\u200b mask \u200b\u533a\u57df\u200b\u3002 \u200b\u65b0\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u6574\u4f53\u200b\u7684\u200b mask AP \u200b\u8bc4\u4f30\u200b\uff0c\u200b\u4e0e\u200b Detectron2\u200b\u4e00\u81f4\u200b\u3002</p>"},{"location":"notes/compatibility/#mmdetection-v1x","title":"\u4e0e\u200b MMDetection v1.x \u200b\u7684\u200b\u517c\u5bb9\u6027","text":"<p>MMDetection v2.0 \u200b\u7ecf\u8fc7\u200b\u4e86\u200b\u5927\u89c4\u6a21\u200b\u91cd\u6784\u200b\u5e76\u200b\u89e3\u51b3\u200b\u4e86\u200b\u8bb8\u591a\u200b\u9057\u7559\u95ee\u9898\u200b\u3002 MMDetection v2.0 \u200b\u4e0d\u200b\u517c\u5bb9\u200b v1.x \u200b\u7248\u672c\u200b\uff0c\u200b\u5728\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u7248\u672c\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u8fd0\u884c\u200b\u63a8\u7406\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4e0d\u540c\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0cMMDetection v2.0 \u200b\u91cd\u65b0\u200b\u5bf9\u200b\u6240\u6709\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u4e86\u200b benchmark\uff0c\u200b\u5e76\u200b\u5728\u200b model zoo \u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u65b0\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u548c\u200b\u8bad\u7ec3\u200b\u8bb0\u5f55\u200b\u3002</p> <p>\u200b\u65b0\u65e7\u200b\u7248\u672c\u200b\u7684\u200b\u4e3b\u8981\u200b\u7684\u200b\u533a\u522b\u200b\u6709\u200b\u56db\u65b9\u9762\u200b\uff1a\u200b\u5750\u6807\u7cfb\u200b\u3001\u200b\u4ee3\u7801\u200b\u5e93\u200b\u7ea6\u5b9a\u200b\u3001\u200b\u8bad\u7ec3\u200b\u8d85\u53c2\u200b\u548c\u200b\u6a21\u5757\u200b\u8bbe\u8ba1\u200b\u3002</p>"},{"location":"notes/compatibility/#_2","title":"\u5750\u6807\u7cfb","text":"<p>\u200b\u65b0\u200b\u5750\u6807\u7cfb\u200b\u4e0e\u200b Detectron2 \u200b\u4e00\u81f4\u200b\uff0c \u200b\u5c06\u200b\u6700\u200b\u5de6\u4e0a\u89d2\u200b\u7684\u200b\u50cf\u7d20\u200b\u7684\u200b\u4e2d\u5fc3\u200b\u89c6\u4e3a\u200b\u5750\u6807\u200b\u539f\u70b9\u200b (0, 0) \u200b\u800c\u200b\u4e0d\u662f\u200b\u6700\u200b\u5de6\u4e0a\u89d2\u200b\u50cf\u7d20\u200b\u7684\u200b\u5de6\u4e0a\u89d2\u200b\u3002 \u200b\u56e0\u6b64\u200b COCO \u200b\u8fb9\u754c\u200b\u6846\u200b\u548c\u200b\u5206\u5272\u200b\u6807\u6ce8\u200b\u4e2d\u200b\u7684\u200b\u5750\u6807\u200b\u88ab\u200b\u89e3\u6790\u200b\u4e3a\u200b\u8303\u56f4\u200b <code>[0\uff0cwidth]</code> \u200b\u548c\u200b <code>[0\uff0cheight]</code> \u200b\u4e2d\u200b\u7684\u200b\u5750\u6807\u200b\u3002 \u200b\u8fd9\u4e2a\u200b\u4fee\u6539\u200b\u5f71\u54cd\u200b\u4e86\u200b\u6240\u6709\u200b\u4e0e\u200b bbox \u200b\u53ca\u200b\u50cf\u7d20\u200b\u9009\u62e9\u200b\u76f8\u5173\u200b\u7684\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u53d8\u5f97\u200b\u66f4\u52a0\u200b\u81ea\u7136\u200b\u4e14\u200b\u66f4\u52a0\u200b\u51c6\u786e\u200b\u3002</p> <ul> <li> <p>\u200b\u5728\u200b\u65b0\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\uff0c\u200b\u5de6\u4e0a\u89d2\u200b\u548c\u200b\u53f3\u4e0b\u89d2\u200b\u4e3a\u200b (x1, y1) (x2, y2) \u200b\u7684\u200b\u6846\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u53ca\u200b\u9ad8\u5ea6\u200b\u8ba1\u7b97\u516c\u5f0f\u200b\u4e3a\u200b <code>width = x2 - x1</code> \u200b\u548c\u200b <code>height = y2 - y1</code>\u3002   \u200b\u5728\u200b MMDetection v1.x \u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u9ad8\u5ea6\u200b\u548c\u200b\u5bbd\u5ea6\u200b\u90fd\u200b\u591a\u200b\u4e86\u200b <code>+ 1</code> \u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002   \u200b\u672c\u6b21\u200b\u4fee\u6539\u200b\u5305\u62ec\u200b\u4e09\u200b\u90e8\u5206\u200b\uff1a</p> </li> <li> <p>box \u200b\u56de\u5f52\u200b\u4e2d\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6846\u200b\u53d8\u6362\u200b\u4ee5\u53ca\u200b\u7f16\u7801\u200b/\u200b\u89e3\u7801\u200b\u3002</p> </li> <li>IoU \u200b\u8ba1\u7b97\u200b\u3002\u200b\u8fd9\u4f1a\u200b\u5f71\u54cd\u200b ground truth \u200b\u548c\u200b\u68c0\u6d4b\u200b\u6846\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5339\u914d\u200b\u4ee5\u53ca\u200b NMS \u3002\u200b\u4f46\u200b\u5bf9\u200b\u517c\u5bb9\u6027\u200b\u7684\u200b\u5f71\u54cd\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u4e0d\u8ba1\u200b\u3002</li> <li> <p>Box \u200b\u7684\u200b\u89d2\u70b9\u200b\u5750\u6807\u200b\u4e3a\u200b\u6d6e\u70b9\u200b\u578b\u200b\uff0c\u200b\u4e0d\u518d\u200b\u53d6\u6574\u200b\u3002\u200b\u8fd9\u80fd\u200b\u4f7f\u5f97\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u66f4\u4e3a\u200b\u51c6\u786e\u200b\uff0c\u200b\u4e5f\u200b\u4f7f\u5f97\u200b\u68c0\u6d4b\u200b\u6846\u200b\u548c\u200b RoI \u200b\u7684\u200b\u6700\u5c0f\u200b\u5c3a\u5bf8\u200b\u4e0d\u518d\u200b\u4e3a\u200b 1\uff0c\u200b\u4f46\u200b\u5f71\u54cd\u200b\u5f88\u5c0f\u200b\u3002</p> </li> <li> <p>Anchor \u200b\u7684\u200b\u4e2d\u5fc3\u200b\u4e0e\u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u7f51\u683c\u200b\u70b9\u200b\u5bf9\u9f50\u200b\uff0c\u200b\u7c7b\u578b\u200b\u53d8\u4e3a\u200b float\u3002   \u200b\u5728\u200b MMDetection v1.x \u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0canchors \u200b\u662f\u200b <code>int</code> \u200b\u7c7b\u578b\u200b\u4e14\u200b\u6ca1\u6709\u200b\u5c45\u4e2d\u200b\u5bf9\u9f50\u200b\u3002   \u200b\u8fd9\u4f1a\u200b\u5f71\u54cd\u200b RPN \u200b\u4e2d\u200b\u7684\u200b Anchor \u200b\u751f\u6210\u200b\u548c\u200b\u6240\u6709\u200b\u57fa\u4e8e\u200b Anchor \u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> </li> <li> <p>ROIAlign \u200b\u66f4\u597d\u200b\u5730\u200b\u4e0e\u200b\u56fe\u50cf\u200b\u5750\u6807\u7cfb\u200b\u5bf9\u9f50\u200b\u3002\u200b\u65b0\u200b\u7684\u200b\u5b9e\u73b0\u200b\u6765\u81ea\u200b Detectron2 \u3002   \u200b\u5f53\u200b RoI \u200b\u7528\u4e8e\u200b\u63d0\u53d6\u200b RoI \u200b\u7279\u5f81\u200b\u65f6\u200b\uff0c\u200b\u4e0e\u200b MMDetection v1.x \u200b\u76f8\u6bd4\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u76f8\u5dee\u200b\u534a\u4e2a\u200b\u50cf\u7d20\u200b\u3002   \u200b\u80fd\u591f\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>aligned=False</code> \u200b\u800c\u200b\u4e0d\u662f\u200b <code>aligned=True</code> \u200b\u6765\u200b\u7ef4\u6301\u200b\u65e7\u7248\u672c\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002</p> </li> <li> <p>Mask \u200b\u7684\u200b\u88c1\u526a\u200b\u548c\u200b\u7c98\u8d34\u200b\u66f4\u200b\u51c6\u786e\u200b\u3002</p> </li> <li> <p>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u65b0\u200b\u7684\u200b RoIAlign \u200b\u6765\u200b\u63d0\u53d6\u200b mask \u200b\u76ee\u6807\u200b\u3002 \u200b\u5728\u200b MMDetection v1.x \u200b\u4e2d\u200b\uff0cbounding box \u200b\u5728\u200b\u63d0\u53d6\u200b mask \u200b\u76ee\u6807\u200b\u4e4b\u524d\u200b\u88ab\u200b\u53d6\u6574\u200b\uff0c\u200b\u88c1\u526a\u200b\u8fc7\u7a0b\u200b\u662f\u200b numpy \u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002 \u200b\u800c\u200b\u5728\u200b\u65b0\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u88c1\u526a\u200b\u7684\u200b\u8fb9\u754c\u200b\u6846\u200b\u4e0d\u200b\u7ecf\u8fc7\u200b\u53d6\u6574\u200b\u76f4\u63a5\u200b\u8f93\u5165\u200b RoIAlign\u3002 \u200b\u6b64\u200b\u5b9e\u73b0\u200b\u5927\u5927\u200b\u52a0\u5feb\u200b\u4e86\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\uff08\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u7ea6\u200b\u52a0\u901f\u200b 0.1 \u200b\u79d2\u200b\uff0c1x schedule \u200b\u8bad\u7ec3\u200b Mask R50 \u200b\u65f6\u200b\u52a0\u901f\u200b\u7ea6\u200b 2 \u200b\u5c0f\u65f6\u200b\uff09\u200b\u5e76\u4e14\u200b\u7406\u8bba\u200b\u4e0a\u4f1a\u200b\u66f4\u200b\u51c6\u786e\u200b\u3002</p> </li> <li>\u200b\u5728\u200b MMDetection v2.0 \u200b\u4e2d\u200b\uff0c\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b <code>paste_mask()</code> \u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u6bd4\u200b\u4e4b\u524d\u200b\u7248\u672c\u200b\u66f4\u200b\u51c6\u786e\u200b\u3002 \u200b\u6b64\u200b\u66f4\u6539\u200b\u53c2\u8003\u200b\u4e86\u200b Detectron2 \u200b\u4e2d\u200b\u7684\u200b\u4fee\u6539\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b COCO \u200b\u4e0a\u200b\u7684\u200b mask AP \u200b\u63d0\u9ad8\u200b\u7ea6\u200b 0.5%\u3002</li> </ul>"},{"location":"notes/compatibility/#_3","title":"\u4ee3\u7801\u200b\u5e93\u200b\u7ea6\u5b9a","text":"<ul> <li> <p>MMDetection v2.0 \u200b\u66f4\u6539\u200b\u4e86\u200b\u7c7b\u522b\u200b\u6807\u7b7e\u200b\u7684\u200b\u987a\u5e8f\u200b\uff0c\u200b\u51cf\u5c11\u200b\u4e86\u200b\u56de\u5f52\u200b\u548c\u200b mask \u200b\u5206\u652f\u200b\u91cc\u200b\u7684\u200b\u65e0\u7528\u200b\u53c2\u6570\u200b\u5e76\u200b\u4f7f\u5f97\u200b\u987a\u5e8f\u200b\u66f4\u52a0\u200b\u81ea\u7136\u200b\uff08\u200b\u6ca1\u6709\u200b +1 \u200b\u548c\u200b -1\uff09\u3002   \u200b\u8fd9\u4f1a\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u7684\u200b\u6240\u6709\u200b\u5206\u7c7b\u200b\u5c42\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u8f93\u51fa\u200b\u7684\u200b\u7c7b\u522b\u200b\u6807\u7b7e\u200b\u987a\u5e8f\u200b\u53d1\u751f\u200b\u6539\u53d8\u200b\u3002\u200b\u56de\u5f52\u200b\u5206\u652f\u200b\u548c\u200b mask head \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u5c42\u200b\u4e0d\u518d\u200b\u4e3a\u200b K \u200b\u4e2a\u200b\u7c7b\u522b\u200b\u4fdd\u7559\u200b K+1 \u200b\u4e2a\u200b\u901a\u9053\u200b\uff0c\u200b\u7c7b\u522b\u200b\u987a\u5e8f\u200b\u4e0e\u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u4e00\u81f4\u200b\u3002</p> </li> <li> <p>\u200b\u5728\u200b MMDetection v2.0 \u200b\u4e2d\u200b\uff0c\u200b\u6807\u7b7e\u200b \u201cK\u201d \u200b\u8868\u793a\u200b\u80cc\u666f\u200b\uff0c\u200b\u6807\u7b7e\u200b [0, K-1] \u200b\u5bf9\u5e94\u200b\u4e8e\u200b K = num_categories \u200b\u4e2a\u200b\u5bf9\u8c61\u200b\u7c7b\u522b\u200b\u3002</p> </li> <li> <p>\u200b\u5728\u200b MMDetection v1.x \u200b\u53ca\u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u6807\u7b7e\u200b \u201c0\u201d \u200b\u8868\u793a\u200b\u80cc\u666f\u200b\uff0c\u200b\u6807\u7b7e\u200b [1, K] \u200b\u5bf9\u5e94\u200b K \u200b\u4e2a\u200b\u7c7b\u522b\u200b\u3002</p> </li> <li> <p>\u200b\u6ce8\u610f\u200b\uff1asoftmax RPN \u200b\u7684\u200b\u7c7b\u200b\u987a\u5e8f\u200b\u5728\u200b version\\&lt;=2.4.0 \u200b\u4e2d\u200b\u4ecd\u7136\u200b\u548c\u200b 1.x \u200b\u4e2d\u200b\u7684\u200b\u4e00\u6837\u200b\uff0c\u200b\u800c\u200b sigmoid RPN \u200b\u4e0d\u200b\u53d7\u200b\u5f71\u54cd\u200b\u3002\u200b\u4ece\u200b MMDetection v2.5.0 \u200b\u5f00\u59cb\u200b\uff0c\u200b\u6240\u6709\u200b head \u200b\u4e2d\u200b\u7684\u200b\u7c7b\u200b\u987a\u5e8f\u200b\u662f\u200b\u7edf\u4e00\u200b\u7684\u200b\u3002</p> </li> <li> <p>\u200b\u4e0d\u200b\u4f7f\u7528\u200b R-CNN \u200b\u4e2d\u200b\u7684\u200b\u4f4e\u8d28\u91cf\u200b\u5339\u914d\u200b\u3002\u200b\u5728\u200b MMDetection v1.x \u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c<code>max_iou_assigner</code> \u200b\u4f1a\u200b\u5728\u200b RPN \u200b\u548c\u200b R-CNN \u200b\u8bad\u7ec3\u200b\u65f6\u200b\u7ed9\u200b\u6bcf\u4e2a\u200b ground truth \u200b\u5339\u914d\u200b\u4f4e\u8d28\u91cf\u200b\u6846\u200b\u3002\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u8fd9\u4f1a\u200b\u5bfc\u81f4\u200b\u6700\u4f73\u200b\u7684\u200b GT \u200b\u6846\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5206\u914d\u200b\u7ed9\u200b\u67d0\u4e9b\u200b\u8fb9\u754c\u200b\u6846\u200b\uff0c   \u200b\u56e0\u6b64\u200b\uff0c\u200b\u5728\u200bMMDetection v2.0 \u200b\u7684\u200b R-CNN \u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u9ed8\u8ba4\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4f4e\u8d28\u91cf\u200b\u5339\u914d\u200b\u3002\u200b\u8fd9\u200b\u6709\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u7a0d\u5fae\u200b\u6539\u5584\u200b box AP\uff08\u200b\u7ea6\u200b\u4e3a\u200b 0.1%\uff09\u3002</p> </li> <li> <p>\u200b\u5355\u72ec\u200b\u7684\u200b\u5bbd\u200b\u9ad8\u200b\u6bd4\u4f8b\u200b\u7cfb\u6570\u200b\u3002\u200b\u5728\u200b MMDetection v1.x \u200b\u548c\u200b\u4ee5\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c<code>keep_ratio=True</code> \u200b\u65f6\u200b\u6bd4\u4f8b\u200b\u7cfb\u6570\u200b\u662f\u200b\u5355\u4e2a\u200b\u6d6e\u70b9\u6570\u200b\uff0c\u200b\u8fd9\u200b\u5e76\u200b\u4e0d\u200b\u51c6\u786e\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u9ad8\u5ea6\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u7cfb\u6570\u200b\u4f1a\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u5dee\u5f02\u200b\u3002 MMDetection v2.0 \u200b\u5bf9\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u9ad8\u5ea6\u200b\u4f7f\u7528\u200b\u5355\u72ec\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u7cfb\u6570\u200b\uff0c\u200b\u5bf9\u200b AP \u200b\u7684\u200b\u63d0\u5347\u200b\u7ea6\u200b\u4e3a\u200b 0.1%\u3002</p> </li> <li> <p>\u200b\u4fee\u6539\u200b\u4e86\u200b config \u200b\u6587\u4ef6\u540d\u79f0\u200b\u7684\u200b\u89c4\u8303\u200b\u3002 \u200b\u7531\u4e8e\u200b model zoo \u200b\u4e2d\u200b\u6a21\u578b\u200b\u4e0d\u65ad\u200b\u589e\u591a\u200b\uff0c MMDetection v2.0 \u200b\u91c7\u7528\u200b\u65b0\u200b\u7684\u200b\u547d\u540d\u200b\u89c4\u5219\u200b\uff1a</p> </li> </ul> <pre><code>[model]_(model setting)_[backbone]_[neck]_(norm setting)_(misc)_(gpu x batch)_[schedule]_[dataset].py\n</code></pre> <p>\u200b\u5176\u4e2d\u200b (<code>misc</code>) \u200b\u5305\u62ec\u200b DCN \u200b\u548c\u200b GCBlock \u200b\u7b49\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u5728\u200b \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8bf4\u660e\u200b\u6587\u6863\u200b \u200b\u4e2d\u200b\u8bf4\u660e\u200b</p> <ul> <li>MMDetection v2.0 \u200b\u4f7f\u7528\u200b\u65b0\u200b\u7684\u200b ResNet Caffe backbone \u200b\u6765\u200b\u51cf\u5c11\u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u65f6\u200b\u7684\u200b\u8b66\u544a\u200b\u3002\u200b\u65b0\u200b backbone \u200b\u4e2d\u200b\u7684\u200b\u5927\u90e8\u5206\u200b\u6743\u91cd\u200b\u4e0e\u200b\u4ee5\u524d\u200b\u7684\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f46\u200b\u6ca1\u6709\u200b <code>conv.bias</code>\uff0c\u200b\u4e14\u200b\u5b83\u4eec\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b <code>img_norm_cfg</code>\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u65b0\u200b\u7684\u200b backbone \u200b\u4e0d\u4f1a\u200b\u62a5\u200b <code>unexpected keys</code> \u200b\u7684\u200b\u8b66\u544a\u200b\u3002</li> </ul>"},{"location":"notes/compatibility/#_4","title":"\u8bad\u7ec3\u200b\u8d85\u53c2","text":"<p>\u200b\u8bad\u7ec3\u200b\u8d85\u53c2\u200b\u7684\u200b\u8c03\u6574\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u7684\u200b\u517c\u5bb9\u6027\u200b\uff0c\u200b\u4f46\u4f1a\u200b\u7565\u5fae\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002\u200b\u4e3b\u8981\u200b\u6709\u200b\uff1a</p> <ul> <li> <p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>nms_post=1000</code> \u200b\u548c\u200b <code>max_num=1000</code>\uff0c\u200b\u5c06\u200b nms \u200b\u4e4b\u540e\u200b\u7684\u200b proposal \u200b\u6570\u91cf\u200b\u4ece\u200b 2000 \u200b\u66f4\u200b\u6539\u4e3a\u200b 1000\u3002\u200b\u4f7f\u200b mask AP \u200b\u548c\u200b bbox AP \u200b\u63d0\u9ad8\u200b\u4e86\u200b\u7ea6\u200b 0.2%\u3002</p> </li> <li> <p>Mask R-CNN\u3001Faster R-CNN \u200b\u548c\u200b RetinaNet \u200b\u7684\u200b\u9ed8\u8ba4\u200b\u56de\u5f52\u200b\u635f\u5931\u200b\u4ece\u200b smooth L1 \u200b\u635f\u5931\u200b\u66f4\u200b\u6539\u4e3a\u200b L1 \u200b\u635f\u5931\u200b\uff0c\u200b\u4f7f\u5f97\u200b box AP \u200b\u6574\u4f53\u200b\u4e0a\u200b\u90fd\u200b\u6709\u6240\u200b\u63d0\u5347\u200b\uff08\u200b\u7ea6\u200b 0.6%\uff09\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u5c06\u200b L1-loss \u200b\u7528\u200b\u5728\u200b Cascade R-CNN \u200b\u548c\u200b HTC \u200b\u7b49\u200b\u5176\u4ed6\u200b\u65b9\u6cd5\u200b\u4e0a\u200b\u5e76\u200b\u4e0d\u80fd\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u4fdd\u7559\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u7684\u200b\u539f\u59cb\u200b\u8bbe\u7f6e\u200b\u3002</p> </li> <li> <p>\u200b\u4e3a\u200b\u7b80\u5355\u200b\u8d77\u200b\u89c1\u200b\uff0cRoIAlign \u200b\u5c42\u200b\u7684\u200b <code>sampling_ratio</code> \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b 0\u3002\u200b\u7565\u5fae\u200b\u63d0\u5347\u200b\u4e86\u200b AP\uff08\u200b\u7ea6\u200b 0.2% \u200b\u7edd\u5bf9\u503c\u200b\uff09\u3002</p> </li> <li> <p>\u200b\u4e3a\u4e86\u200b\u63d0\u5347\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\uff0c\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4e0d\u518d\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3002\u200b\u5927\u591a\u6570\u200b\u6a21\u578b\u200b\u7684\u200b\u6027\u80fd\u200b\u4e0d\u4f1a\u200b\u53d7\u5230\u200b\u5f71\u54cd\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u67d0\u4e9b\u200b\u6a21\u578b\u200b\uff08\u200b\u4f8b\u5982\u200b RepPoints\uff09\uff0c\u200b\u6211\u4eec\u200b\u4f9d\u65e7\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u6765\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4ece\u800c\u200b\u83b7\u5f97\u200b\u66f4\u597d\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p> </li> <li> <p>\u200b\u56e0\u4e3a\u200b\u4e0d\u518d\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\uff0c\u200b\u9ed8\u8ba4\u200b warmup \u200b\u6bd4\u7387\u200b\u4ece\u200b 1/3 \u200b\u66f4\u200b\u6539\u4e3a\u200b 0.001\uff0c\u200b\u4ee5\u200b\u4f7f\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u9884\u70ed\u200b\u66f4\u52a0\u200b\u5e73\u7f13\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u8fdb\u884c\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u53d1\u73b0\u200b\u8fd9\u79cd\u200b\u5f71\u54cd\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u4e0d\u8ba1\u200b\u3002</p> </li> </ul>"},{"location":"notes/compatibility/#v1x-v20","title":"\u5c06\u200b\u6a21\u578b\u200b\u4ece\u200b v1.x \u200b\u5347\u7ea7\u200b\u81f3\u200b v2.0","text":"<p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u811a\u672c\u200b <code>tools/model_converters/upgrade_model_version.py</code> \u200b\u6765\u200b\u5c06\u200b MMDetection 1.x \u200b\u8bad\u7ec3\u200b\u7684\u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u4e3a\u200b MMDetection v2.0\u3002\u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u5728\u200b MMDetection v2.0 \u200b\u4e2d\u200b\u8fd0\u884c\u200b\uff0c\u200b\u4f46\u200b\u6027\u80fd\u200b\u7565\u6709\u200b\u4e0b\u964d\u200b\uff08\u200b\u5c0f\u4e8e\u200b 1% AP\uff09\u3002 \u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>configs/legacy</code> \u200b\u4e2d\u200b\u627e\u5230\u200b\u3002</p>"},{"location":"notes/compatibility/#pycocotools","title":"pycocotools \u200b\u517c\u5bb9\u6027","text":"<p><code>mmpycocotools</code> \u200b\u662f\u200b OpenMMLab \u200b\u7ef4\u62a4\u200b\u7684\u200b <code>pycocotools</code> \u200b\u7684\u200b\u590d\u523b\u7248\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b MMDetection \u200b\u548c\u200b Detectron2\u3002 \u200b\u5728\u200b PR #4939 \u200b\u4e4b\u524d\u200b\uff0c\u200b\u7531\u4e8e\u200b <code>pycocotools</code> \u200b\u548c\u200b <code>mmpycocotool</code> \u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u5305\u540d\u200b\uff0c\u200b\u5982\u679c\u200b\u7528\u6237\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u4e86\u200b <code>pyccocotools</code>\uff08\u200b\u5728\u200b\u76f8\u540c\u200b\u73af\u5883\u200b\u4e0b\u5148\u200b\u5b89\u88c5\u200b\u4e86\u200b Detectron2 \uff09\uff0c\u200b\u90a3\u4e48\u200b MMDetection \u200b\u7684\u200b\u5b89\u88c5\u200b\u8fc7\u7a0b\u200b\u4f1a\u200b\u8df3\u200b\u8fc7\u200b\u5b89\u88c5\u200b <code>mmpycocotool</code>\u3002 \u200b\u5bfc\u81f4\u200b MMDetection \u200b\u7f3a\u5c11\u200b <code>mmpycocotools</code> \u200b\u800c\u200b\u62a5\u9519\u200b\u3002 \u200b\u4f46\u200b\u5982\u679c\u200b\u5728\u200b Detectron2 \u200b\u4e4b\u524d\u200b\u5b89\u88c5\u200b MMDetection\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5728\u200b\u76f8\u540c\u200b\u7684\u200b\u73af\u5883\u200b\u4e0b\u200b\u5de5\u4f5c\u200b\u3002 PR #4939 \u200b\u5f03\u7528\u200b mmpycocotools\uff0c\u200b\u4f7f\u7528\u200b\u5b98\u65b9\u200b pycocotools\u3002 \u200b\u5728\u200b PR #4939 \u200b\u4e4b\u540e\u200b\uff0c\u200b\u7528\u6237\u200b\u80fd\u591f\u200b\u5728\u200b\u76f8\u540c\u200b\u73af\u5883\u200b\u4e0b\u200b\u5b89\u88c5\u200b MMDetection \u200b\u548c\u200b Detectron2\uff0c\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u5173\u6ce8\u200b\u5b89\u88c5\u200b\u987a\u5e8f\u200b\u3002</p>"},{"location":"notes/faq/","title":"\u5e38\u89c1\u200b\u95ee\u9898\u89e3\u7b54","text":"<p>\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5217\u51fa\u200b\u4e86\u200b\u4f7f\u7528\u200b\u65f6\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5e38\u89c1\u95ee\u9898\u200b\u53ca\u5176\u200b\u76f8\u5e94\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u3002 \u200b\u5982\u679c\u200b\u60a8\u200b\u53d1\u73b0\u200b\u6709\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\u88ab\u200b\u9057\u6f0f\u200b\uff0c\u200b\u8bf7\u200b\u968f\u65f6\u200b\u63d0\u200b PR \u200b\u4e30\u5bcc\u200b\u8fd9\u4e2a\u200b\u5217\u8868\u200b\u3002 \u200b\u5982\u679c\u200b\u60a8\u200b\u65e0\u6cd5\u200b\u5728\u200b\u6b64\u200b\u83b7\u5f97\u200b\u5e2e\u52a9\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b issue\u200b\u6a21\u677f\u200b\u521b\u5efa\u200b\u95ee\u9898\u200b\uff0c\u200b\u4f46\u662f\u200b\u8bf7\u200b\u5728\u200b\u6a21\u677f\u200b\u4e2d\u200b\u586b\u5199\u200b\u6240\u6709\u200b\u5fc5\u586b\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8fd9\u200b\u6709\u52a9\u4e8e\u200b\u6211\u4eec\u200b\u66f4\u200b\u5feb\u200b\u5b9a\u4f4d\u95ee\u9898\u200b\u3002</p>"},{"location":"notes/faq/#pytorch-20","title":"PyTorch 2.0 \u200b\u652f\u6301","text":"<p>MMDetection \u200b\u76ee\u524d\u200b\u7edd\u5927\u90e8\u5206\u200b\u7b97\u6cd5\u200b\u5df2\u7ecf\u200b\u652f\u6301\u200b\u4e86\u200b PyTorch 2.0 \u200b\u53ca\u5176\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b, \u200b\u7528\u6237\u200b\u53ea\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b MMDetection 3.0.0rc7 \u200b\u53ca\u5176\u200b\u4ee5\u4e0a\u200b\u7248\u672c\u200b\u5373\u53ef\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u4f7f\u7528\u200b\u4e2d\u200b\u53d1\u73b0\u200b\u6709\u200b\u4e0d\u200b\u652f\u6301\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u6b22\u8fce\u200b\u7ed9\u200b\u6211\u4eec\u200b\u53cd\u9988\u200b\u3002\u200b\u6211\u4eec\u200b\u4e5f\u200b\u975e\u5e38\u200b\u6b22\u8fce\u200b\u793e\u533a\u200b\u8d21\u732e\u8005\u200b\u6765\u200b benchmark \u200b\u5bf9\u6bd4\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b\u6240\u200b\u5e26\u6765\u200b\u7684\u200b\u901f\u5ea6\u200b\u63d0\u5347\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u542f\u52a8\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b <code>train.py</code> \u200b\u6216\u8005\u200b <code>test.py</code> \u200b\u540e\u9762\u200b\u52a0\u4e0a\u200b <code>--cfg-options compile=True</code>\u3002 \u200b\u4ee5\u200b RTMDet \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u542f\u52a8\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b\uff1a</p> <pre><code># \u200b\u5355\u5361\u200b\npython tools/train.py configs/rtmdet/rtmdet_s_8xb32-300e_coco.py  --cfg-options compile=True\n\n# \u200b\u5355\u673a\u200b 8 \u200b\u5361\u200b\n./tools/dist_train.sh configs/rtmdet/rtmdet_s_8xb32-300e_coco.py 8 --cfg-options compile=True\n\n# \u200b\u5355\u673a\u200b 8 \u200b\u5361\u200b + AMP \u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\n./tools/dist_train.sh configs/rtmdet/rtmdet_s_8xb32-300e_coco.py 8 --cfg-options compile=True --amp\n</code></pre> <p>\u200b\u9700\u8981\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0cPyTorch 2.0 \u200b\u5bf9\u4e8e\u200b\u52a8\u6001\u200b shape \u200b\u652f\u6301\u200b\u4e0d\u662f\u200b\u975e\u5e38\u200b\u5b8c\u5584\u200b\uff0c\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u5927\u90e8\u5206\u200b\u4e0d\u4ec5\u200b\u8f93\u5165\u200b shape \u200b\u662f\u200b\u52a8\u6001\u200b\u7684\u200b\uff0c\u200b\u800c\u4e14\u200b loss \u200b\u8ba1\u7b97\u200b\u548c\u200b\u540e\u200b\u5904\u7406\u8fc7\u7a0b\u200b\u4e2d\u200b\u4e5f\u200b\u662f\u200b\u52a8\u6001\u200b\u7684\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u5bfc\u81f4\u200b\u5728\u200b\u5f00\u542f\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b\u540e\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u4f1a\u200b\u53d8\u6162\u200b\u3002\u200b\u57fa\u4e8e\u200b\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u542f\u52a8\u200b <code>torch.compile</code> \u200b\u529f\u80fd\u200b\uff0c\u200b\u5219\u200b\u5e94\u8be5\u200b\u9075\u5faa\u200b\u5982\u4e0b\u200b\u539f\u5219\u200b\uff1a</p> <ol> <li>\u200b\u8f93\u5165\u200b\u5230\u200b\u7f51\u7edc\u200b\u7684\u200b\u56fe\u7247\u200b\u662f\u200b\u56fa\u5b9a\u200b shape \u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u975e\u200b\u591a\u200b\u5c3a\u5ea6\u200b\u7684\u200b</li> <li>\u200b\u8bbe\u7f6e\u200b <code>torch._dynamo.config.cache_size_limit</code> \u200b\u53c2\u6570\u200b\u3002TorchDynamo \u200b\u4f1a\u200b\u5c06\u200b Python \u200b\u5b57\u8282\u200b\u7801\u200b\u8f6c\u6362\u200b\u5e76\u200b\u7f13\u5b58\u200b\uff0c\u200b\u5df2\u200b\u7f16\u8bd1\u200b\u7684\u200b\u51fd\u6570\u200b\u4f1a\u200b\u88ab\u200b\u5b58\u5165\u200b\u7f13\u5b58\u200b\u4e2d\u200b\u3002\u200b\u5f53\u4e0b\u200b\u4e00\u6b21\u200b\u68c0\u67e5\u200b\u53d1\u73b0\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u4f1a\u200b\u88ab\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u5e76\u200b\u7f13\u5b58\u200b\u3002\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u91cd\u200b\u7f16\u8bd1\u200b\u6b21\u6570\u200b\u8d85\u8fc7\u200b\u9884\u8bbe\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0864\uff09\uff0c\u200b\u5219\u200b\u8be5\u200b\u51fd\u6570\u200b\u5c06\u200b\u4e0d\u518d\u200b\u88ab\u200b\u7f13\u5b58\u200b\u6216\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u3002\u200b\u524d\u9762\u200b\u8bf4\u200b\u8fc7\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u7684\u200b loss \u200b\u8ba1\u7b97\u200b\u548c\u200b\u540e\u5904\u7406\u200b\u90e8\u5206\u200b\u4e5f\u200b\u662f\u200b\u52a8\u6001\u200b\u8ba1\u7b97\u200b\u7684\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u9700\u8981\u200b\u5728\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u4e2d\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u3002\u200b\u56e0\u6b64\u200b\u5c06\u200b <code>torch._dynamo.config.cache_size_limit</code> \u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u5f97\u200b\u66f4\u200b\u5c0f\u200b\u4e00\u4e9b\u200b\u53ef\u4ee5\u200b\u6709\u6548\u200b\u51cf\u5c11\u200b\u7f16\u8bd1\u200b\u65f6\u95f4\u200b</li> </ol> <p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u73af\u5883\u53d8\u91cf\u200b <code>DYNAMO_CACHE_SIZE_LIMIT</code> \u200b\u8bbe\u7f6e\u200b <code>torch._dynamo.config.cache_size_limit</code> \u200b\u53c2\u6570\u200b\uff0c\u200b\u4ee5\u200b RTMDet \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code># \u200b\u5355\u5361\u200b\nexport DYNAMO_CACHE_SIZE_LIMIT = 4\npython tools/train.py configs/rtmdet/rtmdet_s_8xb32-300e_coco.py  --cfg-options compile=True\n\n# \u200b\u5355\u673a\u200b 8 \u200b\u5361\u200b\nexport DYNAMO_CACHE_SIZE_LIMIT = 4\n./tools/dist_train.sh configs/rtmdet/rtmdet_s_8xb32-300e_coco.py 8 --cfg-options compile=True\n</code></pre> <p>\u200b\u5173\u4e8e\u200b PyTorch 2.0 \u200b\u7684\u200b dynamo \u200b\u5e38\u89c1\u95ee\u9898\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b \u200b\u8fd9\u91cc\u200b</p>"},{"location":"notes/faq/#_2","title":"\u5b89\u88c5","text":"<ul> <li>MMCV \u200b\u4e0e\u200b MMDetection \u200b\u7684\u200b\u517c\u5bb9\u95ee\u9898\u200b: \"ConvWS is already registered in conv layer\"; \"AssertionError: MMCV==xxx is used but incompatible. Please install mmcv&gt;=xxx, \\&lt;=xxx.\"</li> </ul> <p>MMDetection\uff0cMMEngine \u200b\u548c\u200b MMCV \u200b\u7684\u200b\u7248\u672c\u200b\u517c\u5bb9\u200b\u5173\u7cfb\u200b\u5982\u4e0b\u200b\u3002\u200b\u8bf7\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u7248\u672c\u200b\u907f\u514d\u200b\u5b89\u88c5\u200b\u9519\u8bef\u200b \u3002</p> MMDetection \u200b\u7248\u672c\u200b MMCV \u200b\u7248\u672c\u200b MMEngine \u200b\u7248\u672c\u200b main mmcv&gt;=2.0.0, \\&lt;2.2.0 mmengine&gt;=0.7.1, \\&lt;1.0.0 3.2.0 mmcv&gt;=2.0.0, \\&lt;2.2.0 mmengine&gt;=0.7.1, \\&lt;1.0.0 3.1.0 mmcv&gt;=2.0.0, \\&lt;2.1.0 mmengine&gt;=0.7.1, \\&lt;1.0.0 3.0.0 mmcv&gt;=2.0.0, \\&lt;2.1.0 mmengine&gt;=0.7.1, \\&lt;1.0.0 3.0.0rc6 mmcv&gt;=2.0.0rc4, \\&lt;2.1.0 mmengine&gt;=0.6.0, \\&lt;1.0.0 3.0.0rc5 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.3.0, \\&lt;1.0.0 3.0.0rc4 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.3.0, \\&lt;1.0.0 3.0.0rc3 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.3.0, \\&lt;1.0.0 3.0.0rc2 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.1.0, \\&lt;1.0.0 3.0.0rc1 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.1.0, \\&lt;1.0.0 3.0.0rc0 mmcv&gt;=2.0.0rc1, \\&lt;2.1.0 mmengine&gt;=0.1.0, \\&lt;1.0.0 <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ol> <li>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\u5b89\u88c5\u200b mmdet-v2.x, MMDetection \u200b\u548c\u200b MMCV \u200b\u7248\u672c\u200b\u517c\u5bb9\u200b\u8868\u200b\u53ef\u4ee5\u200b\u5728\u200b \u200b\u8fd9\u91cc\u200b \u200b\u627e\u5230\u200b\uff0c\u200b\u8bf7\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u7248\u672c\u200b\u907f\u514d\u200b\u5b89\u88c5\u200b\u9519\u8bef\u200b\u3002</li> <li> <p>\u200b\u5728\u200b MMCV-v2.x \u200b\u4e2d\u200b\uff0c<code>mmcv-full</code> \u200b\u6539\u540d\u200b\u4e3a\u200b <code>mmcv</code>\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5b89\u88c5\u200b\u4e0d\u200b\u5305\u542b\u200b CUDA \u200b\u7b97\u5b50\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u5b89\u88c5\u200b MMCV \u200b\u7cbe\u7b80\u7248\u200b <code>mmcv-lite</code>\u3002</p> </li> <li> <p>\"No module named 'mmcv.ops'\"; \"No module named 'mmcv._ext'\".</p> </li> </ol> <p>\u200b\u539f\u56e0\u200b\u662f\u200b\u5b89\u88c5\u200b\u4e86\u200b <code>mmcv-lite</code> \u200b\u800c\u200b\u4e0d\u662f\u200b <code>mmcv</code>\u3002</p> <ol> <li> <p><code>pip uninstall mmcv-lite</code> \u200b\u5378\u8f7d\u200b\u5b89\u88c5\u200b\u7684\u200b <code>mmcv-lite</code></p> </li> <li> <p>\u200b\u5b89\u88c5\u200b <code>mmcv</code> \u200b\u6839\u636e\u200b \u200b\u5b89\u88c5\u200b\u8bf4\u660e\u200b\u3002</p> </li> <li> <p>\u200b\u5728\u200b Windows \u200b\u73af\u5883\u200b\u4e0b\u200b\u5b89\u88c5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9047\u5230\u200b \"Microsoft Visual C++ 14.0 or graeter is required\" error .</p> </li> </ol> <p>\u200b\u8fd9\u4e2a\u200b\u9519\u8bef\u200b\u53d1\u751f\u200b\u5728\u200b pycotools \u200b\u7684\u200b 'pycocotools._mask' \u200b\u6269\u5c55\u200b\u6784\u5efa\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5176\u200b\u539f\u56e0\u200b\u662f\u200b\u7f3a\u5c11\u200b\u4e86\u200b\u5bf9\u5e94\u200b C++ \u200b\u73af\u5883\u200b\u4f9d\u8d56\u200b\u3002\u200b\u4f60\u200b\u9700\u8981\u200b\u5230\u200b\u5fae\u8f6f\u200b\u5b98\u65b9\u200b\u4e0b\u8f7d\u200b\u5bf9\u5e94\u200b\u5de5\u5177\u200b\uff0c\u200b\u9009\u62e9\u200b\u201c\u200b\u4f7f\u7528\u200b C++ \u200b\u7684\u200b\u684c\u9762\u5f00\u53d1\u200b\u201d\u200b\u9009\u9879\u200b\u5b89\u88c5\u200b\u6700\u5c0f\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u968f\u540e\u200b\u91cd\u65b0\u5b89\u88c5\u200b pycocotools\u3002</p> <ul> <li>\u200b\u4f7f\u7528\u200b albumentations</li> </ul> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\u4f7f\u7528\u200b <code>albumentations</code>\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b <code>pip install -r requirements/albu.txt</code> \u200b\u6216\u8005\u200b <code>pip install -U albumentations --no-binary qudida,albumentations</code> \u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b\u3002 \u200b\u5982\u679c\u200b\u7b80\u5355\u200b\u5730\u200b\u4f7f\u7528\u200b <code>pip install albumentations&gt;=0.3.2</code> \u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b\uff0c \u200b\u5219\u200b\u4f1a\u200b\u540c\u65f6\u200b\u5b89\u88c5\u200b <code>opencv-python-headless</code>\uff08\u200b\u5373\u4fbf\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u4e86\u200b <code>opencv-python</code> \u200b\u4e5f\u200b\u4f1a\u200b\u518d\u6b21\u200b\u5b89\u88c5\u200b\uff09\u3002 \u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5728\u200b\u5b89\u88c5\u200b <code>albumentations</code> \u200b\u540e\u200b\u68c0\u67e5\u200b\u73af\u5883\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u6ca1\u6709\u200b\u540c\u65f6\u200b\u5b89\u88c5\u200b <code>opencv-python</code> \u200b\u548c\u200b <code>opencv-python-headless</code>\uff0c \u200b\u56e0\u4e3a\u200b\u540c\u65f6\u200b\u5b89\u88c5\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b \u3002</p> <ul> <li>\u200b\u5728\u200b\u67d0\u4e9b\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u51fa\u73b0\u200b ModuleNotFoundError \u200b\u9519\u8bef\u200b</li> </ul> <p>\u200b\u4e00\u4e9b\u200b\u7b97\u6cd5\u200b\u6216\u8005\u200b\u6570\u636e\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u4f8b\u5982\u200b Instaboost\u3001 Panoptic Segmentation\u3001 LVIS dataset \u200b\u7b49\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\u9519\u8bef\u4fe1\u606f\u200b\u5e76\u200b\u5b89\u88c5\u200b\u76f8\u5e94\u200b\u7684\u200b\u5305\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code># \u200b\u5b89\u88c5\u200b instaboost \u200b\u4f9d\u8d56\u200b\npip install instaboostfast\n# \u200b\u5b89\u88c5\u200b panoptic segmentation \u200b\u4f9d\u8d56\u200b\npip install git+https://github.com/cocodataset/panopticapi.git\n# \u200b\u5b89\u88c5\u200b LVIS dataset \u200b\u4f9d\u8d56\u200b\npip install git+https://github.com/lvis-dataset/lvis-api.git\n</code></pre>"},{"location":"notes/faq/#_3","title":"\u4ee3\u7801","text":"<ul> <li>\u200b\u4fee\u6539\u200b\u4e00\u4e9b\u200b\u4ee3\u7801\u200b\u540e\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u91cd\u65b0\u5b89\u88c5\u200b mmdet</li> </ul> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u9075\u5faa\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff0c\u200b\u5373\u200b\u4f7f\u7528\u200b <code>pip install -v -e .</code> \u200b\u5b89\u88c5\u200b\u7684\u200b mmdet\uff0c\u200b\u5219\u200b\u5bf9\u200b\u672c\u5730\u200b\u4ee3\u7801\u200b\u6240\u4f5c\u200b\u7684\u200b\u4efb\u4f55\u200b\u4fee\u6539\u200b\u90fd\u200b\u4f1a\u200b\u751f\u6548\u200b\uff0c\u200b\u65e0\u9700\u200b\u91cd\u65b0\u5b89\u88c5\u200b</p> <ul> <li>\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b MMDetection \u200b\u7248\u672c\u200b\u8fdb\u884c\u200b\u5f00\u53d1\u200b</li> </ul> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u62e5\u6709\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u4f8b\u5982\u200b mmdet-3.0\uff0cmmdet-3.1\u3002</p> <p>\u200b\u8981\u200b\u4f7f\u200b\u73af\u5883\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u9ed8\u8ba4\u200b\u7684\u200b MMDetection \u200b\u800c\u200b\u4e0d\u662f\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u5728\u200b\u4f7f\u7528\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b\u51fa\u73b0\u200b\u5728\u200b\u76f8\u5173\u200b\u811a\u672c\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>PYTHONPATH=\"$(dirname $0)/..\":$PYTHONPATH\n</code></pre>"},{"location":"notes/faq/#pytorchcuda","title":"PyTorch/CUDA \u200b\u73af\u5883\u200b\u76f8\u5173","text":"<ul> <li> <p>\"RTX 30 series card fails when building MMCV or MMDet\"</p> </li> <li> <p>\u200b\u4e34\u65f6\u200b\u89e3\u51b3\u65b9\u6848\u200b\u4e3a\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b <code>MMCV_WITH_OPS=1 MMCV_CUDA_ARGS='-gencode=arch=compute_80,code=sm_80' pip install -e .</code> \u200b\u8fdb\u884c\u200b\u7f16\u8bd1\u200b\u3002 \u200b\u5e38\u89c1\u200b\u62a5\u9519\u200b\u4fe1\u606f\u200b\u4e3a\u200b <code>nvcc fatal : Unsupported gpu architecture 'compute_86'</code> \u200b\u610f\u601d\u200b\u662f\u200b\u4f60\u200b\u7684\u200b\u7f16\u8bd1\u5668\u200b\u4e0d\u200b\u652f\u6301\u200b sm_86 \u200b\u67b6\u6784\u200b(\u200b\u5305\u62ec\u200b\u82f1\u200b\u4f1f\u8fbe\u200b 30 \u200b\u7cfb\u5217\u200b\u7684\u200b\u663e\u5361\u200b)\u200b\u7684\u200b\u4f18\u5316\u200b\uff0c\u200b\u81f3\u200b CUDA toolkit 11.0 \u200b\u4f9d\u65e7\u200b\u672a\u200b\u652f\u6301\u200b. \u200b\u8fd9\u4e2a\u200b\u547d\u4ee4\u200b\u662f\u200b\u901a\u8fc7\u200b\u589e\u52a0\u200b\u5b8f\u200b <code>MMCV_CUDA_ARGS='-gencode=arch=compute_80,code=sm_80</code> \u200b\u8ba9\u200b nvcc \u200b\u7f16\u8bd1\u5668\u200b\u4e3a\u82f1\u200b\u4f1f\u8fbe\u200b 30 \u200b\u7cfb\u5217\u200b\u663e\u5361\u200b\u8fdb\u884c\u200b <code>sm_80</code> \u200b\u7684\u200b\u4f18\u5316\u200b\uff0c\u200b\u867d\u7136\u200b\u8fd9\u6709\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u65e0\u6cd5\u200b\u53d1\u6325\u200b\u51fa\u200b\u663e\u5361\u200b\u6240\u6709\u200b\u6027\u80fd\u200b\u3002</p> </li> <li> <p>\u200b\u6709\u200b\u5f00\u53d1\u8005\u200b\u5df2\u7ecf\u200b\u5728\u200b pytorch/pytorch#47585 \u200b\u66f4\u65b0\u200b\u4e86\u200b PyTorch \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u7f16\u8bd1\u200b flag\uff0c \u200b\u4f46\u662f\u200b\u6211\u4eec\u200b\u5bf9\u6b64\u200b\u5e76\u200b\u6ca1\u6709\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\u3002</p> </li> <li> <p>\"invalid device function\" \u200b\u6216\u8005\u200b \"no kernel image is available for execution\".</p> </li> <li> <p>\u200b\u68c0\u67e5\u200b\u60a8\u200b\u6b63\u5e38\u200b\u5b89\u88c5\u200b\u4e86\u200b CUDA runtime (\u200b\u4e00\u822c\u200b\u5728\u200b<code>/usr/local/</code>)\uff0c\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b <code>nvcc --version</code> \u200b\u68c0\u67e5\u200b\u672c\u5730\u200b\u7248\u672c\u200b\uff0c\u200b\u6709\u65f6\u200b\u5b89\u88c5\u200b PyTorch \u200b\u4f1a\u200b\u987a\u5e26\u200b\u5b89\u88c5\u200b\u4e00\u4e2a\u200b CUDA runtime\uff0c\u200b\u5e76\u4e14\u200b\u5b9e\u9645\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b conda \u200b\u73af\u5883\u200b\u4e2d\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>conda list cudatoolkit</code> \u200b\u67e5\u770b\u200b\u5176\u200b\u7248\u672c\u200b\u3002</p> </li> <li> <p>\u200b\u7f16\u8bd1\u200b extension \u200b\u7684\u200b CUDA Toolkit \u200b\u7248\u672c\u200b\u4e0e\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7684\u200b CUDA Toolkit \u200b\u7248\u672c\u200b\u662f\u5426\u200b\u76f8\u7b26\u200b\uff0c</p> <ul> <li>\u200b\u5982\u679c\u200b\u60a8\u200b\u4ece\u200b\u6e90\u7801\u200b\u81ea\u5df1\u200b\u7f16\u8bd1\u200b\u7684\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>python mmdet/utils/collect_env.py</code> \u200b\u68c0\u67e5\u200b\u7f16\u8bd1\u200b\u7f16\u8bd1\u200b extension \u200b\u7684\u200b CUDA Toolkit \u200b\u7248\u672c\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b <code>conda list cudatoolkit</code> \u200b\u68c0\u67e5\u200b\u5f53\u524d\u200b conda \u200b\u73af\u5883\u200b\u662f\u5426\u200b\u6709\u200b CUDA Toolkit\uff0c\u200b\u82e5\u6709\u200b\u68c0\u67e5\u200b\u7248\u672c\u200b\u662f\u5426\u200b\u5339\u914d\u200b\uff0c \u200b\u5982\u200b\u4e0d\u200b\u5339\u914d\u200b\uff0c\u200b\u66f4\u6362\u200b conda \u200b\u73af\u5883\u200b\u7684\u200b CUDA Toolkit\uff0c\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u5339\u914d\u200b\u7684\u200b CUDA Toolkit \u200b\u4e2d\u200b\u7684\u200b nvcc \u200b\u7f16\u8bd1\u200b\u5373\u53ef\u200b\uff0c\u200b\u5982\u200b\u73af\u5883\u200b\u4e2d\u200b\u65e0\u200b CUDA Toolkit\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>nvcc -V</code>\u3002</li> </ul> <p>\u200b\u7b49\u200b\u547d\u4ee4\u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b CUDA runtime\u3002</p> <ul> <li>\u200b\u5982\u679c\u200b\u60a8\u200b\u662f\u200b\u901a\u8fc7\u200b pip \u200b\u4e0b\u8f7d\u200b\u7684\u200b\u9884\u200b\u7f16\u8bd1\u200b\u597d\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4e0e\u200b\u5f53\u524d\u200b CUDA runtime \u200b\u4e00\u81f4\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u8fd0\u884c\u200b <code>python mmdet/utils/collect_env.py</code> \u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u4e3a\u200b\u6b63\u786e\u200b\u7684\u200b GPU \u200b\u67b6\u6784\u200b\u7f16\u8bd1\u200b\u7684\u200b PyTorch\uff0c torchvision\uff0c \u200b\u4e0e\u200b MMCV\u3002 \u200b\u4f60\u200b\u6216\u8bb8\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b <code>TORCH_CUDA_ARCH_LIST</code> \u200b\u6765\u200b\u91cd\u65b0\u5b89\u88c5\u200b MMCV\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b GPU \u200b\u67b6\u6784\u200b\u8868\u200b,      \u200b\u4f8b\u5982\u200b\uff0c \u200b\u8fd0\u884c\u200b <code>TORCH_CUDA_ARCH_LIST=7.0 pip install mmcv</code> \u200b\u4e3a\u200b Volta GPU \u200b\u7f16\u8bd1\u200b MMCV\u3002\u200b\u8fd9\u79cd\u200b\u67b6\u6784\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u95ee\u9898\u200b\u4e00\u822c\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u5728\u200b\u4f7f\u7528\u200b\u4e00\u4e9b\u200b\u65e7\u200b\u578b\u53f7\u200b\u7684\u200b GPU \u200b\u65f6\u5019\u200b\u51fa\u73b0\u200b\uff0c \u200b\u4f8b\u5982\u200b\uff0c Tesla K80\u3002</p> </li> <li> <p>\"undefined symbol\" \u200b\u6216\u8005\u200b \"cannot open xxx.so\".</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u8fd9\u4e9b\u200b symbol \u200b\u5c5e\u4e8e\u200b CUDA/C++ (\u200b\u5982\u200b libcudart.so \u200b\u6216\u8005\u200b GLIBCXX)\uff0c\u200b\u4f7f\u7528\u200b <code>python mmdet/utils/collect_env.py</code>\u200b\u68c0\u67e5\u200b CUDA/GCC runtime \u200b\u4e0e\u200b\u7f16\u8bd1\u200b MMCV \u200b\u7684\u200b CUDA \u200b\u7248\u672c\u200b\u662f\u5426\u200b\u76f8\u540c\u200b\u3002</p> </li> <li>\u200b\u5982\u679c\u200b\u8fd9\u4e9b\u200b symbols \u200b\u5c5e\u4e8e\u200b PyTorch\uff0c(\u200b\u4f8b\u5982\u200b, symbols containing caffe, aten, and TH), \u200b\u68c0\u67e5\u200b\u5f53\u524d\u200b Pytorch \u200b\u7248\u672c\u200b\u662f\u5426\u200b\u4e0e\u200b\u7f16\u8bd1\u200b MMCV \u200b\u7684\u200b\u7248\u672c\u200b\u4e00\u81f4\u200b\u3002</li> <li> <p>\u200b\u8fd0\u884c\u200b <code>python mmdet/utils/collect_env.py</code> \u200b\u68c0\u67e5\u200b PyTorch\uff0c torchvision\uff0c MMCV \u200b\u7b49\u200b\u7684\u200b\u7f16\u8bd1\u200b\u73af\u5883\u200b\u4e0e\u200b\u8fd0\u884c\u200b\u73af\u5883\u200b\u4e00\u81f4\u200b\u3002</p> </li> <li> <p>setuptools.sandbox.UnpickleableException: DistutilsSetupError(\"each element of 'ext_modules' option must be an Extension instance or 2-tuple\")</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u4f7f\u7528\u200b miniconda \u200b\u800c\u200b\u4e0d\u662f\u200b anaconda\uff0c\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u7684\u200b\u5b89\u88c5\u200b\u4e86\u200b Cython \u200b\u5982\u200b #3379.</p> </li> <li> <p>\u200b\u68c0\u67e5\u200b\u73af\u5883\u200b\u4e2d\u200b\u7684\u200b <code>setuptools</code>, <code>Cython</code>, and <code>PyTorch</code> \u200b\u76f8\u4e92\u4e4b\u95f4\u200b\u7248\u672c\u200b\u662f\u5426\u200b\u5339\u914d\u200b\u3002</p> </li> <li> <p>\"Segmentation fault\".</p> </li> <li> <p>\u200b\u68c0\u67e5\u200b GCC \u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u901a\u5e38\u200b\u662f\u56e0\u4e3a\u200b PyTorch \u200b\u7248\u672c\u200b\u4e0e\u200b GCC \u200b\u7248\u672c\u200b\u4e0d\u200b\u5339\u914d\u200b \uff08\u200b\u4f8b\u5982\u200b GCC \\&lt; 4.9 )\uff0c\u200b\u6211\u4eec\u200b\u63a8\u8350\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b GCC 5.4\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u4e0d\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b GCC 5.5\uff0c \u200b\u56e0\u4e3a\u200b\u6709\u200b\u53cd\u9988\u200b GCC 5.5 \u200b\u4f1a\u200b\u5bfc\u81f4\u200b \"segmentation fault\" \u200b\u5e76\u4e14\u200b\u5207\u6362\u200b\u5230\u200b GCC 5.4 \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p> </li> <li> <p>\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u5b89\u88c5\u200b\u4e86\u200b CUDA \u200b\u7248\u672c\u200b\u7684\u200b PyTorch \u3002</p> <pre><code>python -c 'import torch; print(torch.cuda.is_available())'\n</code></pre> <p>\u200b\u662f\u5426\u200b\u8fd4\u56de\u200bTrue\u3002</p> </li> <li> <p>\u200b\u5982\u679c\u200b <code>torch</code> \u200b\u7684\u200b\u5b89\u88c5\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\uff0c\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u7f16\u8bd1\u200b\u4e86\u200b MMCV\u3002</p> <pre><code>python -c 'import mmcv; import mmcv.ops'\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b MMCV \u200b\u4e0e\u200b PyTorch \u200b\u90fd\u200b\u88ab\u200b\u6b63\u786e\u200b\u5b89\u88c5\u200b\u4e86\u200b\uff0c\u200b\u5219\u200b\u4f7f\u7528\u200b <code>ipdb</code>, <code>pdb</code> \u200b\u8bbe\u7f6e\u200b\u65ad\u70b9\u200b\uff0c\u200b\u76f4\u63a5\u200b\u67e5\u627e\u200b\u54ea\u200b\u4e00\u90e8\u5206\u200b\u7684\u200b\u4ee3\u7801\u200b\u5bfc\u81f4\u200b\u4e86\u200b <code>segmentation fault</code>\u3002</p> </li> </ul>"},{"location":"notes/faq/#training","title":"Training \u200b\u76f8\u5173","text":"<ul> <li> <p>\"Loss goes Nan\"</p> </li> <li> <p>\u200b\u68c0\u67e5\u6570\u636e\u200b\u7684\u200b\u6807\u6ce8\u200b\u662f\u5426\u200b\u6b63\u5e38\u200b\uff0c \u200b\u957f\u200b\u6216\u200b\u5bbd\u200b\u4e3a\u200b 0 \u200b\u7684\u200b\u6846\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u56de\u5f52\u200b loss \u200b\u53d8\u4e3a\u200b nan\uff0c\u200b\u4e00\u4e9b\u200b\u5c0f\u200b\u5c3a\u5bf8\u200b\uff08\u200b\u5bbd\u5ea6\u200b\u6216\u200b\u9ad8\u5ea6\u200b\u5c0f\u4e8e\u200b 1\uff09\u200b\u7684\u200b\u6846\u200b\u5728\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0cinstaboost\uff09\u200b\u540e\u200b\u4e5f\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6b64\u200b\u95ee\u9898\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u68c0\u67e5\u200b\u6807\u6ce8\u200b\u5e76\u200b\u8fc7\u6ee4\u200b\u6389\u200b\u90a3\u4e9b\u200b\u7279\u522b\u200b\u5c0f\u200b\u751a\u81f3\u200b\u9762\u79ef\u200b\u4e3a\u200b 0 \u200b\u7684\u200b\u6846\u200b\uff0c\u200b\u5e76\u200b\u5173\u95ed\u200b\u4e00\u4e9b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b 0 \u200b\u9762\u79ef\u200b\u6846\u200b\u51fa\u73b0\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u3002</p> </li> <li>\u200b\u964d\u4f4e\u200b\u5b66\u4e60\u200b\u7387\u200b\uff1a\u200b\u7531\u4e8e\u200b\u67d0\u4e9b\u200b\u539f\u56e0\u200b\uff0c\u200b\u4f8b\u5982\u200b batch size \u200b\u5927\u5c0f\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c \u200b\u5bfc\u81f4\u200b\u5f53\u524d\u200b\u5b66\u4e60\u200b\u7387\u200b\u53ef\u80fd\u200b\u592a\u200b\u5927\u200b\u3002 \u200b\u60a8\u200b\u53ef\u4ee5\u200b\u964d\u4f4e\u200b\u4e3a\u200b\u53ef\u4ee5\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u503c\u200b\u3002</li> <li>\u200b\u5ef6\u957f\u200b warm up \u200b\u7684\u200b\u65f6\u95f4\u200b\uff1a\u200b\u4e00\u4e9b\u200b\u6a21\u578b\u200b\u5728\u200b\u8bad\u7ec3\u200b\u521d\u59cb\u200b\u65f6\u200b\u5bf9\u200b\u5b66\u4e60\u200b\u7387\u200b\u5f88\u200b\u654f\u611f\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u628a\u200b <code>warmup_iters</code> \u200b\u4ece\u200b 500 \u200b\u66f4\u200b\u6539\u4e3a\u200b 1000 \u200b\u6216\u200b 2000\u3002</li> <li> <p>\u200b\u6dfb\u52a0\u200b gradient clipping: \u200b\u4e00\u4e9b\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u6765\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u3002 \u200b\u9ed8\u8ba4\u200b\u7684\u200b <code>grad_clip</code> \u200b\u662f\u200b <code>None</code>,  \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b config \u200b\u8bbe\u7f6e\u200b <code>optimizer_config=dict(_delete_=True, grad_clip=dict(max_norm=35, norm_type=2))</code>  \u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b config \u200b\u6ca1\u6709\u200b\u7ee7\u627f\u200b\u4efb\u4f55\u200b\u5305\u542b\u200b <code>optimizer_config=dict(grad_clip=None)</code>,  \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbe\u7f6e\u200b<code>optimizer_config=dict(grad_clip=dict(max_norm=35, norm_type=2))</code>.</p> </li> <li> <p>\"GPU out of memory\"</p> </li> <li> <p>\u200b\u5b58\u5728\u200b\u5927\u91cf\u200b ground truth boxes \u200b\u6216\u8005\u200b\u5927\u91cf\u200b anchor \u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5728\u200b assigner \u200b\u4f1a\u200b OOM\u3002 \u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5728\u200b assigner \u200b\u7684\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b <code>gpu_assign_thr=N</code>\uff0c\u200b\u8fd9\u6837\u200b\u5f53\u200b\u8d85\u8fc7\u200b N \u200b\u4e2a\u200b GT boxes \u200b\u65f6\u200b\uff0cassigner \u200b\u4f1a\u200b\u901a\u8fc7\u200b CPU \u200b\u8ba1\u7b97\u200b IOU\u3002</p> </li> <li> <p>\u200b\u5728\u200b backbone \u200b\u4e2d\u200b\u8bbe\u7f6e\u200b <code>with_cp=True</code>\u3002 \u200b\u8fd9\u200b\u4f7f\u7528\u200b PyTorch \u200b\u4e2d\u200b\u7684\u200b <code>sublinear strategy</code> \u200b\u6765\u200b\u964d\u4f4e\u200b backbone \u200b\u5360\u7528\u200b\u7684\u200b GPU \u200b\u663e\u5b58\u200b\u3002</p> </li> <li> <p>\u200b\u4f7f\u7528\u200b <code>config/fp16</code> \u200b\u4e2d\u200b\u7684\u200b\u793a\u4f8b\u200b\u5c1d\u8bd5\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\u3002<code>loss_scale</code> \u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u8c03\u6574\u200b\u3002</p> </li> <li> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b <code>AvoidCUDAOOM</code> \u200b\u6765\u200b\u907f\u514d\u200b\u8be5\u200b\u95ee\u9898\u200b\u3002\u200b\u9996\u5148\u200b\u5b83\u200b\u5c06\u200b\u5c1d\u8bd5\u200b\u8c03\u7528\u200b <code>torch.cuda.empty_cache()</code>\u3002\u200b\u5982\u679c\u200b\u5931\u8d25\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u5c1d\u8bd5\u200b\u628a\u200b\u8f93\u5165\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u5230\u200b FP16\u3002\u200b\u5982\u679c\u200b\u4ecd\u7136\u200b\u5931\u8d25\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u628a\u200b\u8f93\u5165\u200b\u4ece\u200b GPUs \u200b\u8f6c\u6362\u200b\u5230\u200b CPUs \u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u3002\u200b\u8fd9\u91cc\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u4f7f\u7528\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>from mmdet.utils import AvoidCUDAOOM\n\noutput = AvoidCUDAOOM.retry_if_cuda_oom(some_function)(input1, input2)\n</code></pre> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u200b\u4e5f\u200b\u4f7f\u7528\u200b <code>AvoidCUDAOOM</code> \u200b\u4f5c\u4e3a\u200b\u88c5\u9970\u200b\u5668\u200b\u8ba9\u200b\u4ee3\u7801\u200b\u9047\u5230\u200b OOM \u200b\u7684\u200b\u65f6\u5019\u200b\u7ee7\u7eed\u200b\u8fd0\u884c\u200b\uff1a</p> <pre><code>from mmdet.utils import AvoidCUDAOOM\n\n@AvoidCUDAOOM.retry_if_cuda_oom\ndef function(*args, **kwargs):\n    ...\n    return xxx\n</code></pre> </li> <li> <p>\"RuntimeError: Expected to have finished reduction in the prior iteration before starting a new one\"</p> </li> <li> <p>\u200b\u8fd9\u4e2a\u200b\u9519\u8bef\u200b\u51fa\u73b0\u200b\u5728\u200b\u5b58\u5728\u200b\u53c2\u6570\u200b\u6ca1\u6709\u200b\u5728\u200b forward \u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5bb9\u6613\u200b\u5728\u200b DDP \u200b\u4e2d\u200b\u8fd0\u884c\u200b\u4e0d\u540c\u200b\u5206\u652f\u200b\u65f6\u200b\u53d1\u751f\u200b\u3002</p> </li> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b config \u200b\u8bbe\u7f6e\u200b <code>find_unused_parameters = True</code> \u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b (\u200b\u4f1a\u200b\u964d\u4f4e\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b)\u3002</li> <li> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5728\u200b config \u200b\u4e2d\u200b\u7684\u200b <code>optimizer_config</code> \u200b\u91cc\u200b\u8bbe\u7f6e\u200b <code>detect_anomalous_params=True</code> \u200b\u67e5\u627e\u200b\u54ea\u4e9b\u200b\u53c2\u6570\u200b\u6ca1\u6709\u200b\u7528\u5230\u200b\uff0c\u200b\u4f46\u662f\u200b\u9700\u8981\u200b MMCV \u200b\u7684\u200b\u7248\u672c\u200b &gt;= 1.4.1\u3002</p> </li> <li> <p>\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4fdd\u5b58\u200b\u6700\u597d\u200b\u6a21\u578b\u200b</p> </li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u914d\u7f6e\u200b <code>default_hooks = dict(checkpoint=dict(type='CheckpointHook', interval=1, save_best='auto')</code>\u200b\u5f00\u542f\u200b\u3002\u200b\u5728\u200b <code>auto</code> \u200b\u53c2\u6570\u200b\u60c5\u51b5\u200b\u4e0b\u4f1a\u200b\u6839\u636e\u200b\u8fd4\u56de\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b key \u200b\u4f5c\u4e3a\u200b\u9009\u62e9\u200b\u6700\u4f18\u200b\u6a21\u578b\u200b\u7684\u200b\u4f9d\u636e\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbe\u7f6e\u200b\u8bc4\u4f30\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u7684\u200b key \u200b\u6765\u200b\u624b\u52a8\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>save_best='coco/bbox_mAP'</code>\u3002</p> <ul> <li>\u200b\u5728\u200b Resume \u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>ExpMomentumEMAHook</code></li> </ul> <p>\u200b\u5982\u679c\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e86\u200b <code>ExpMomentumEMAHook</code>\uff0c\u200b\u90a3\u4e48\u200b resume \u200b\u65f6\u5019\u200b\u4e0d\u80fd\u200b\u4ec5\u4ec5\u200b\u901a\u8fc7\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b <code>--resume-from</code> \u200b\u6216\u200b <code>--cfg-options resume_from</code> \u200b\u5b9e\u73b0\u200b\u6062\u590d\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\u529f\u80fd\u200b\u4f8b\u5982\u200b <code>python tools/train.py configs/yolox/yolox_s_8x8_300e_coco.py --resume-from ./work_dir/yolox_s_8x8_300e_coco/epoch_x.pth</code>\u3002\u200b\u4ee5\u200b <code>yolox_s</code> \u200b\u7b97\u6cd5\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u7531\u4e8e\u200b <code>ExpMomentumEMAHook</code> \u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\u6743\u91cd\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u505a\u6cd5\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code># \u200b\u76f4\u63a5\u200b\u6253\u5f00\u200b configs/yolox/yolox_s_8x8_300e_coco.py \u200b\u4fee\u6539\u200b\u6240\u6709\u200b resume_from \u200b\u5b57\u200b\u6bb5\u200b\nresume_from=./work_dir/yolox_s_8x8_300e_coco/epoch_x.pth\ncustom_hooks=[...\n    dict(\n        type='ExpMomentumEMAHook',\n        resume_from=./work_dir/yolox_s_8x8_300e_coco/epoch_x.pth,\n        momentum=0.0001,\n        priority=49)\n    ]\n</code></pre>"},{"location":"notes/faq/#evaluation","title":"Evaluation \u200b\u76f8\u5173","text":"<ul> <li>\u200b\u4f7f\u7528\u200b COCO Dataset \u200b\u7684\u200b\u6d4b\u8bc4\u200b\u63a5\u53e3\u200b\u65f6\u200b, \u200b\u6d4b\u8bc4\u200b\u7ed3\u679c\u200b\u4e2d\u200b AP \u200b\u6216\u8005\u200b AR = -1</li> <li>\u200b\u6839\u636e\u200bCOCO\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u4e00\u5f20\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u7684\u200b\u4e2d\u7b49\u200b\u7269\u4f53\u200b\u4e0e\u200b\u5c0f\u200b\u7269\u4f53\u200b\u9762\u79ef\u200b\u7684\u200b\u9608\u503c\u200b\u5206\u522b\u200b\u4e3a\u200b 9216\uff0896*96\uff09\u200b\u4e0e\u200b 1024\uff0832*32\uff09\u3002</li> <li>\u200b\u5982\u679c\u200b\u5728\u200b\u67d0\u4e2a\u200b\u533a\u95f4\u200b\u6ca1\u6709\u200b\u68c0\u6d4b\u200b\u6846\u200b AP \u200b\u4e0e\u200b AR \u200b\u8ba4\u5b9a\u200b\u4e3a\u200b -1.</li> </ul>"},{"location":"notes/faq/#model","title":"Model \u200b\u76f8\u5173","text":"<ul> <li>ResNet style \u200b\u53c2\u6570\u200b\u8bf4\u660e\u200b</li> </ul> <p>ResNet style \u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\u5141\u8bb8\u200b <code>pytorch</code> \u200b\u548c\u200b <code>caffe</code>\uff0c\u200b\u5176\u200b\u5dee\u522b\u200b\u5728\u4e8e\u200b Bottleneck \u200b\u6a21\u5757\u200b\u3002Bottleneck \u200b\u662f\u200b <code>1x1-3x3-1x1</code> \u200b\u5806\u53e0\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5728\u200b <code>caffe</code> \u200b\u6a21\u5f0f\u200b\u6a21\u5f0f\u200b\u4e0b\u200b stride=2 \u200b\u53c2\u6570\u200b\u653e\u7f6e\u200b\u5728\u200b\u7b2c\u4e00\u4e2a\u200b <code>1x1</code> \u200b\u5377\u79ef\u200b\u5904\u200b\uff0c\u200b\u800c\u200b <code>pyorch</code> \u200b\u6a21\u5f0f\u200b\u4e0b\u200b stride=2 \u200b\u653e\u5728\u200b\u7b2c\u4e8c\u4e2a\u200b <code>3x3</code> \u200b\u5377\u79ef\u200b\u5904\u200b\u3002\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u793a\u4f8b\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>if self.style == 'pytorch':\n      self.conv1_stride = 1\n      self.conv2_stride = stride\nelse:\n      self.conv1_stride = stride\n      self.conv2_stride = 1\n</code></pre> <ul> <li>ResNeXt \u200b\u53c2\u6570\u200b\u8bf4\u660e\u200b</li> </ul> <p>ResNeXt \u200b\u6765\u81ea\u200b\u8bba\u6587\u200b <code>Aggregated Residual Transformations for Deep Neural Networks</code>. \u200b\u5176\u200b\u5f15\u5165\u200b\u5206\u7ec4\u200b\u5377\u79ef\u200b\uff0c\u200b\u5e76\u4e14\u200b\u901a\u8fc7\u200b\u53d8\u91cf\u200b\u57fa\u6570\u200b\u6765\u200b\u63a7\u5236\u7ec4\u200b\u7684\u200b\u6570\u91cf\u200b\u8fbe\u5230\u200b\u7cbe\u5ea6\u200b\u548c\u200b\u590d\u6742\u5ea6\u200b\u7684\u200b\u5e73\u8861\u200b\uff0c\u200b\u5176\u6709\u200b\u4e24\u4e2a\u200b\u8d85\u53c2\u200b <code>baseWidth</code> \u200b\u548c\u200b <code>cardinality</code>\u200b\u6765\u200b\u63a7\u5236\u200b\u5185\u90e8\u200b Bottleneck \u200b\u6a21\u5757\u200b\u7684\u200b\u57fa\u672c\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u5206\u7ec4\u200b\u6570\u200b\u53c2\u6570\u200b\u3002\u200b\u4ee5\u200b MMDetection \u200b\u4e2d\u200b\u914d\u7f6e\u200b\u540d\u4e3a\u200b <code>mask_rcnn_x101_64x4d_fpn_mstrain-poly_3x_coco.py</code> \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>mask_rcnn</code> \u200b\u4ee3\u8868\u200b\u7b97\u6cd5\u200b\u91c7\u7528\u200b Mask R-CNN\uff0c<code>x101</code> \u200b\u4ee3\u8868\u200b\u9aa8\u67b6\u200b\u7f51\u7edc\u200b\u91c7\u7528\u200b ResNeXt-101\uff0c<code>64x4d</code>\u200b\u4ee3\u8868\u200b Bottleneck \u200b\u4e00\u5171\u200b\u5206\u6210\u200b 64 \u200b\u7ec4\u200b\uff0c\u200b\u6bcf\u7ec4\u200b\u7684\u200b\u57fa\u672c\u200b\u5bbd\u5ea6\u200b\u662f\u200b 4\u3002</p> <ul> <li>\u200b\u9aa8\u67b6\u200b\u7f51\u7edc\u200b eval \u200b\u6a21\u5f0f\u200b\u8bf4\u660e\u200b</li> </ul> <p>\u200b\u56e0\u4e3a\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u901a\u5e38\u200b\u6bd4\u8f83\u200b\u5927\u4e14\u200b\u8f93\u5165\u200b\u56fe\u7247\u200b\u5206\u8fa8\u7387\u200b\u5f88\u200b\u9ad8\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u5bfc\u81f4\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u7684\u200b batch \u200b\u5f88\u5c0f\u200b\uff0c\u200b\u901a\u5e38\u200b\u662f\u200b 2\uff0c\u200b\u8fd9\u4f1a\u200b\u4f7f\u5f97\u200b BatchNorm \u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u8ba1\u7b97\u200b\u7684\u200b\u7edf\u8ba1\u200b\u91cf\u200b\u65b9\u5dee\u200b\u975e\u5e38\u200b\u5927\u200b\uff0c\u200b\u4e0d\u5982\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u9884\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u5f97\u5230\u200b\u7684\u200b\u7edf\u8ba1\u200b\u91cf\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u8bad\u7ec3\u200b\u662f\u200b\u4e00\u822c\u200b\u90fd\u200b\u4f1a\u200b\u4f7f\u7528\u200b <code>norm_eval=True</code> \u200b\u6a21\u5f0f\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b BatchNorm \u200b\u7edf\u8ba1\u200b\u91cf\u200b\uff0c\u200b\u5c11\u6570\u200b\u4f7f\u7528\u200b\u5927\u200b batch \u200b\u7684\u200b\u7b97\u6cd5\u200b\u662f\u200b <code>norm_eval=False</code> \u200b\u6a21\u5f0f\u200b\uff0c\u200b\u4f8b\u5982\u200b NASFPN\u3002\u200b\u5bf9\u4e8e\u200b\u6ca1\u6709\u200b ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b\u9aa8\u67b6\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5982\u679c\u200b batch \u200b\u6bd4\u8f83\u200b\u5c0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b <code>SyncBN</code>\u3002</p>"},{"location":"notes/projects/","title":"\u57fa\u4e8e\u200b MMDetection \u200b\u7684\u200b\u9879\u76ee","text":"<p>\u200b\u6709\u200b\u8bb8\u591a\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u90fd\u200b\u662f\u200b\u57fa\u4e8e\u200b MMDetection \u200b\u642d\u5efa\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5217\u4e3e\u200b\u4e00\u90e8\u5206\u200b\u4f5c\u4e3a\u200b\u6837\u4f8b\u200b\uff0c\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u57fa\u4e8e\u200b MMDetection \u200b\u642d\u5efa\u200b\u60a8\u200b\u81ea\u5df1\u200b\u7684\u200b\u9879\u76ee\u200b\u3002 \u200b\u7531\u4e8e\u200b\u8fd9\u4e2a\u200b\u9875\u9762\u200b\u5217\u4e3e\u200b\u7684\u200b\u9879\u76ee\u200b\u5e76\u200b\u4e0d\u200b\u5b8c\u5168\u200b\uff0c\u200b\u6211\u4eec\u200b\u6b22\u8fce\u200b\u793e\u533a\u200b\u63d0\u4ea4\u200b Pull Request \u200b\u6765\u200b\u66f4\u65b0\u200b\u8fd9\u4e2a\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"notes/projects/#mmdetection_1","title":"MMDetection \u200b\u7684\u200b\u62d3\u5c55\u200b\u9879\u76ee","text":"<p>\u200b\u4e00\u4e9b\u200b\u9879\u76ee\u200b\u62d3\u5c55\u200b\u4e86\u200b MMDetection \u200b\u7684\u200b\u8fb9\u754c\u200b\uff0c\u200b\u5982\u200b\u5c06\u200b MMDetection \u200b\u62d3\u5c55\u200b\u652f\u6301\u200b 3D \u200b\u68c0\u6d4b\u200b\u6216\u8005\u200b\u5c06\u200b MMDetection \u200b\u7528\u4e8e\u200b\u90e8\u7f72\u200b\u3002 \u200b\u5b83\u4eec\u200b\u5c55\u793a\u200b\u4e86\u200b MMDetection \u200b\u7684\u200b\u8bb8\u591a\u200b\u53ef\u80fd\u6027\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u4e5f\u200b\u5217\u4e3e\u200b\u4e00\u4e9b\u200b\u3002</p> <ul> <li>OTEDetection: OpenVINO training extensions for object detection.</li> <li>MMDetection3d: OpenMMLab's next-generation platform for general 3D object detection.</li> </ul>"},{"location":"notes/projects/#_1","title":"\u7814\u7a76\u200b\u9879\u76ee","text":"<p>\u200b\u540c\u6837\u200b\u6709\u200b\u8bb8\u591a\u200b\u7814\u7a76\u200b\u8bba\u6587\u200b\u662f\u200b\u57fa\u4e8e\u200b MMDetection \u200b\u8fdb\u884c\u200b\u7684\u200b\u3002\u200b\u8bb8\u591a\u200b\u8bba\u6587\u200b\u90fd\u200b\u53d1\u8868\u200b\u5728\u200b\u4e86\u200b\u9876\u7ea7\u200b\u7684\u200b\u4f1a\u8bae\u200b\u6216\u200b\u671f\u520a\u200b\u4e0a\u200b\uff0c\u200b\u6216\u8005\u200b\u5bf9\u200b\u793e\u533a\u200b\u4ea7\u751f\u200b\u4e86\u200b\u6df1\u8fdc\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002 \u200b\u4e3a\u4e86\u200b\u5411\u200b\u793e\u533a\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u7684\u200b\u8bba\u6587\u200b\u5217\u8868\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u5927\u5bb6\u200b\u5f00\u53d1\u200b\u6216\u8005\u200b\u6bd4\u8f83\u200b\u65b0\u200b\u7684\u200b\u524d\u6cbf\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u4e5f\u200b\u9075\u5faa\u200b\u4f1a\u8bae\u200b\u7684\u200b\u65f6\u95f4\u200b\u987a\u5e8f\u200b\u5217\u4e3e\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u8bba\u6587\u200b\u3002 MMDetection \u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u652f\u6301\u200b\u7684\u200b\u7b97\u6cd5\u200b\u4e0d\u5728\u6b64\u5217\u200b\u3002</p> <ul> <li>Involution: Inverting the Inherence of Convolution for Visual Recognition, CVPR21. [paper][github]</li> <li>Multiple Instance Active Learning for Object Detection, CVPR 2021. [paper][github]</li> <li>Adaptive Class Suppression Loss for Long-Tail Object Detection, CVPR 2021. [paper][github]</li> <li>Generalizable Pedestrian Detection: The Elephant In The Room, CVPR2021. [paper][github]</li> <li>Group Fisher Pruning for Practical Network Compression, ICML2021. [paper][github]</li> <li>Overcoming Classifier Imbalance for Long-tail Object Detection with Balanced Group Softmax, CVPR2020. [paper][github]</li> <li>Coherent Reconstruction of Multiple Humans from a Single Image, CVPR2020. [paper][github]</li> <li>Look-into-Object: Self-supervised Structure Modeling for Object Recognition, CVPR 2020. [paper][github]</li> <li>Video Panoptic Segmentation, CVPR2020. [paper][github]</li> <li>D2Det: Towards High Quality Object Detection and Instance Segmentation, CVPR2020. [paper][github]</li> <li>CentripetalNet: Pursuing High-quality Keypoint Pairs for Object Detection, CVPR2020. [paper][github]</li> <li>Learning a Unified Sample Weighting Network for Object Detection, CVPR 2020. [paper][github]</li> <li>Scale-equalizing Pyramid Convolution for Object Detection, CVPR2020. [paper] [github]</li> <li>Revisiting the Sibling Head in Object Detector, CVPR2020. [paper][github]</li> <li>PolarMask: Single Shot Instance Segmentation with Polar Representation, CVPR2020. [paper][github]</li> <li>Hit-Detector: Hierarchical Trinity Architecture Search for Object Detection, CVPR2020. [paper][github]</li> <li>ZeroQ: A Novel Zero Shot Quantization Framework, CVPR2020. [paper][github]</li> <li>CBNet: A Novel Composite Backbone Network Architecture for Object Detection, AAAI2020. [paper][github]</li> <li>RDSNet: A New Deep Architecture for Reciprocal Object Detection and Instance Segmentation, AAAI2020. [paper][github]</li> <li>Training-Time-Friendly Network for Real-Time Object Detection, AAAI2020. [paper][github]</li> <li>Cascade RPN: Delving into High-Quality Region Proposal Network with Adaptive Convolution, NeurIPS 2019. [paper][github]</li> <li>Reasoning R-CNN: Unifying Adaptive Global Reasoning into Large-scale Object Detection, CVPR2019. [paper][github]</li> <li>Learning RoI Transformer for Oriented Object Detection in Aerial Images, CVPR2019. [paper][github]</li> <li>SOLO: Segmenting Objects by Locations. [paper][github]</li> <li>SOLOv2: Dynamic, Faster and Stronger. [paper][github]</li> <li>Dense Peppoints: Representing Visual Objects with Dense Point Sets. [paper][github]</li> <li>IterDet: Iterative Scheme for Object Detection in Crowded Environments. [paper][github]</li> <li>Cross-Iteration Batch Normalization. [paper][github]</li> <li>A Ranking-based, Balanced Loss Function Unifying Classification and Localisation in Object Detection, NeurIPS2020 [paper][github]</li> </ul>"},{"location":"user_guides/config/","title":"\u5b66\u4e60\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>MMDetection \u200b\u548c\u200b\u5176\u4ed6\u200b OpenMMLab \u200b\u4ed3\u5e93\u200b\u4f7f\u7528\u200b MMEngine \u200b\u7684\u200b\u914d\u7f6e\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u3002 \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f7f\u7528\u200b\u4e86\u200b\u6a21\u5757\u5316\u200b\u548c\u200b\u7ee7\u627f\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e8e\u200b\u8fdb\u884c\u200b\u5404\u7c7b\u200b\u5b9e\u9a8c\u200b\u3002</p>"},{"location":"user_guides/config/#_2","title":"\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u5185\u5bb9","text":"<p>MMDetection \u200b\u91c7\u7528\u200b\u6a21\u5757\u5316\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u7684\u200b\u6a21\u5757\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u914d\u7f6e\u200b\u3002 \u200b\u4ee5\u200b Mask R-CNN \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7684\u200b\u529f\u80fd\u6a21\u5757\u200b\u4ecb\u7ecd\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5404\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\uff1a</p>"},{"location":"user_guides/config/#_3","title":"\u6a21\u578b\u200b\u914d\u7f6e","text":"<p>\u200b\u5728\u200b mmdetection \u200b\u7684\u200b\u914d\u7f6e\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b <code>model</code> \u200b\u5b57\u6bb5\u200b\u6765\u200b\u914d\u7f6e\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u3002 \u200b\u9664\u4e86\u200b <code>backbone</code>\u3001<code>neck</code> \u200b\u7b49\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7ec4\u4ef6\u200b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b <code>data_preprocessor</code>\u3001<code>train_cfg</code> \u200b\u548c\u200b <code>test_cfg</code>\u3002 <code>data_preprocessor</code> \u200b\u8d1f\u8d23\u200b\u5bf9\u200b dataloader \u200b\u8f93\u51fa\u200b\u7684\u200b\u6bcf\u200b\u4e00\u6279\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u9884\u5904\u7406\u200b\u3002 \u200b\u6a21\u578b\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u7684\u200b <code>train_cfg</code> \u200b\u548c\u200b <code>test_cfg</code> \u200b\u7528\u4e8e\u200b\u8bbe\u7f6e\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u3002</p> <pre><code>model = dict(\n    type='MaskRCNN',  # \u200b\u68c0\u6d4b\u5668\u200b\u540d\u200b\n    data_preprocessor=dict(  # \u200b\u6570\u636e\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u901a\u5e38\u200b\u5305\u62ec\u200b\u56fe\u50cf\u200b\u5f52\u4e00\u5316\u200b\u548c\u200b padding\n        type='DetDataPreprocessor',  # \u200b\u6570\u636e\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53c2\u8003\u200b https://mmdetection.readthedocs.io/en/latest/api.html#mmdet.models.data_preprocessors.DetDataPreprocessor\n        mean=[123.675, 116.28, 103.53],  # \u200b\u7528\u4e8e\u200b\u9884\u200b\u8bad\u7ec3\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u56fe\u50cf\u200b\u5f52\u4e00\u5316\u200b\u901a\u9053\u200b\u5747\u503c\u200b\uff0c\u200b\u6309\u200b R\u3001G\u3001B \u200b\u6392\u5e8f\u200b\n        std=[58.395, 57.12, 57.375],  # \u200b\u7528\u4e8e\u200b\u9884\u200b\u8bad\u7ec3\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u56fe\u50cf\u200b\u5f52\u4e00\u5316\u200b\u901a\u9053\u200b\u6807\u51c6\u5dee\u200b\uff0c\u200b\u6309\u200b R\u3001G\u3001B \u200b\u6392\u5e8f\u200b\n        bgr_to_rgb=True,  # \u200b\u662f\u5426\u200b\u5c06\u200b\u56fe\u7247\u200b\u901a\u9053\u200b\u4ece\u200b BGR \u200b\u8f6c\u4e3a\u200b RGB\n        pad_mask=True,  # \u200b\u662f\u5426\u200b\u586b\u5145\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u63a9\u7801\u200b\n        pad_size_divisor=32),  # padding \u200b\u540e\u200b\u7684\u200b\u56fe\u50cf\u200b\u7684\u200b\u5927\u5c0f\u200b\u5e94\u8be5\u200b\u53ef\u4ee5\u200b\u88ab\u200b ``pad_size_divisor`` \u200b\u6574\u9664\u200b\n    backbone=dict(  # \u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n        type='ResNet',  # \u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c\u200b\u53ef\u7528\u200b\u9009\u9879\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmdetection.readthedocs.io/en/latest/api.html#mmdet.models.backbones.ResNet\n        depth=50,  # \u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b ResNet \u200b\u548c\u200b ResNext \u200b\u901a\u5e38\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b 50 \u200b\u6216\u200b 101\n        num_stages=4,  # \u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u72b6\u6001\u200b(stages)\u200b\u7684\u200b\u6570\u76ee\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u72b6\u6001\u200b\u4ea7\u751f\u200b\u7684\u200b\u7279\u5f81\u200b\u56fe\u200b\u4f5c\u4e3a\u200b\u540e\u7eed\u200b\u7684\u200b head \u200b\u7684\u200b\u8f93\u5165\u200b\n        out_indices=(0, 1, 2, 3),  # \u200b\u6bcf\u4e2a\u200b\u72b6\u6001\u200b\u4ea7\u751f\u200b\u7684\u200b\u7279\u5f81\u200b\u56fe\u200b\u8f93\u51fa\u200b\u7684\u200b\u7d22\u5f15\u200b\n        frozen_stages=1,  # \u200b\u7b2c\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7684\u200b\u6743\u91cd\u200b\u88ab\u200b\u51bb\u7ed3\u200b\n        norm_cfg=dict(  # \u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b(norm layer)\u200b\u7684\u200b\u914d\u7f6e\u200b\u9879\u200b\n            type='BN',  # \u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c\u200b\u901a\u5e38\u200b\u662f\u200b BN \u200b\u6216\u200b GN\n            requires_grad=True),  # \u200b\u662f\u5426\u200b\u8bad\u7ec3\u200b\u5f52\u4e00\u5316\u200b\u91cc\u200b\u7684\u200b gamma \u200b\u548c\u200b beta\n        norm_eval=True,  # \u200b\u662f\u5426\u200b\u51bb\u7ed3\u200b BN \u200b\u91cc\u200b\u7684\u200b\u7edf\u8ba1\u200b\u9879\u200b\n        style='pytorch',  # \u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u98ce\u683c\u200b\uff0c'pytorch' \u200b\u610f\u601d\u200b\u662f\u200b\u6b65\u957f\u200b\u4e3a\u200b2\u200b\u7684\u200b\u5c42\u200b\u4e3a\u200b 3x3 \u200b\u5377\u79ef\u200b\uff0c 'caffe' \u200b\u610f\u601d\u200b\u662f\u200b\u6b65\u957f\u200b\u4e3a\u200b2\u200b\u7684\u200b\u5c42\u200b\u4e3a\u200b 1x1 \u200b\u5377\u79ef\u200b\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),  # \u200b\u52a0\u8f7d\u200b\u901a\u8fc7\u200b ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6a21\u578b\u200b\n    neck=dict(\n        type='FPN',  # \u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b neck \u200b\u662f\u200b FPN\uff0c\u200b\u6211\u4eec\u200b\u540c\u6837\u200b\u652f\u6301\u200b 'NASFPN', 'PAFPN' \u200b\u7b49\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b https://mmdetection.readthedocs.io/en/latest/api.html#mmdet.models.necks.FPN\n        in_channels=[256, 512, 1024, 2048],  # \u200b\u8f93\u5165\u200b\u901a\u9053\u200b\u6570\u200b\uff0c\u200b\u8fd9\u200b\u4e0e\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\u4e00\u81f4\u200b\n        out_channels=256,  # \u200b\u91d1\u5b57\u5854\u200b\u7279\u5f81\u200b\u56fe\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\n        num_outs=5),  # \u200b\u8f93\u51fa\u200b\u7684\u200b\u8303\u56f4\u200b(scales)\n    rpn_head=dict(\n        type='RPNHead',  # rpn_head \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b 'RPNHead', \u200b\u6211\u4eec\u200b\u4e5f\u200b\u652f\u6301\u200b 'GARPNHead' \u200b\u7b49\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b https://mmdetection.readthedocs.io/en/latest/api.html#mmdet.models.dense_heads.RPNHead\n        in_channels=256,  # \u200b\u6bcf\u4e2a\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u8f93\u5165\u200b\u901a\u9053\u200b\uff0c\u200b\u8fd9\u200b\u4e0e\u200b neck \u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\u4e00\u81f4\u200b\n        feat_channels=256,  # head \u200b\u5377\u79ef\u200b\u5c42\u200b\u7684\u200b\u7279\u5f81\u200b\u901a\u9053\u200b\n        anchor_generator=dict(  # \u200b\u951a\u70b9\u200b(Anchor)\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\n            type='AnchorGenerator',  # \u200b\u5927\u591a\u6570\u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b AnchorGenerator \u200b\u4f5c\u4e3a\u200b\u951a\u70b9\u200b\u751f\u6210\u5668\u200b, SSD \u200b\u68c0\u6d4b\u5668\u200b\u4f7f\u7528\u200b `SSDAnchorGenerator`\u3002\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/prior_generators/anchor_generator.py#L18\n            scales=[8],  # \u200b\u951a\u70b9\u200b\u7684\u200b\u57fa\u672c\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u7279\u5f81\u200b\u56fe\u200b\u67d0\u200b\u4e00\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u951a\u70b9\u200b\u9762\u79ef\u200b\u4e3a\u200b scale * base_sizes\n            ratios=[0.5, 1.0, 2.0],  # \u200b\u9ad8\u5ea6\u200b\u548c\u200b\u5bbd\u5ea6\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6bd4\u7387\u200b\n            strides=[4, 8, 16, 32, 64]),  # \u200b\u951a\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u6b65\u5e45\u200b\u3002\u200b\u8fd9\u200b\u4e0e\u200b FPN \u200b\u7279\u5f81\u200b\u6b65\u5e45\u200b\u4e00\u81f4\u200b\u3002 \u200b\u5982\u679c\u200b\u672a\u200b\u8bbe\u7f6e\u200b base_sizes\uff0c\u200b\u5219\u200b\u5f53\u524d\u200b\u6b65\u5e45\u200b\u503c\u200b\u5c06\u200b\u88ab\u200b\u89c6\u4e3a\u200b base_sizes\n        bbox_coder=dict(  # \u200b\u5728\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u671f\u95f4\u200b\u5bf9\u6846\u200b\u8fdb\u884c\u200b\u7f16\u7801\u200b\u548c\u200b\u89e3\u7801\u200b\n            type='DeltaXYWHBBoxCoder',  # \u200b\u6846\u200b\u7f16\u7801\u5668\u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c'DeltaXYWHBBoxCoder' \u200b\u662f\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/coders/delta_xywh_bbox_coder.py#L13\n            target_means=[0.0, 0.0, 0.0, 0.0],  # \u200b\u7528\u4e8e\u200b\u7f16\u7801\u200b\u548c\u200b\u89e3\u7801\u200b\u6846\u200b\u7684\u200b\u76ee\u6807\u200b\u5747\u503c\u200b\n            target_stds=[1.0, 1.0, 1.0, 1.0]),  # \u200b\u7528\u4e8e\u200b\u7f16\u7801\u200b\u548c\u200b\u89e3\u7801\u200b\u6846\u200b\u7684\u200b\u6807\u51c6\u5dee\u200b\n        loss_cls=dict(  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u914d\u7f6e\u200b\n            type='CrossEntropyLoss',  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u652f\u6301\u200b FocalLoss \u200b\u7b49\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/losses/cross_entropy_loss.py#L201\n            use_sigmoid=True,  # RPN \u200b\u901a\u5e38\u200b\u8fdb\u884c\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b sigmoid \u200b\u51fd\u6570\u200b\n            los_weight=1.0),  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\n        loss_bbox=dict(  # \u200b\u56de\u5f52\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u914d\u7f6e\u200b\n            type='L1Loss',  # \u200b\u635f\u5931\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u652f\u6301\u200b\u8bb8\u591a\u200b IoU Losses \u200b\u548c\u200b Smooth L1-loss \u200b\u7b49\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/losses/smooth_l1_loss.py#L56\n            loss_weight=1.0)),  # \u200b\u56de\u5f52\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\n    roi_head=dict(  # RoIHead \u200b\u5c01\u88c5\u200b\u4e86\u200b\u4e24\u6b65\u200b(two-stage)/\u200b\u7ea7\u8054\u200b(cascade)\u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b\u7b2c\u4e8c\u6b65\u200b\n        type='StandardRoIHead',  # RoI head \u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/roi_heads/standard_roi_head.py#L17\n        bbox_roi_extractor=dict(  # \u200b\u7528\u4e8e\u200b bbox \u200b\u56de\u5f52\u200b\u7684\u200b RoI \u200b\u7279\u5f81\u63d0\u53d6\u200b\u5668\u200b\n            type='SingleRoIExtractor',  # RoI \u200b\u7279\u5f81\u63d0\u53d6\u200b\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5927\u591a\u6570\u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b SingleRoIExtractor\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/roi_heads/roi_extractors/single_level_roi_extractor.py#L13\n            roi_layer=dict(  # RoI \u200b\u5c42\u200b\u7684\u200b\u914d\u7f6e\u200b\n                type='RoIAlign',  # RoI \u200b\u5c42\u200b\u7684\u200b\u7c7b\u522b\u200b, \u200b\u4e5f\u200b\u652f\u6301\u200b DeformRoIPoolingPack \u200b\u548c\u200b ModulatedDeformRoIPoolingPack\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmcv.readthedocs.io/en/latest/api.html#mmcv.ops.RoIAlign\n                output_size=7,  # \u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u8f93\u51fa\u200b\u5927\u5c0f\u200b\n                sampling_ratio=0),  # \u200b\u63d0\u53d6\u200b RoI \u200b\u7279\u5f81\u200b\u65f6\u200b\u7684\u200b\u91c7\u6837\u7387\u200b\u30020 \u200b\u8868\u793a\u200b\u81ea\u200b\u9002\u5e94\u200b\u6bd4\u7387\u200b\n            out_channels=256,  # \u200b\u63d0\u53d6\u200b\u7279\u5f81\u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\n            featmap_strides=[4, 8, 16, 32]),  # \u200b\u591a\u200b\u5c3a\u5ea6\u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u6b65\u5e45\u200b\uff0c\u200b\u5e94\u8be5\u200b\u4e0e\u200b\u4e3b\u5e72\u200b\u7684\u200b\u67b6\u6784\u200b\u4fdd\u6301\u4e00\u81f4\u200b\n        bbox_head=dict(  # RoIHead \u200b\u4e2d\u200b box head \u200b\u7684\u200b\u914d\u7f6e\u200b\n            type='Shared2FCBBoxHead',  # bbox head \u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/roi_heads/bbox_heads/convfc_bbox_head.py#L220\n            in_channels=256,  # bbox head \u200b\u7684\u200b\u8f93\u5165\u200b\u901a\u9053\u200b\u3002 \u200b\u8fd9\u200b\u4e0e\u200b roi_extractor \u200b\u4e2d\u200b\u7684\u200b out_channels \u200b\u4e00\u81f4\u200b\n            fc_out_channels=1024,  # FC \u200b\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u7279\u5f81\u200b\u901a\u9053\u200b\n            roi_feat_size=7,  # \u200b\u5019\u9009\u200b\u533a\u57df\u200b(Region of Interest)\u200b\u7279\u5f81\u200b\u7684\u200b\u5927\u5c0f\u200b\n            num_classes=80,  # \u200b\u5206\u7c7b\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u91cf\u200b\n            bbox_coder=dict(  # \u200b\u7b2c\u4e8c\u9636\u6bb5\u200b\u4f7f\u7528\u200b\u7684\u200b\u6846\u200b\u7f16\u7801\u5668\u200b\n                type='DeltaXYWHBBoxCoder',  # \u200b\u6846\u200b\u7f16\u7801\u5668\u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c\u200b\u5927\u591a\u6570\u200b\u60c5\u51b5\u200b\u4f7f\u7528\u200b 'DeltaXYWHBBoxCoder'\n                target_means=[0.0, 0.0, 0.0, 0.0],  # \u200b\u7528\u4e8e\u200b\u7f16\u7801\u200b\u548c\u200b\u89e3\u7801\u200b\u6846\u200b\u7684\u200b\u5747\u503c\u200b\n                target_stds=[0.1, 0.1, 0.2, 0.2]),  # \u200b\u7f16\u7801\u200b\u548c\u200b\u89e3\u7801\u200b\u7684\u200b\u6807\u51c6\u5dee\u200b\u3002\u200b\u56e0\u4e3a\u200b\u6846\u200b\u66f4\u200b\u51c6\u786e\u200b\uff0c\u200b\u6240\u4ee5\u200b\u503c\u200b\u66f4\u200b\u5c0f\u200b\uff0c\u200b\u5e38\u89c4\u200b\u8bbe\u7f6e\u200b\u65f6\u200b [0.1, 0.1, 0.2, 0.2]\u3002\n            reg_class_agnostic=False,  # \u200b\u56de\u5f52\u200b\u662f\u5426\u200b\u4e0e\u200b\u7c7b\u522b\u200b\u65e0\u5173\u200b\n            loss_cls=dict(  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u914d\u200b\n                type='CrossEntropyLoss',  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u652f\u6301\u200b FocalLoss \u200b\u7b49\u200b\n                use_sigmoid=False,  # \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b sigmoid\n                loss_weight=1.0),  # \u200b\u5206\u7c7b\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\n            loss_bbox=dict(  # \u200b\u56de\u5f52\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u914d\u7f6e\u200b\n                type='L1Loss',  # \u200b\u635f\u5931\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u652f\u6301\u200b\u8bb8\u591a\u200b IoU Losses \u200b\u548c\u200b Smooth L1-loss \u200b\u7b49\u200b\n                loss_weight=1.0)),  # \u200b\u56de\u5f52\u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\n        mask_roi_extractor=dict(  # \u200b\u7528\u4e8e\u200b mask \u200b\u751f\u6210\u200b\u7684\u200b RoI \u200b\u7279\u5f81\u63d0\u53d6\u200b\u5668\u200b\n            type='SingleRoIExtractor',  # RoI \u200b\u7279\u5f81\u63d0\u53d6\u200b\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5927\u591a\u6570\u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b SingleRoIExtractor\n            roi_layer=dict(  # \u200b\u63d0\u53d6\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u7279\u5f81\u200b\u7684\u200b RoI \u200b\u5c42\u200b\u914d\u7f6e\u200b\n                type='RoIAlign',  # RoI \u200b\u5c42\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e5f\u200b\u652f\u6301\u200b DeformRoIPoolingPack \u200b\u548c\u200b ModulatedDeformRoIPoolingPack\n                output_size=14,  # \u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u8f93\u51fa\u200b\u5927\u5c0f\u200b\n                sampling_ratio=0),  # \u200b\u63d0\u53d6\u200b RoI \u200b\u7279\u5f81\u200b\u65f6\u200b\u7684\u200b\u91c7\u6837\u7387\u200b\n            out_channels=256,  # \u200b\u63d0\u53d6\u200b\u7279\u5f81\u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\n            featmap_strides=[4, 8, 16, 32]),  # \u200b\u591a\u200b\u5c3a\u5ea6\u200b\u7279\u5f81\u200b\u56fe\u200b\u7684\u200b\u6b65\u5e45\u200b\n        mask_head=dict(  # mask \u200b\u9884\u6d4b\u200b head \u200b\u6a21\u578b\u200b\n            type='FCNMaskHead',  # mask head \u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmdetection.readthedocs.io/en/latest/api.html#mmdet.models.roi_heads.FCNMaskHead\n            num_convs=4,  # mask head \u200b\u4e2d\u200b\u7684\u200b\u5377\u79ef\u200b\u5c42\u6570\u200b\n            in_channels=256,  # \u200b\u8f93\u5165\u200b\u901a\u9053\u200b\uff0c\u200b\u5e94\u200b\u4e0e\u200b mask roi extractor \u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\u4e00\u81f4\u200b\n            conv_out_channels=256,  # \u200b\u5377\u79ef\u200b\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u901a\u9053\u200b\n            num_classes=80,  # \u200b\u8981\u200b\u5206\u5272\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u200b\n            loss_mask=dict(  # mask \u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u914d\u7f6e\u200b\n                type='CrossEntropyLoss',  # \u200b\u7528\u4e8e\u200b\u5206\u5272\u200b\u7684\u200b\u635f\u5931\u200b\u7c7b\u578b\u200b\n                use_mask=True,  # \u200b\u662f\u5426\u200b\u53ea\u200b\u5728\u200b\u6b63\u786e\u200b\u7684\u200b\u7c7b\u200b\u4e2d\u200b\u8bad\u7ec3\u200b mask\n                loss_weight=1.0))),  # mask \u200b\u5206\u652f\u200b\u7684\u200b\u635f\u5931\u200b\u6743\u91cd\u200b\n    train_cfg = dict(  # rpn \u200b\u548c\u200b rcnn \u200b\u8bad\u7ec3\u200b\u8d85\u200b\u53c2\u6570\u200b\u7684\u200b\u914d\u7f6e\u200b\n        rpn=dict(  # rpn \u200b\u7684\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\n            assigner=dict(  # \u200b\u5206\u914d\u5668\u200b(assigner)\u200b\u7684\u200b\u914d\u7f6e\u200b\n                type='MaxIoUAssigner',  # \u200b\u5206\u914d\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0cMaxIoUAssigner \u200b\u7528\u4e8e\u200b\u8bb8\u591a\u200b\u5e38\u89c1\u200b\u7684\u200b\u68c0\u6d4b\u5668\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/assigners/max_iou_assigner.py#L14\n                pos_iou_thr=0.7,  # IoU &gt;= 0.7(\u200b\u9608\u503c\u200b) \u200b\u88ab\u200b\u89c6\u4e3a\u200b\u6b63\u200b\u6837\u672c\u200b\n                neg_iou_thr=0.3,  # IoU &lt; 0.3(\u200b\u9608\u503c\u200b) \u200b\u88ab\u200b\u89c6\u4e3a\u200b\u8d1f\u200b\u6837\u672c\u200b\n                min_pos_iou=0.3,  # \u200b\u5c06\u200b\u6846\u200b\u4f5c\u4e3a\u200b\u6b63\u200b\u6837\u672c\u200b\u7684\u200b\u6700\u5c0f\u200b IoU \u200b\u9608\u503c\u200b\n                match_low_quality=True,  # \u200b\u662f\u5426\u200b\u5339\u914d\u200b\u4f4e\u8d28\u91cf\u200b\u7684\u200b\u6846\u200b(\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u89c1\u200b API \u200b\u6587\u6863\u200b)\n                ignore_iof_thr=-1),  # \u200b\u5ffd\u7565\u200b bbox \u200b\u7684\u200b IoF \u200b\u9608\u503c\u200b\n            sampler=dict(  # \u200b\u6b63\u200b/\u200b\u8d1f\u200b\u91c7\u6837\u5668\u200b(sampler)\u200b\u7684\u200b\u914d\u7f6e\u200b\n                type='RandomSampler',  # \u200b\u91c7\u6837\u5668\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd8\u200b\u652f\u6301\u200b PseudoSampler \u200b\u548c\u200b\u5176\u4ed6\u200b\u91c7\u6837\u5668\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/samplers/random_sampler.py#L14\n                num=256,  # \u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u3002\n                pos_fraction=0.5,  # \u200b\u6b63\u200b\u6837\u672c\u200b\u5360\u200b\u603b\u200b\u6837\u672c\u200b\u7684\u200b\u6bd4\u4f8b\u200b\n                neg_pos_ub=-1,  # \u200b\u57fa\u4e8e\u200b\u6b63\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u7684\u200b\u8d1f\u200b\u6837\u672c\u200b\u4e0a\u9650\u200b\n                add_gt_as_proposals=False),  # \u200b\u91c7\u6837\u200b\u540e\u200b\u662f\u5426\u200b\u6dfb\u52a0\u200b GT \u200b\u4f5c\u4e3a\u200b proposal\n            allowed_border=-1,  # \u200b\u586b\u5145\u200b\u6709\u6548\u200b\u951a\u70b9\u200b\u540e\u200b\u5141\u8bb8\u200b\u7684\u200b\u8fb9\u6846\u200b\n            pos_weight=-1,  # \u200b\u8bad\u7ec3\u200b\u671f\u95f4\u200b\u6b63\u200b\u6837\u672c\u200b\u7684\u200b\u6743\u91cd\u200b\n            debug=False),  # \u200b\u662f\u5426\u200b\u8bbe\u7f6e\u200b\u8c03\u8bd5\u200b(debug)\u200b\u6a21\u5f0f\u200b\n        rpn_proposal=dict(  # \u200b\u5728\u200b\u8bad\u7ec3\u200b\u671f\u95f4\u200b\u751f\u6210\u200b proposals \u200b\u7684\u200b\u914d\u7f6e\u200b\n            nms_across_levels=False,  # \u200b\u662f\u5426\u200b\u5bf9\u200b\u8de8\u5c42\u200b\u7684\u200b box \u200b\u505a\u200b NMS\u3002\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b `GARPNHead` \uff0cnaive rpn \u200b\u4e0d\u200b\u652f\u6301\u200b nms cross levels\n            nms_pre=2000,  # NMS \u200b\u524d\u200b\u7684\u200b box \u200b\u6570\u200b\n            nms_post=1000,  # NMS \u200b\u8981\u200b\u4fdd\u7559\u200b\u7684\u200b box \u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b GARPNHHead \u200b\u4e2d\u8d77\u200b\u4f5c\u7528\u200b\n            max_per_img=1000,  # NMS \u200b\u540e\u8981\u200b\u4fdd\u7559\u200b\u7684\u200b box \u200b\u6570\u91cf\u200b\n            nms=dict( # NMS \u200b\u7684\u200b\u914d\u7f6e\u200b\n                type='nms',  # NMS \u200b\u7684\u200b\u7c7b\u522b\u200b\n                iou_threshold=0.7 # NMS \u200b\u7684\u200b\u9608\u503c\u200b\n                ),\n            min_bbox_size=0),  # \u200b\u5141\u8bb8\u200b\u7684\u200b\u6700\u5c0f\u200b box \u200b\u5c3a\u5bf8\u200b\n        rcnn=dict(  # roi head \u200b\u7684\u200b\u914d\u7f6e\u200b\u3002\n            assigner=dict(  # \u200b\u7b2c\u4e8c\u9636\u6bb5\u200b\u5206\u914d\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u8fd9\u200b\u4e0e\u200b rpn \u200b\u4e2d\u200b\u7684\u200b\u4e0d\u540c\u200b\n                type='MaxIoUAssigner',  # \u200b\u5206\u914d\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0cMaxIoUAssigner \u200b\u76ee\u524d\u200b\u7528\u4e8e\u200b\u6240\u6709\u200b roi_heads\u3002\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/assigners/max_iou_assigner.py#L14\n                pos_iou_thr=0.5,  # IoU &gt;= 0.5(\u200b\u9608\u503c\u200b)\u200b\u88ab\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u6b63\u200b\u6837\u672c\u200b\n                neg_iou_thr=0.5,  # IoU &lt; 0.5(\u200b\u9608\u503c\u200b)\u200b\u88ab\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u8d1f\u200b\u6837\u672c\u200b\n                min_pos_iou=0.5,  # \u200b\u5c06\u200b box \u200b\u4f5c\u4e3a\u200b\u6b63\u200b\u6837\u672c\u200b\u7684\u200b\u6700\u5c0f\u200b IoU \u200b\u9608\u503c\u200b\n                match_low_quality=False,  # \u200b\u662f\u5426\u200b\u5339\u914d\u200b\u4f4e\u8d28\u91cf\u200b\u4e0b\u200b\u7684\u200b box(\u200b\u6709\u5173\u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b API \u200b\u6587\u6863\u200b)\n                ignore_iof_thr=-1),  # \u200b\u5ffd\u7565\u200b bbox \u200b\u7684\u200b IoF \u200b\u9608\u503c\u200b\n            sampler=dict(\n                type='RandomSampler',  # \u200b\u91c7\u6837\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd8\u200b\u652f\u6301\u200b PseudoSampler \u200b\u548c\u200b\u5176\u4ed6\u200b\u91c7\u6837\u5668\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmdetection/blob/main/mmdet/models/task_modules/samplers/random_sampler.py#L14\n                num=512,  # \u200b\u6837\u672c\u200b\u6570\u91cf\u200b\n                pos_fraction=0.25,  # \u200b\u6b63\u200b\u6837\u672c\u200b\u5360\u200b\u603b\u200b\u6837\u672c\u200b\u7684\u200b\u6bd4\u4f8b\u200b\n                neg_pos_ub=-1,  # \u200b\u57fa\u4e8e\u200b\u6b63\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u7684\u200b\u8d1f\u200b\u6837\u672c\u200b\u4e0a\u9650\u200b\n                add_gt_as_proposals=True\n            ),  # \u200b\u91c7\u6837\u200b\u540e\u200b\u662f\u5426\u200b\u6dfb\u52a0\u200b GT \u200b\u4f5c\u4e3a\u200b proposal\n            mask_size=28,  # mask \u200b\u7684\u200b\u5927\u5c0f\u200b\n            pos_weight=-1,  # \u200b\u8bad\u7ec3\u200b\u671f\u95f4\u200b\u6b63\u200b\u6837\u672c\u200b\u7684\u200b\u6743\u91cd\u200b\n            debug=False)),  # \u200b\u662f\u5426\u200b\u8bbe\u7f6e\u200b\u8c03\u8bd5\u6a21\u5f0f\u200b\n    test_cfg = dict(  # \u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b rpn \u200b\u548c\u200b rcnn \u200b\u8d85\u200b\u53c2\u6570\u200b\u7684\u200b\u914d\u7f6e\u200b\n        rpn=dict(  # \u200b\u6d4b\u8bd5\u9636\u6bb5\u200b\u751f\u6210\u200b proposals \u200b\u7684\u200b\u914d\u7f6e\u200b\n            nms_across_levels=False,  # \u200b\u662f\u5426\u200b\u5bf9\u200b\u8de8\u5c42\u200b\u7684\u200b box \u200b\u505a\u200b NMS\u3002\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b `GARPNHead`\uff0cnaive rpn \u200b\u4e0d\u200b\u652f\u6301\u200b\u505a\u200b NMS cross levels\n            nms_pre=1000,  # NMS \u200b\u524d\u200b\u7684\u200b box \u200b\u6570\u200b\n            nms_post=1000,  # NMS \u200b\u8981\u200b\u4fdd\u7559\u200b\u7684\u200b box \u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b `GARPNHHead` \u200b\u4e2d\u8d77\u200b\u4f5c\u7528\u200b\n            max_per_img=1000,  # NMS \u200b\u540e\u8981\u200b\u4fdd\u7559\u200b\u7684\u200b box \u200b\u6570\u91cf\u200b\n            nms=dict( # NMS \u200b\u7684\u200b\u914d\u7f6e\u200b\n                type='nms',  # NMS \u200b\u7684\u200b\u7c7b\u578b\u200b\n                iou_threshold=0.7 # NMS \u200b\u9608\u503c\u200b\n                ),\n            min_bbox_size=0),  # box \u200b\u5141\u8bb8\u200b\u7684\u200b\u6700\u5c0f\u200b\u5c3a\u5bf8\u200b\n        rcnn=dict(  # roi heads \u200b\u7684\u200b\u914d\u7f6e\u200b\n            score_thr=0.05,  # bbox \u200b\u7684\u200b\u5206\u6570\u200b\u9608\u503c\u200b\n            nms=dict(  # \u200b\u7b2c\u4e8c\u6b65\u200b\u7684\u200b NMS \u200b\u914d\u7f6e\u200b\n                type='nms',  # NMS \u200b\u7684\u200b\u7c7b\u578b\u200b\n                iou_thr=0.5),  # NMS \u200b\u7684\u200b\u9608\u503c\u200b\n            max_per_img=100,  # \u200b\u6bcf\u5f20\u200b\u56fe\u50cf\u200b\u7684\u200b\u6700\u5927\u200b\u68c0\u6d4b\u200b\u6b21\u6570\u200b\n            mask_thr_binary=0.5)))  # mask \u200b\u9884\u5904\u200b\u7684\u200b\u9608\u503c\u200b\n</code></pre>"},{"location":"user_guides/config/#_4","title":"\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u8bc4\u6d4b\u200b\u5668\u200b\u914d\u7f6e","text":"<p>\u200b\u5728\u200b\u4f7f\u7528\u200b\u6267\u884c\u5668\u200b \u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\u3001\u200b\u6d4b\u8bd5\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u914d\u7f6e\u200b Dataloader\u3002\u200b\u6784\u5efa\u200b\u6570\u636e\u200b dataloader \u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\uff08dataset\uff09\u200b\u548c\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\uff08data pipeline\uff09\u3002 \u200b\u7531\u4e8e\u200b\u8fd9\u90e8\u5206\u200b\u7684\u200b\u914d\u7f6e\u200b\u8f83\u4e3a\u200b\u590d\u6742\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e2d\u95f4\u200b\u53d8\u91cf\u200b\u6765\u200b\u7b80\u5316\u200b dataloader \u200b\u914d\u7f6e\u200b\u7684\u200b\u7f16\u5199\u200b\u3002</p> <pre><code>dataset_type = 'CocoDataset'  # \u200b\u6570\u636e\u200b\u96c6\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u200b\u5c06\u200b\u88ab\u200b\u7528\u6765\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b\u3002\ndata_root = 'data/coco/'  # \u200b\u6570\u636e\u200b\u7684\u200b\u6839\u200b\u8def\u5f84\u200b\u3002\n\ntrain_pipeline = [  # \u200b\u8bad\u7ec3\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\n    dict(type='LoadImageFromFile'),  # \u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u4ece\u6587\u4ef6\u200b\u8def\u5f84\u200b\u91cc\u200b\u52a0\u8f7d\u200b\u56fe\u50cf\u200b\u3002\n    dict(\n        type='LoadAnnotations',  # \u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5f53\u524d\u200b\u56fe\u50cf\u200b\uff0c\u200b\u52a0\u8f7d\u200b\u5b83\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u3002\n        with_bbox=True,  # \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b\u6807\u6ce8\u200b\u6846\u200b(bounding box)\uff0c \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b True\u3002\n        with_mask=True,  # \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b instance mask\uff0c\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b True\u3002\n        poly2mask=False),  # \u200b\u662f\u5426\u200b\u5c06\u200b polygon mask \u200b\u8f6c\u5316\u200b\u4e3a\u200b instance mask, \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b False \u200b\u4ee5\u200b\u52a0\u901f\u200b\u548c\u200b\u8282\u7701\u200b\u5185\u5b58\u200b\u3002\n    dict(\n        type='Resize',  # \u200b\u53d8\u5316\u200b\u56fe\u50cf\u200b\u548c\u200b\u5176\u200b\u6807\u6ce8\u200b\u5927\u5c0f\u200b\u7684\u200b\u6d41\u7a0b\u200b\u3002\n        scale=(1333, 800),  # \u200b\u56fe\u50cf\u200b\u7684\u200b\u6700\u5927\u200b\u5c3a\u5bf8\u200b\n        keep_ratio=True  # \u200b\u662f\u5426\u200b\u4fdd\u6301\u200b\u56fe\u50cf\u200b\u7684\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u3002\n        ),\n    dict(\n        type='RandomFlip',  # \u200b\u7ffb\u8f6c\u200b\u56fe\u50cf\u200b\u548c\u200b\u5176\u200b\u6807\u6ce8\u200b\u7684\u200b\u6570\u636e\u200b\u589e\u5e7f\u200b\u6d41\u7a0b\u200b\u3002\n        prob=0.5),  # \u200b\u7ffb\u8f6c\u200b\u56fe\u50cf\u200b\u7684\u200b\u6982\u7387\u200b\u3002\n    dict(type='PackDetInputs')  # \u200b\u5c06\u200b\u6570\u636e\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u68c0\u6d4b\u5668\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\u7684\u200b\u6d41\u7a0b\u200b\n]\ntest_pipeline = [  # \u200b\u6d4b\u8bd5\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\n    dict(type='LoadImageFromFile'),  # \u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u4ece\u6587\u4ef6\u200b\u8def\u5f84\u200b\u91cc\u200b\u52a0\u8f7d\u200b\u56fe\u50cf\u200b\u3002\n    dict(type='Resize', scale=(1333, 800), keep_ratio=True),  # \u200b\u53d8\u5316\u200b\u56fe\u50cf\u200b\u5927\u5c0f\u200b\u7684\u200b\u6d41\u7a0b\u200b\u3002\n    dict(\n        type='PackDetInputs',  # \u200b\u5c06\u200b\u6570\u636e\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u68c0\u6d4b\u5668\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\u7684\u200b\u6d41\u7a0b\u200b\n        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',\n                   'scale_factor'))\n]\ntrain_dataloader = dict(  # \u200b\u8bad\u7ec3\u200b dataloader \u200b\u914d\u7f6e\u200b\n    batch_size=2,  # \u200b\u5355\u4e2a\u200b GPU \u200b\u7684\u200b batch size\n    num_workers=2,  # \u200b\u5355\u4e2a\u200b GPU \u200b\u5206\u914d\u200b\u7684\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u7ebf\u7a0b\u200b\u6570\u200b\n    persistent_workers=True,  # \u200b\u5982\u679c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b True\uff0cdataloader \u200b\u5728\u200b\u8fed\u4ee3\u200b\u5b8c\u200b\u4e00\u8f6e\u200b\u4e4b\u540e\u200b\u4e0d\u4f1a\u200b\u5173\u95ed\u200b\u6570\u636e\u200b\u8bfb\u53d6\u200b\u7684\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\n    sampler=dict(  # \u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u7684\u200b\u91c7\u6837\u5668\u200b\n        type='DefaultSampler',  # \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u91c7\u6837\u5668\u200b\uff0c\u200b\u540c\u65f6\u200b\u652f\u6301\u200b\u5206\u5e03\u5f0f\u200b\u548c\u200b\u975e\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmengine.readthedocs.io/zh_CN/latest/api/generated/mmengine.dataset.DefaultSampler.html#mmengine.dataset.DefaultSampler\n        shuffle=True),  # \u200b\u968f\u673a\u200b\u6253\u4e71\u200b\u6bcf\u4e2a\u200b\u8f6e\u6b21\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u7684\u200b\u987a\u5e8f\u200b\n    batch_sampler=dict(type='AspectRatioBatchSampler'),  # \u200b\u6279\u200b\u6570\u636e\u200b\u91c7\u6837\u5668\u200b\uff0c\u200b\u7528\u4e8e\u200b\u786e\u4fdd\u200b\u6bcf\u4e00\u200b\u6279\u6b21\u200b\u5185\u200b\u7684\u200b\u6570\u636e\u200b\u62e5\u6709\u200b\u76f8\u4f3c\u200b\u7684\u200b\u957f\u5bbd\u200b\u6bd4\u200b\uff0c\u200b\u53ef\u200b\u7528\u4e8e\u200b\u8282\u7701\u200b\u663e\u5b58\u200b\n    dataset=dict(  # \u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\n        type=dataset_type,\n        data_root=data_root,\n        ann_file='annotations/instances_train2017.json',  # \u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\n        data_prefix=dict(img='train2017/'),  # \u200b\u56fe\u7247\u200b\u8def\u5f84\u200b\u524d\u7f00\u200b\n        filter_cfg=dict(filter_empty_gt=True, min_size=32),  # \u200b\u56fe\u7247\u200b\u548c\u200b\u6807\u6ce8\u200b\u7684\u200b\u8fc7\u6ee4\u200b\u914d\u7f6e\u200b\n        pipeline=train_pipeline))  # \u200b\u8fd9\u200b\u662f\u200b\u7531\u200b\u4e4b\u524d\u200b\u521b\u5efa\u200b\u7684\u200b train_pipeline \u200b\u5b9a\u4e49\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\u6d41\u7a0b\u200b\u3002\nval_dataloader = dict(  # \u200b\u9a8c\u8bc1\u200b dataloader \u200b\u914d\u7f6e\u200b\n    batch_size=1,  # \u200b\u5355\u4e2a\u200b GPU \u200b\u7684\u200b Batch size\u3002\u200b\u5982\u679c\u200b batch-szie &gt; 1\uff0c\u200b\u7ec4\u6210\u200b batch \u200b\u65f6\u200b\u7684\u200b\u989d\u5916\u200b\u586b\u5145\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\u7cbe\u5ea6\u200b\n    num_workers=2,  # \u200b\u5355\u4e2a\u200b GPU \u200b\u5206\u914d\u200b\u7684\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u7ebf\u7a0b\u200b\u6570\u200b\n    persistent_workers=True,  # \u200b\u5982\u679c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b True\uff0cdataloader \u200b\u5728\u200b\u8fed\u4ee3\u200b\u5b8c\u200b\u4e00\u8f6e\u200b\u4e4b\u540e\u200b\u4e0d\u4f1a\u200b\u5173\u95ed\u200b\u6570\u636e\u200b\u8bfb\u53d6\u200b\u7684\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\n    drop_last=False,  # \u200b\u662f\u5426\u200b\u4e22\u5f03\u200b\u6700\u540e\u200b\u672a\u80fd\u200b\u7ec4\u6210\u200b\u4e00\u4e2a\u200b\u6279\u6b21\u200b\u7684\u200b\u6570\u636e\u200b\n    sampler=dict(\n        type='DefaultSampler',\n        shuffle=False),  # \u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u4e0d\u200b\u6253\u4e71\u200b\u6570\u636e\u200b\u987a\u5e8f\u200b\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        ann_file='annotations/instances_val2017.json',\n        data_prefix=dict(img='val2017/'),\n        test_mode=True,  # \u200b\u5f00\u542f\u200b\u6d4b\u8bd5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u907f\u514d\u200b\u6570\u636e\u200b\u96c6\u200b\u8fc7\u6ee4\u200b\u56fe\u7247\u200b\u548c\u200b\u6807\u6ce8\u200b\n        pipeline=test_pipeline))\ntest_dataloader = val_dataloader  # \u200b\u6d4b\u8bd5\u200b dataloader \u200b\u914d\u7f6e\u200b\n</code></pre> <p>\u200b\u8bc4\u6d4b\u200b\u5668\u200b \u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u6307\u6807\u200b\u3002\u200b\u8bc4\u6d4b\u200b\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\u7531\u200b\u4e00\u4e2a\u200b\u6216\u200b\u4e00\u7ec4\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff08Metric\uff09\u200b\u914d\u7f6e\u200b\u7ec4\u6210\u200b\uff1a</p> <pre><code>val_evaluator = dict(  # \u200b\u9a8c\u8bc1\u200b\u8fc7\u7a0b\u200b\u4f7f\u7528\u200b\u7684\u200b\u8bc4\u6d4b\u200b\u5668\u200b\n    type='CocoMetric',  # \u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u68c0\u6d4b\u200b\u548c\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u7684\u200b AR\u3001AP \u200b\u548c\u200b mAP \u200b\u7684\u200b coco \u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\n    ann_file=data_root + 'annotations/instances_val2017.json',  # \u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\n    metric=['bbox', 'segm'],  # \u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff0c`bbox` \u200b\u7528\u4e8e\u200b\u68c0\u6d4b\u200b\uff0c`segm` \u200b\u7528\u4e8e\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\n    format_only=False)\ntest_evaluator = val_evaluator  # \u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u4f7f\u7528\u200b\u7684\u200b\u8bc4\u6d4b\u200b\u5668\u200b\n</code></pre> <p>\u200b\u7531\u4e8e\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u200b\u6ca1\u6709\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\uff0c\u200b\u56e0\u6b64\u200b MMDetection \u200b\u4e2d\u200b\u7684\u200b test_dataloader \u200b\u548c\u200b test_evaluator \u200b\u914d\u7f6e\u200b\u901a\u5e38\u200b\u7b49\u4e8e\u200bval\u3002 \u200b\u5982\u679c\u200b\u8981\u200b\u4fdd\u5b58\u200b\u5728\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u8fd9\u6837\u200b\u7f16\u5199\u200b\u914d\u7f6e\u200b\uff1a</p> <pre><code># \u200b\u5728\u200b\u6d4b\u8bd5\u200b\u96c6\u4e0a\u200b\u63a8\u7406\u200b\uff0c\n# \u200b\u5e76\u200b\u5c06\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u8f6c\u6362\u200b\u683c\u5f0f\u200b\u4ee5\u200b\u7528\u4e8e\u200b\u63d0\u4ea4\u200b\u7ed3\u679c\u200b\ntest_dataloader = dict(\n    batch_size=1,\n    num_workers=2,\n    persistent_workers=True,\n    drop_last=False,\n    sampler=dict(type='DefaultSampler', shuffle=False),\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        ann_file=data_root + 'annotations/image_info_test-dev2017.json',\n        data_prefix=dict(img='test2017/'),\n        test_mode=True,\n        pipeline=test_pipeline))\ntest_evaluator = dict(\n    type='CocoMetric',\n    ann_file=data_root + 'annotations/image_info_test-dev2017.json',\n    metric=['bbox', 'segm'],\n    format_only=True,  # \u200b\u53ea\u200b\u5c06\u200b\u6a21\u578b\u200b\u8f93\u51fa\u200b\u8f6c\u6362\u200b\u4e3a\u200b coco \u200b\u7684\u200b JSON \u200b\u683c\u5f0f\u200b\u5e76\u200b\u4fdd\u5b58\u200b\n    outfile_prefix='./work_dirs/coco_detection/test')  # \u200b\u8981\u200b\u4fdd\u5b58\u200b\u7684\u200b JSON \u200b\u6587\u4ef6\u200b\u7684\u200b\u524d\u7f00\u200b\n</code></pre>"},{"location":"user_guides/config/#_5","title":"\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u914d\u7f6e","text":"<p>MMEngine \u200b\u7684\u200b Runner \u200b\u4f7f\u7528\u200b Loop \u200b\u6765\u200b\u63a7\u5236\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u3002 \u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u5b57\u200b\u6bb5\u200b\u8bbe\u7f6e\u200b\u6700\u5927\u200b\u8bad\u7ec3\u200b\u8f6e\u6b21\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u95f4\u9694\u200b\u3002</p> <pre><code>train_cfg = dict(\n    type='EpochBasedTrainLoop',  # \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/open-mmlab/mmengine/blob/main/mmengine/runner/loops.py\n    max_epochs=12,  # \u200b\u6700\u5927\u200b\u8bad\u7ec3\u200b\u8f6e\u6b21\u200b\n    val_interval=1)  # \u200b\u9a8c\u8bc1\u200b\u95f4\u9694\u200b\u3002\u200b\u6bcf\u4e2a\u200b epoch \u200b\u9a8c\u8bc1\u200b\u4e00\u6b21\u200b\nval_cfg = dict(type='ValLoop')  # \u200b\u9a8c\u8bc1\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\ntest_cfg = dict(type='TestLoop')  # \u200b\u6d4b\u8bd5\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\n</code></pre>"},{"location":"user_guides/config/#_6","title":"\u4f18\u5316\u200b\u76f8\u5173\u200b\u914d\u7f6e","text":"<p><code>optim_wrapper</code> \u200b\u662f\u200b\u914d\u7f6e\u200b\u4f18\u5316\u200b\u76f8\u5173\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u3002\u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\uff08OptimWrapper\uff09\u200b\u4e0d\u4ec5\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4f18\u5316\u200b\u5668\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u8fd8\u200b\u652f\u6301\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3001\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\u7b49\u200b\u529f\u80fd\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u5185\u5bb9\u200b\u8bf7\u200b\u770b\u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u6559\u7a0b\u200b \u3002</p> <pre><code>optim_wrapper = dict(  # \u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u7684\u200b\u914d\u7f6e\u200b\n    type='OptimWrapper',  # \u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5207\u6362\u200b\u81f3\u200b AmpOptimWrapper \u200b\u6765\u200b\u542f\u7528\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\n    optimizer=dict(  # \u200b\u4f18\u5316\u200b\u5668\u200b\u914d\u7f6e\u200b\u3002\u200b\u652f\u6301\u200b PyTorch \u200b\u7684\u200b\u5404\u79cd\u200b\u4f18\u5316\u200b\u5668\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b https://pytorch.org/docs/stable/optim.html#algorithms\n        type='SGD',  # \u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u4f18\u5316\u200b\u5668\u200b\n        lr=0.02,  # \u200b\u57fa\u7840\u200b\u5b66\u4e60\u200b\u7387\u200b\n        momentum=0.9,  # \u200b\u5e26\u52a8\u200b\u91cf\u200b\u7684\u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\n        weight_decay=0.0001),  # \u200b\u6743\u91cd\u200b\u8870\u51cf\u200b\n    clip_grad=None,  # \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b None \u200b\u5173\u95ed\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3002\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u8bf7\u200b\u89c1\u200b https://mmengine.readthedocs.io/en/latest/tutorials/optimizer.html\n    )\n</code></pre> <p><code>param_scheduler</code> \u200b\u5b57\u200b\u6bb5\u200b\u7528\u4e8e\u200b\u914d\u7f6e\u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff08Parameter Scheduler\uff09\u200b\u6765\u200b\u8c03\u6574\u200b\u4f18\u5316\u200b\u5668\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\uff08\u200b\u4f8b\u5982\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b\u52a8\u91cf\u200b\uff09\u3002 \u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u7ec4\u5408\u200b\u591a\u4e2a\u200b\u8c03\u5ea6\u200b\u5668\u6765\u200b\u521b\u5efa\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u53c2\u6570\u200b\u8c03\u6574\u200b\u7b56\u7565\u200b\u3002 \u200b\u5728\u200b \u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u5668\u200b\u6559\u7a0b\u200b \u200b\u548c\u200b \u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u5668\u200b API \u200b\u6587\u6863\u200b \u200b\u4e2d\u200b\u67e5\u627e\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u3002</p> <pre><code>param_scheduler = [\n    dict(\n        type='LinearLR',  # \u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\n        start_factor=0.001, # \u200b\u5b66\u4e60\u200b\u7387\u200b\u9884\u70ed\u200b\u7684\u200b\u7cfb\u6570\u200b\n        by_epoch=False,  # \u200b\u6309\u200b iteration \u200b\u66f4\u65b0\u200b\u9884\u70ed\u200b\u5b66\u4e60\u200b\u7387\u200b\n        begin=0,  # \u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b iteration \u200b\u5f00\u59cb\u200b\n        end=500),  # \u200b\u5230\u200b\u7b2c\u200b 500 \u200b\u4e2a\u200b iteration \u200b\u7ed3\u675f\u200b\n    dict(\n        type='MultiStepLR',  # \u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f7f\u7528\u200b multi step \u200b\u5b66\u4e60\u200b\u7387\u200b\u7b56\u7565\u200b\n        by_epoch=True,  # \u200b\u6309\u200b epoch \u200b\u66f4\u65b0\u200b\u5b66\u4e60\u200b\u7387\u200b\n        begin=0,   # \u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b epoch \u200b\u5f00\u59cb\u200b\n        end=12,  # \u200b\u5230\u200b\u7b2c\u200b 12 \u200b\u4e2a\u200b epoch \u200b\u7ed3\u675f\u200b\n        milestones=[8, 11],  # \u200b\u5728\u200b\u54ea\u51e0\u4e2a\u200b epoch \u200b\u8fdb\u884c\u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u200b\n        gamma=0.1)  # \u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u7cfb\u6570\u200b\n]\n</code></pre>"},{"location":"user_guides/config/#_7","title":"\u94a9\u5b50\u200b\u914d\u7f6e","text":"<p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u5faa\u73af\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b\u8fd0\u884c\u200b\u671f\u95f4\u200b\u63d2\u5165\u200b\u4e00\u4e9b\u200b\u64cd\u4f5c\u200b\u3002\u200b\u914d\u7f6e\u200b\u4e2d\u6709\u200b\u4e24\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u94a9\u5b50\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u4e00\u79cd\u200b\u662f\u200b <code>default_hooks</code>\uff0c\u200b\u53e6\u200b\u4e00\u79cd\u200b\u662f\u200b <code>custom_hooks</code>\u3002</p> <p><code>default_hooks</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\uff0c\u200b\u7528\u4e8e\u200b\u914d\u7f6e\u200b\u8fd0\u884c\u200b\u65f6\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u94a9\u5b50\u200b\u5177\u6709\u200b\u9ed8\u8ba4\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u5982\u679c\u200b\u672a\u200b\u8bbe\u7f6e\u200b\uff0crunner \u200b\u5c06\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u503c\u200b\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u7981\u7528\u200b\u9ed8\u8ba4\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u914d\u7f6e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>None</code>\u3002\u200b\u66f4\u200b\u591a\u200b\u5185\u5bb9\u200b\u8bf7\u200b\u770b\u200b \u200b\u94a9\u5b50\u200b\u6559\u7a0b\u200b \u3002</p> <pre><code>default_hooks = dict(\n    timer=dict(type='IterTimerHook'),\n    logger=dict(type='LoggerHook', interval=50),\n    param_scheduler=dict(type='ParamSchedulerHook'),\n    checkpoint=dict(type='CheckpointHook', interval=1),\n    sampler_seed=dict(type='DistSamplerSeedHook'),\n    visualization=dict(type='DetVisualizationHook'))\n</code></pre> <p><code>custom_hooks</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\u52a0\u5165\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u94a9\u5b50\u200b\u3002</p> <pre><code>custom_hooks = []\n</code></pre>"},{"location":"user_guides/config/#_8","title":"\u8fd0\u884c\u200b\u76f8\u5173\u200b\u914d\u7f6e","text":"<pre><code>default_scope = 'mmdet'  # \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6ce8\u518c\u5668\u200b\u57df\u540d\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4ece\u6b64\u200b\u6ce8\u518c\u5668\u200b\u57df\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u6a21\u5757\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmengine.readthedocs.io/zh_CN/latest/advanced_tutorials/registry.html\n\nenv_cfg = dict(\n    cudnn_benchmark=False,  # \u200b\u662f\u5426\u200b\u542f\u7528\u200b cudnn benchmark\n    mp_cfg=dict(  # \u200b\u591a\u200b\u8fdb\u7a0b\u200b\u8bbe\u7f6e\u200b\n        mp_start_method='fork',  # \u200b\u4f7f\u7528\u200b fork \u200b\u6765\u200b\u542f\u52a8\u200b\u591a\u200b\u8fdb\u7a0b\u200b\u3002'fork' \u200b\u901a\u5e38\u200b\u6bd4\u200b 'spawn' \u200b\u66f4\u200b\u5feb\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u9690\u60a3\u200b\u3002\u200b\u8bf7\u200b\u53c2\u8003\u200b https://github.com/pytorch/pytorch/issues/1355\n        opencv_num_threads=0),  # \u200b\u5173\u95ed\u200b opencv \u200b\u7684\u200b\u591a\u7ebf\u7a0b\u200b\u4ee5\u200b\u907f\u514d\u200b\u7cfb\u7edf\u200b\u8d85\u8d1f\u8377\u200b\n    dist_cfg=dict(backend='nccl'),  # \u200b\u5206\u5e03\u5f0f\u200b\u76f8\u5173\u200b\u8bbe\u7f6e\u200b\n)\n\nvis_backends = [dict(type='LocalVisBackend')]  # \u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b https://mmengine.readthedocs.io/zh_CN/latest/advanced_tutorials/visualization.html\nvisualizer = dict(\n    type='DetLocalVisualizer', vis_backends=vis_backends, name='visualizer')\nlog_processor = dict(\n    type='LogProcessor',  # \u200b\u65e5\u5fd7\u200b\u5904\u7406\u5668\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u8fd0\u884c\u200b\u65f6\u200b\u65e5\u5fd7\u200b\n    window_size=50,  # \u200b\u65e5\u5fd7\u200b\u6570\u503c\u200b\u7684\u200b\u5e73\u6ed1\u200b\u7a97\u53e3\u200b\n    by_epoch=True)  # \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b epoch \u200b\u683c\u5f0f\u200b\u7684\u200b\u65e5\u5fd7\u200b\u3002\u200b\u9700\u8981\u200b\u4e0e\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7684\u200b\u7c7b\u578b\u200b\u4fdd\u5b58\u200b\u4e00\u81f4\u200b\u3002\n\nlog_level = 'INFO'  # \u200b\u65e5\u5fd7\u200b\u7b49\u7ea7\u200b\nload_from = None  # \u200b\u4ece\u200b\u7ed9\u5b9a\u200b\u8def\u5f84\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u68c0\u67e5\u70b9\u200b\u4f5c\u4e3a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u3002\u200b\u8fd9\u200b\u4e0d\u4f1a\u200b\u6062\u590d\u200b\u8bad\u7ec3\u200b\u3002\nresume = False  # \u200b\u662f\u5426\u200b\u4ece\u200b `load_from` \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\u6062\u590d\u200b\u3002 \u200b\u5982\u679c\u200b `load_from` \u200b\u4e3a\u200b None\uff0c\u200b\u5b83\u200b\u5c06\u200b\u6062\u590d\u200b `work_dir` \u200b\u4e2d\u200b\u7684\u200b\u6700\u65b0\u200b\u68c0\u67e5\u70b9\u200b\u3002\n</code></pre>"},{"location":"user_guides/config/#iter-based","title":"Iter-based \u200b\u914d\u7f6e","text":"<p>MMEngine \u200b\u7684\u200b Runner \u200b\u9664\u4e86\u200b\u57fa\u4e8e\u200b\u8f6e\u6b21\u200b\u7684\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\uff08epoch\uff09\u200b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u57fa\u4e8e\u200b\u8fed\u4ee3\u200b\uff08iteration\uff09\u200b\u7684\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u3002 \u200b\u8981\u200b\u4f7f\u7528\u200b\u57fa\u4e8e\u200b\u8fed\u4ee3\u200b\u7684\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u7528\u6237\u200b\u5e94\u8be5\u200b\u4fee\u6539\u200b <code>train_cfg</code>\u3001<code>param_scheduler</code>\u3001<code>train_dataloader</code>\u3001<code>default_hooks</code> \u200b\u548c\u200b <code>log_processor</code>\u3002 \u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5c06\u200b\u57fa\u4e8e\u200b epoch \u200b\u7684\u200b RetinaNet \u200b\u914d\u7f6e\u200b\u66f4\u200b\u6539\u4e3a\u200b\u57fa\u4e8e\u200b iteration \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1aconfigs/retinanet/retinanet_r50_fpn_90k_coco.py</p> <pre><code># iter-based \u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\ntrain_cfg = dict(\n    _delete_=True,  # \u200b\u5ffd\u7565\u200b\u7ee7\u627f\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\n    type='IterBasedTrainLoop',  # iter-based \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\n    max_iters=90000,  # \u200b\u6700\u5927\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\n    val_interval=10000)  # \u200b\u6bcf\u9694\u200b\u591a\u5c11\u200b\u6b21\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b\u9a8c\u8bc1\u200b\n\n\n# \u200b\u5c06\u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u5668\u200b\u4fee\u6539\u200b\u4e3a\u200b iter-based\nparam_scheduler = [\n    dict(\n        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0, end=500),\n    dict(\n        type='MultiStepLR',\n        begin=0,\n        end=90000,\n        by_epoch=False,\n        milestones=[60000, 80000],\n        gamma=0.1)\n]\n\n# \u200b\u5207\u6362\u200b\u81f3\u200b InfiniteSampler \u200b\u6765\u200b\u907f\u514d\u200b dataloader \u200b\u91cd\u542f\u200b\ntrain_dataloader = dict(sampler=dict(type='InfiniteSampler'))\n\n# \u200b\u5c06\u200b\u6a21\u578b\u200b\u68c0\u67e5\u70b9\u200b\u4fdd\u5b58\u200b\u95f4\u9694\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u6309\u200b iter \u200b\u4fdd\u5b58\u200b\ndefault_hooks = dict(checkpoint=dict(by_epoch=False, interval=10000))\n\n# \u200b\u5c06\u200b\u65e5\u5fd7\u200b\u683c\u5f0f\u200b\u4fee\u6539\u200b\u4e3a\u200b iter-based\nlog_processor = dict(by_epoch=False)\n</code></pre>"},{"location":"user_guides/config/#_9","title":"\u914d\u7f6e\u6587\u4ef6\u200b\u7ee7\u627f","text":"<p>\u200b\u5728\u200b <code>config/_base_</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u6709\u200b 4 \u200b\u4e2a\u200b\u57fa\u672c\u200b\u7ec4\u4ef6\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b\uff1a\u200b\u6570\u636e\u200b\u96c6\u200b(dataset)\uff0c\u200b\u6a21\u578b\u200b(model)\uff0c\u200b\u8bad\u7ec3\u200b\u7b56\u7565\u200b(schedule)\u200b\u548c\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7684\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b(default runtime)\u3002\u200b\u8bb8\u591a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f8b\u5982\u200b Faster R-CNN\u3001Mask R-CNN\u3001Cascade R-CNN\u3001RPN\u3001SSD \u200b\u80fd\u591f\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5730\u200b\u6784\u5efa\u200b\u51fa\u6765\u200b\u3002\u200b\u7531\u200b <code>_base_</code> \u200b\u4e0b\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u7ec4\u6210\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u88ab\u200b\u6211\u4eec\u200b\u79f0\u4e3a\u200b \u200b\u539f\u59cb\u200b\u914d\u7f6e\u200b(primitive)\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u540c\u4e00\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u7684\u200b\u6240\u6709\u200b\u914d\u7f6e\u200b\uff0c\u200b\u63a8\u8350\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u539f\u59cb\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u6240\u6709\u200b\u5176\u4ed6\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u90fd\u200b\u5e94\u8be5\u200b\u7ee7\u627f\u200b\u81ea\u200b\u8fd9\u4e2a\u200b\u539f\u59cb\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u8fd9\u6837\u200b\u5c31\u200b\u80fd\u200b\u4fdd\u8bc1\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u6700\u5927\u200b\u7ee7\u627f\u200b\u6df1\u5ea6\u200b\u4e3a\u200b 3\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u4fbf\u4e8e\u200b\u7406\u89e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u8d21\u732e\u8005\u200b\u7ee7\u627f\u200b\u73b0\u6709\u200b\u65b9\u6cd5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b Faster R-CNN \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u505a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u4fee\u6539\u200b\uff0c\u200b\u7528\u6237\u200b\u9996\u5148\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6307\u5b9a\u200b <code>_base_ = ../faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py</code> \u200b\u6765\u200b\u7ee7\u627f\u200b\u57fa\u7840\u200b\u7684\u200b Faster R-CNN \u200b\u7ed3\u6784\u200b\uff0c\u200b\u7136\u540e\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5fc5\u8981\u200b\u53c2\u6570\u200b\u4ee5\u200b\u5b8c\u6210\u200b\u7ee7\u627f\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u4efb\u4f55\u200b\u73b0\u6709\u200b\u65b9\u6cd5\u200b\u4e0d\u200b\u5171\u4eab\u200b\u7ed3\u6784\u200b\u7684\u200b\u5168\u65b0\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>configs</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u4f8b\u5982\u200b <code>xxx_rcnn</code> \u200b\u6587\u4ef6\u5939\u200b\u3002</p> <p>\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b MMEngine \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6559\u7a0b\u200b \u3002</p> <p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>_base_</code> \u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7ee7\u627f\u200b\u81ea\u200b\u54ea\u4e9b\u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u5f53\u200b <code>_base_</code> \u200b\u4e3a\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u7ee7\u627f\u200b\u4e00\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p> <pre><code>_base_ = './mask-rcnn_r50_fpn_1x_coco.py'\n</code></pre> <p>\u200b\u5f53\u200b <code>_base_</code> \u200b\u662f\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u7684\u200b\u5217\u8868\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u7ee7\u627f\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u200b\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/mask-rcnn_r50_fpn.py',\n    '../_base_/datasets/coco_instance.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\n</code></pre> <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd0\u884c\u200b <code>python tools/misc/print_config.py /PATH/TO/CONFIG</code> \u200b\u6765\u200b\u67e5\u770b\u200b\u5b8c\u6574\u200b\u7684\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"user_guides/config/#_10","title":"\u5ffd\u7565\u200b\u57fa\u7840\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\u7684\u200b\u90e8\u5206\u200b\u5185\u5bb9","text":"<p>\u200b\u6709\u65f6\u200b\uff0c\u200b\u60a8\u200b\u4e5f\u8bb8\u200b\u4f1a\u200b\u8bbe\u7f6e\u200b <code>_delete_=True</code> \u200b\u53bb\u200b\u5ffd\u7565\u200b\u57fa\u7840\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\u7684\u200b\u4e00\u4e9b\u200b\u57df\u200b\u5185\u5bb9\u200b\u3002 \u200b\u60a8\u200b\u4e5f\u8bb8\u200b\u53ef\u4ee5\u200b\u53c2\u7167\u200b MMEngine \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6559\u7a0b\u200b \u200b\u6765\u200b\u83b7\u5f97\u200b\u4e00\u4e9b\u200b\u7b80\u5355\u200b\u7684\u200b\u6307\u5bfc\u200b\u3002</p> <p>\u200b\u5728\u200b MMDetection \u200b\u91cc\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4e3a\u4e86\u200b\u6539\u53d8\u200b  Mask R-CNN \u200b\u7684\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u7684\u200b\u67d0\u4e9b\u200b\u5185\u5bb9\u200b\uff1a</p> <pre><code>model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(...),\n    rpn_head=dict(...),\n    roi_head=dict(...))\n</code></pre> <p>\u200b\u57fa\u7840\u200b\u914d\u7f6e\u200b\u7684\u200b <code>Mask R-CNN</code> \u200b\u4f7f\u7528\u200b <code>ResNet-50</code>\uff0c\u200b\u5728\u200b\u9700\u8981\u200b\u5c06\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u6539\u6210\u200b <code>HRNet</code> \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u56e0\u4e3a\u200b <code>HRNet</code> \u200b\u548c\u200b <code>ResNet</code> \u200b\u4e2d\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>_delete_=True</code> \u200b\u5c06\u200b\u65b0\u200b\u7684\u200b\u952e\u200b\u53bb\u200b\u66ff\u6362\u200b <code>backbone</code> \u200b\u57df\u200b\u5185\u200b\u6240\u6709\u200b\u8001\u200b\u7684\u200b\u952e\u200b\u3002</p> <pre><code>_base_ = '../mask_rcnn/mask-rcnn_r50_fpn_1x_coco.py'\nmodel = dict(\n    backbone=dict(\n        _delete_=True,\n        type='HRNet',\n        extra=dict(\n            stage1=dict(\n                num_modules=1,\n                num_branches=1,\n                block='BOTTLENECK',\n                num_blocks=(4, ),\n                num_channels=(64, )),\n            stage2=dict(\n                num_modules=1,\n                num_branches=2,\n                block='BASIC',\n                num_blocks=(4, 4),\n                num_channels=(32, 64)),\n            stage3=dict(\n                num_modules=4,\n                num_branches=3,\n                block='BASIC',\n                num_blocks=(4, 4, 4),\n                num_channels=(32, 64, 128)),\n            stage4=dict(\n                num_modules=3,\n                num_branches=4,\n                block='BASIC',\n                num_blocks=(4, 4, 4, 4),\n                num_channels=(32, 64, 128, 256))),\n        init_cfg=dict(type='Pretrained', checkpoint='open-mmlab://msra/hrnetv2_w32')),\n    neck=dict(...))\n</code></pre>"},{"location":"user_guides/config/#_11","title":"\u4f7f\u7528\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\u7684\u200b\u4e2d\u95f4\u200b\u53d8\u91cf","text":"<p>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u4f1a\u200b\u4f7f\u7528\u200b\u4e00\u4e9b\u200b\u4e2d\u95f4\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6570\u636e\u200b\u96c6\u91cc\u200b\u7684\u200b <code>train_pipeline</code>/<code>test_pipeline</code>\u3002\u200b\u6211\u4eec\u200b\u5728\u200b\u5b9a\u4e49\u65b0\u200b\u7684\u200b <code>train_pipeline</code>/<code>test_pipeline</code> \u200b\u4e4b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u5c06\u200b\u5b83\u4eec\u200b\u4f20\u9012\u200b\u5230\u200b <code>data</code> \u200b\u91cc\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u60f3\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\uff0c\u200b\u6539\u53d8\u200b Mask R-CNN \u200b\u7684\u200b\u591a\u200b\u5c3a\u5ea6\u200b\u7b56\u7565\u200b (multi scale strategy)\uff0c<code>train_pipeline</code>/<code>test_pipeline</code> \u200b\u662f\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u4fee\u6539\u200b\u7684\u200b\u4e2d\u95f4\u200b\u53d8\u91cf\u200b\u3002</p> <pre><code>_base_ = './mask-rcnn_r50_fpn_1x_coco.py'\n\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(\n        type='RandomResize', scale=[(1333, 640), (1333, 800)],\n        keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PackDetInputs')\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', scale=(1333, 800), keep_ratio=True),\n    dict(\n        type='PackDetInputs',\n        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',\n                   'scale_factor'))\n]\ntrain_dataloader = dict(dataset=dict(pipeline=train_pipeline))\nval_dataloader = dict(dataset=dict(pipeline=test_pipeline))\ntest_dataloader = dict(dataset=dict(pipeline=test_pipeline))\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u9996\u5148\u200b\u5b9a\u4e49\u65b0\u200b\u7684\u200b <code>train_pipeline</code>/<code>test_pipeline</code> \u200b\u7136\u540e\u200b\u4f20\u9012\u200b\u5230\u200b <code>data</code> \u200b\u91cc\u200b\u3002</p> <p>\u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u200b\u4ece\u200b <code>SyncBN</code> \u200b\u5207\u6362\u200b\u5230\u200b <code>BN</code> \u200b\u6216\u8005\u200b <code>MMSyncBN</code>\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b  <code>norm_cfg</code>\u3002</p> <pre><code>_base_ = './mask-rcnn_r50_fpn_1x_coco.py'\nnorm_cfg = dict(type='BN', requires_grad=True)\nmodel = dict(\n    backbone=dict(norm_cfg=norm_cfg),\n    neck=dict(norm_cfg=norm_cfg),\n    ...)\n</code></pre>"},{"location":"user_guides/config/#_base_","title":"\u590d\u7528\u200b _base_ \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf","text":"<p>\u200b\u5982\u679c\u200b\u7528\u6237\u200b\u5e0c\u671b\u200b\u5728\u200b\u5f53\u524d\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u590d\u7528\u200b base \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b <code>{{_base_.xxx}}</code> \u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u83b7\u53d6\u200b\u5bf9\u5e94\u200b\u53d8\u91cf\u200b\u7684\u200b\u62f7\u8d1d\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>_base_ = './mask-rcnn_r50_fpn_1x_coco.py'\n\na = {{_base_.model}}  # \u200b\u53d8\u91cf\u200b a \u200b\u7b49\u4e8e\u200b _base_ \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b model\n</code></pre>"},{"location":"user_guides/config/#_12","title":"\u901a\u8fc7\u200b\u811a\u672c\u200b\u53c2\u6570\u200b\u4fee\u6539\u200b\u914d\u7f6e","text":"<p>\u200b\u5f53\u200b\u8fd0\u884c\u200b <code>tools/train.py</code> \u200b\u548c\u200b <code>tools/test.py</code> \u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>--cfg-options</code> \u200b\u6765\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002</p> <ul> <li>\u200b\u66f4\u65b0\u200b\u5b57\u5178\u200b\u94fe\u4e2d\u200b\u7684\u200b\u914d\u7f6e\u200b</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u539f\u59cb\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b dict \u200b\u952e\u200b\u987a\u5e8f\u200b\u5730\u200b\u6307\u5b9a\u200b\u914d\u7f6e\u200b\u9884\u9009\u200b\u9879\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>--cfg-options model.backbone.norm_eval=False</code> \u200b\u5c06\u200b\u6a21\u578b\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b BN \u200b\u6a21\u5757\u200b\u90fd\u200b\u6539\u4e3a\u200b <code>train</code> \u200b\u6a21\u5f0f\u200b\u3002</p> <ul> <li>\u200b\u66f4\u65b0\u200b\u914d\u7f6e\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u952e\u200b</li> </ul> <p>\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u200b\uff0c\u200b\u4e00\u4e9b\u200b\u5b57\u200b\u5178\u578b\u200b\u7684\u200b\u914d\u7f6e\u200b\u88ab\u200b\u5305\u542b\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6570\u636e\u200b\u8bad\u7ec3\u200b\u6d41\u7a0b\u200b <code>data.train.pipeline</code> \u200b\u901a\u5e38\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u6bd4\u5982\u200b <code>[dict(type='LoadImageFromFile'), ...]</code>\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5c06\u200b <code>'LoadImageFromFile'</code> \u200b\u6539\u6210\u200b <code>'LoadImageFromWebcam'</code>\uff0c\u200b\u9700\u8981\u200b\u5199\u6210\u200b\u4e0b\u8ff0\u200b\u5f62\u5f0f\u200b\uff1a <code>--cfg-options data.train.pipeline.0.type=LoadImageFromNDArray</code>.</p> <ul> <li>\u200b\u66f4\u65b0\u200b\u5217\u8868\u200b\u6216\u200b\u5143\u7ec4\u200b\u7684\u200b\u503c\u200b</li> </ul> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u66f4\u65b0\u200b\u7684\u200b\u503c\u200b\u662f\u200b\u5217\u8868\u200b\u6216\u200b\u5143\u7ec4\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u901a\u5e38\u200b\u8bbe\u7f6e\u200b <code>model.data_preprocessor.mean=[123.675, 116.28, 103.53]</code>. \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u6539\u53d8\u200b\u8fd9\u4e2a\u200b\u952e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>--cfg-options model.data_preprocessor.mean=\"[127,127,127]\"</code> \u200b\u6765\u200b\u91cd\u65b0\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5f15\u53f7\u200b \" \u200b\u662f\u200b\u652f\u6301\u200b\u5217\u8868\u200b\u6216\u200b\u5143\u7ec4\u200b\u6570\u636e\u7c7b\u578b\u200b\u6240\u200b\u5fc5\u9700\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u6307\u5b9a\u200b\u503c\u200b\u7684\u200b\u5f15\u53f7\u200b\u5185\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u6709\u200b\u7a7a\u683c\u200b\u3002</p>"},{"location":"user_guides/config/#_13","title":"\u914d\u7f6e\u6587\u4ef6\u200b\u540d\u79f0\u200b\u98ce\u683c","text":"<p>\u200b\u6211\u4eec\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u6837\u5f0f\u200b\u6765\u200b\u547d\u540d\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u5efa\u8bae\u200b\u8d21\u732e\u8005\u200b\u9075\u5faa\u200b\u76f8\u540c\u200b\u7684\u200b\u98ce\u683c\u200b\u3002</p> <pre><code>{algorithm name}_{model component names [component1]_[component2]_[...]}_{training settings}_{training dataset information}_{testing dataset information}.py\n</code></pre> <p>\u200b\u6587\u4ef6\u540d\u200b\u5206\u4e3a\u200b\u4e94\u4e2a\u200b\u90e8\u5206\u200b\u3002 \u200b\u6bcf\u4e2a\u200b\u90e8\u5206\u200b\u7528\u200b<code>_</code>\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u90e8\u5206\u200b\u5185\u200b\u7684\u200b\u5355\u8bcd\u200b\u5e94\u8be5\u200b\u7528\u200b<code>-</code>\u200b\u8fde\u63a5\u200b\u3002</p> <ul> <li><code>{algorithm name}</code>: \u200b\u7b97\u6cd5\u200b\u7684\u200b\u540d\u79f0\u200b\u3002 \u200b\u5b83\u200b\u53ef\u4ee5\u200b\u662f\u200b\u68c0\u6d4b\u5668\u200b\u540d\u79f0\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>faster-rcnn</code>\u3001<code>mask-rcnn</code> \u200b\u7b49\u200b\u3002\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u534a\u200b\u76d1\u7763\u200b\u6216\u200b\u77e5\u8bc6\u200b\u84b8\u998f\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>soft-teacher</code>\u3001<code>lad</code> \u200b\u7b49\u7b49\u200b</li> <li><code>{component names}</code>: \u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u540d\u79f0\u200b\uff0c\u200b\u5982\u200b backbone\u3001neck \u200b\u7b49\u200b\u3002\u200b\u4f8b\u5982\u200b <code>r50-caffe_fpn_gn-head</code> \u200b\u8868\u793a\u200b\u5728\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u4f7f\u7528\u200b caffe \u200b\u7248\u672c\u200b\u7684\u200b ResNet50\u3001FPN \u200b\u548c\u200b \u200b\u4f7f\u7528\u200b\u4e86\u200b Group Norm \u200b\u7684\u200b\u68c0\u6d4b\u200b\u5934\u200b\u3002</li> <li><code>{training settings}</code>: \u200b\u8bad\u7ec3\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f8b\u5982\u200b batch \u200b\u5927\u5c0f\u200b\u3001\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u3001\u200b\u635f\u5931\u200b\u3001\u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u65b9\u5f0f\u200b\u548c\u200b\u8bad\u7ec3\u200b\u6700\u5927\u200b\u8f6e\u6b21\u200b/\u200b\u8fed\u4ee3\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff1a<code>4xb4-mixup-giou-coslr-100e</code> \u200b\u8868\u793a\u200b\u4f7f\u7528\u200b 8 \u200b\u4e2a\u200b gpu \u200b\u6bcf\u4e2a\u200b gpu 4 \u200b\u5f20\u56fe\u200b\u3001mixup \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u3001GIoU loss\u3001\u200b\u4f59\u5f26\u200b\u9000\u706b\u200b\u5b66\u4e60\u200b\u7387\u200b\uff0c\u200b\u5e76\u200b\u8bad\u7ec3\u200b 100 \u200b\u4e2a\u200b epoch\u3002   \u200b\u7f29\u5199\u200b\u4ecb\u7ecd\u200b:</li> <li><code>{gpu x batch_per_gpu}</code>: GPU \u200b\u6570\u200b\u548c\u200b\u6bcf\u4e2a\u200b GPU \u200b\u7684\u200b\u6837\u672c\u6570\u200b\u3002<code>bN</code> \u200b\u8868\u793a\u200b\u6bcf\u4e2a\u200b GPU \u200b\u4e0a\u200b\u7684\u200b batch \u200b\u5927\u5c0f\u200b\u4e3a\u200b N\u3002\u200b\u4f8b\u5982\u200b <code>4x4b</code> \u200b\u662f\u200b 4 \u200b\u4e2a\u200b GPU \u200b\u6bcf\u4e2a\u200b GPU 4 \u200b\u5f20\u56fe\u200b\u7684\u200b\u7f29\u5199\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6ce8\u660e\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 8 \u200b\u5361\u200b\u6bcf\u5361\u200b 2 \u200b\u5f20\u56fe\u200b\u3002</li> <li><code>{schedule}</code>: \u200b\u8bad\u7ec3\u200b\u65b9\u6848\u200b\uff0c\u200b\u9009\u9879\u200b\u662f\u200b <code>1x</code>\u3001 <code>2x</code>\u3001 <code>20e</code> \u200b\u7b49\u200b\u3002<code>1x</code>  \u200b\u548c\u200b <code>2x</code> \u200b\u5206\u522b\u200b\u4ee3\u8868\u200b 12 epoch \u200b\u548c\u200b 24 epoch\uff0c<code>20e</code> \u200b\u5728\u200b\u7ea7\u8054\u200b\u6a21\u578b\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u8868\u793a\u200b 20 epoch\u3002\u200b\u5bf9\u4e8e\u200b <code>1x</code>/<code>2x</code>\uff0c\u200b\u521d\u59cb\u200b\u5b66\u4e60\u200b\u7387\u200b\u5728\u200b\u7b2c\u200b 8/16 \u200b\u548c\u200b\u7b2c\u200b 11/22 epoch \u200b\u8870\u51cf\u200b 10 \u200b\u500d\u200b\uff1b\u200b\u5bf9\u4e8e\u200b <code>20e</code> \uff0c\u200b\u521d\u59cb\u200b\u5b66\u4e60\u200b\u7387\u200b\u5728\u200b\u7b2c\u200b 16 \u200b\u548c\u200b\u7b2c\u200b 19 epoch \u200b\u8870\u51cf\u200b 10 \u200b\u500d\u200b\u3002</li> <li><code>{training dataset information}</code>: \u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>coco</code>, <code>coco-panoptic</code>, <code>cityscapes</code>, <code>voc-0712</code>, <code>wider-face</code>\u3002</li> <li><code>{testing dataset information}</code> (\u200b\u53ef\u200b\u9009\u200b): \u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u5728\u200b\u4e0d\u540c\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u6a21\u578b\u200b\u914d\u7f6e\u200b\u3002 \u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6ce8\u660e\u200b\uff0c\u200b\u5219\u200b\u8868\u793a\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u3002</li> </ul>"},{"location":"user_guides/dataset_prepare/","title":"Dataset prepare","text":""},{"location":"user_guides/dataset_prepare/#_1","title":"\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":""},{"location":"user_guides/dataset_prepare/#_2","title":"\u57fa\u7840\u200b\u68c0\u6d4b\u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>MMDetection \u200b\u652f\u6301\u200b\u591a\u4e2a\u200b\u516c\u5171\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5305\u62ec\u200b COCO\uff0c Pascal VOC\uff0c Cityscapes \u200b\u548c\u200b \u200b\u5176\u4ed6\u200b\u66f4\u200b\u591a\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <p>\u200b\u4e00\u4e9b\u200b\u516c\u5171\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u6bd4\u5982\u200b Pascal VOC \u200b\u53ca\u5176\u200b\u955c\u50cf\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u6216\u8005\u200b COCO \u200b\u7b49\u200b\u6570\u636e\u200b\u96c6\u90fd\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u5b98\u65b9\u7f51\u7ad9\u200b\u6216\u8005\u200b\u955c\u50cf\u200b\u7f51\u7ad9\u200b\u83b7\u53d6\u200b\u3002\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5728\u200b\u68c0\u6d4b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0cPascal VOC 2012 \u200b\u662f\u200b Pascal VOC 2007 \u200b\u7684\u200b\u65e0\u200b\u4ea4\u96c6\u200b\u6269\u5c55\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u5e38\u200b\u5c06\u200b\u4e24\u8005\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\u3002 \u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u7136\u540e\u200b\u89e3\u538b\u200b\u5230\u200b\u9879\u76ee\u200b\u5916\u90e8\u200b\u7684\u200b\u67d0\u4e2a\u200b\u6587\u4ef6\u5939\u200b\u5185\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u7b26\u53f7\u200b\u94fe\u63a5\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u6839\u76ee\u5f55\u200b\u94fe\u63a5\u200b\u5230\u200b <code>$MMDETECTION/data</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff0c \u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u548c\u200b\u4e0b\u65b9\u200b\u4e0d\u540c\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6539\u53d8\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e0b\u8f7d\u200b COCO \u200b\u7b49\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u811a\u672c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b <code>python tools/misc/download_dataset.py --dataset-name coco2017</code> \u200b\u4e0b\u8f7d\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\u3002 \u200b\u5bf9\u4e8e\u200b\u4e2d\u56fd\u200b\u5883\u5185\u200b\u7684\u200b\u7528\u6237\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u63a8\u8350\u200b\u901a\u8fc7\u200b\u5f00\u6e90\u200b\u6570\u636e\u200b\u5e73\u53f0\u200b OpenDataLab \u200b\u6765\u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\uff0c\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u66f4\u597d\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u4f53\u9a8c\u200b\u3002</p> <p>\u200b\u66f4\u200b\u591a\u200b\u7528\u6cd5\u200b\u8bf7\u200b\u53c2\u8003\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0b\u8f7d\u200b</p> <pre><code>mmdetection\n\u251c\u2500\u2500 mmdet\n\u251c\u2500\u2500 tools\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u251c\u2500\u2500 cityscapes\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 leftImg8bit\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u2502   \u251c\u2500\u2500 gtFine\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u251c\u2500\u2500 VOCdevkit\n\u2502   \u2502   \u251c\u2500\u2500 VOC2007\n\u2502   \u2502   \u251c\u2500\u2500 VOC2012\n</code></pre> <p>\u200b\u6709\u4e9b\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u7684\u200b COCO-stuff \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u6bd4\u5982\u200b HTC\uff0cDetectoRS \u200b\u548c\u200b SCNet\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e0b\u8f7d\u200b\u5e76\u200b\u89e3\u538b\u200b\u5b83\u4eec\u200b\u5230\u200b <code>coco</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u3002\u200b\u6587\u4ef6\u5939\u200b\u4f1a\u200b\u662f\u200b\u5982\u4e0b\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 stuffthingmaps\n</code></pre> <p>PanopticFPN \u200b\u7b49\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u7684\u200b COCO Panoptic \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e0b\u8f7d\u200b\u5e76\u200b\u89e3\u538b\u200b\u5b83\u4eec\u200b\u5230\u200b <code>coco/annotations</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u3002\u200b\u6587\u4ef6\u5939\u200b\u4f1a\u200b\u662f\u200b\u5982\u4e0b\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_train2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_train2017\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_val2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_val2017\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n</code></pre> <p>Cityscape \u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u9700\u8981\u200b\u8f6c\u6362\u200b\uff0c\u200b\u4ee5\u200b\u4e0e\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u4fdd\u6301\u4e00\u81f4\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>tools/dataset_converters/cityscapes.py</code> \u200b\u6765\u200b\u5b8c\u6210\u200b\u8f6c\u6362\u200b\uff1a</p> <pre><code>pip install cityscapesscripts\n\npython tools/dataset_converters/cityscapes.py \\\n    ./data/cityscapes \\\n    --nproc 8 \\\n    --out-dir ./data/cityscapes/annotations\n</code></pre>"},{"location":"user_guides/dataset_prepare/#coco-caption","title":"COCO Caption \u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>COCO Caption \u200b\u91c7\u7528\u200b\u7684\u200b\u662f\u200b COCO2014 \u200b\u6570\u636e\u200b\u96c6\u200b\u4f5c\u4e3a\u200b\u56fe\u7247\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4f7f\u7528\u200b\u4e86\u200b karpathy \u200b\u7684\u200b\u6807\u6ce8\u200b\uff0c</p> <p>\u200b\u9996\u5148\u200b\u4f60\u200b\u9700\u8981\u200b\u4e0b\u8f7d\u200b COCO2014 \u200b\u6570\u636e\u200b\u96c6\u200b</p> <pre><code>python tools/misc/download_dataset.py --dataset-name coco2014 --unzip\n</code></pre> <p>\u200b\u6570\u636e\u200b\u96c6\u4f1a\u200b\u4e0b\u8f7d\u200b\u5230\u200b\u5f53\u524d\u200b\u8def\u5f84\u200b\u7684\u200b <code>data/coco</code> \u200b\u4e0b\u200b\u3002\u200b\u7136\u540e\u200b\u4e0b\u8f7d\u200b karpathy \u200b\u7684\u200b\u6807\u6ce8\u200b</p> <pre><code>cd data/coco/annotations\nwget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_train.json\nwget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_val.json\nwget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_test.json\nwget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_val_gt.json\nwget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_test_gt.json\n</code></pre> <p>\u200b\u6700\u7ec8\u200b\u76f4\u63a5\u200b\u53ef\u200b\u7528\u4e8e\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 coco_karpathy_train.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 coco_karpathy_test.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 coco_karpathy_val.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 coco_karpathy_val_gt.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 coco_karpathy_test_gt.json\n\u2502   \u2502   \u251c\u2500\u2500 train2014\n\u2502   \u2502   \u251c\u2500\u2500 val2014\n\u2502   \u2502   \u251c\u2500\u2500 test2014\n</code></pre>"},{"location":"user_guides/dataset_prepare/#coco-semantic","title":"COCO semantic \u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>COCO \u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6709\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u6807\u6ce8\u200b\uff0c\u200b\u4e3b\u8981\u200b\u5dee\u522b\u200b\u5728\u4e8e\u200b\u7c7b\u522b\u200b\u540d\u200b\u5b9a\u4e49\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\u4e5f\u200b\u6709\u200b\u4e24\u79cd\u200b\uff0c\u200b\u7b2c\u4e00\u79cd\u200b\u662f\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b stuffthingmaps \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u7b2c\u4e8c\u79cd\u200b\u662f\u200b\u4f7f\u7528\u200b panoptic \u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <p>(1) \u200b\u4f7f\u7528\u200b stuffthingmaps \u200b\u6570\u636e\u200b\u96c6\u200b</p> <p>\u200b\u8be5\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u5730\u5740\u200b\u4e3a\u200b stuffthingmaps_trainval2017\uff0c\u200b\u8bf7\u200b\u4e0b\u8f7d\u200b\u540e\u200b\u89e3\u538b\u200b\u5230\u200b <code>data/coco</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u3002</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 stuffthingmaps\n</code></pre> <p>\u200b\u8be5\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0d\u540c\u4e8e\u200b\u6807\u51c6\u200b\u7684\u200b COCO \u200b\u7c7b\u522b\u200b\u6807\u6ce8\u200b\uff0c\u200b\u5176\u200b\u5305\u62ec\u200b 172 \u200b\u4e2a\u7c7b\u200b\uff1a 80 thing \u200b\u7c7b\u200b\u300191 stuff \u200b\u7c7b\u200b\u548c\u200b 1 \u200b\u4e2a\u200b 'unlabeled'\uff0c\u200b\u5176\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b\u8bf4\u660e\u200b\u89c1\u200b https://github.com/nightrome/cocostuff/blob/master/labels.md</p> <p>\u200b\u867d\u7136\u200b\u53ea\u200b\u6807\u6ce8\u200b\u4e86\u200b 172 \u200b\u4e2a\u200b\u7c7b\u522b\u200b\uff0c\u200b\u4f46\u662f\u200b <code>stuffthingmaps</code> \u200b\u4e2d\u200b\u6700\u5927\u200b\u6807\u7b7e\u200b id \u200b\u662f\u200b 182\uff0c\u200b\u4e2d\u95f4\u200b\u6709\u4e9b\u200b\u7c7b\u522b\u200b\u662f\u200b\u6ca1\u6709\u200b\u6807\u6ce8\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u7b2c\u200b 0 \u200b\u7c7b\u200b\u7684\u200b <code>unlabeled</code> \u200b\u7c7b\u522b\u200b\u88ab\u200b\u79fb\u9664\u200b\u3002\u200b\u56e0\u6b64\u200b\u6700\u7ec8\u200b\u7684\u200b <code>stuffthingmaps</code> \u200b\u56fe\u7247\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u503c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7c7b\u522b\u200b\u5173\u7cfb\u200b\u89c1\u200b https://github.com/kazuto1011/deeplab-pytorch/blob/master/data/datasets/cocostuff/labels.txt</p> <p>\u200b\u8003\u8651\u200b\u5230\u200b\u8bad\u7ec3\u200b\u9ad8\u6548\u200b\u548c\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\uff0c\u200b\u5728\u200b\u5f00\u542f\u200b\u8bad\u7ec3\u200b\u6216\u8005\u200b\u8bc4\u4f30\u200b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5c06\u200b\u6ca1\u6709\u200b\u6807\u6ce8\u200b\u7684\u200b 12 \u200b\u4e2a\u7c7b\u200b\u79fb\u9664\u200b\uff0c\u200b\u8fd9\u200b 12 \u200b\u4e2a\u7c7b\u200b\u7684\u200b\u540d\u5b57\u200b\u4e3a\u200b\uff1a <code>street sign\u3001hat\u3001shoe\u3001eye glasses\u3001plate\u3001mirror\u3001window\u3001desk\u3001door\u3001blender\u3001hair brush</code>\uff0c\u200b\u6700\u7ec8\u200b\u53ef\u200b\u7528\u4e8e\u200b\u8bad\u7ec3\u200b\u548c\u200b\u8bc4\u4f30\u200b\u7684\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\u89c1\u200b <code>mmdet/datasets/coco_semantic.py</code></p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>tools/dataset_converters/coco_stuff164k.py</code> \u200b\u6765\u200b\u5b8c\u6210\u200b\u5c06\u200b\u4e0b\u8f7d\u200b\u7684\u200b <code>stuffthingmaps</code> \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u76f4\u63a5\u200b\u53ef\u4ee5\u200b\u8bad\u7ec3\u200b\u548c\u200b\u8bc4\u4f30\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 stuffthingmaps\n\u2502   \u2502   \u251c\u2500\u2500 stuffthingmaps_semseg\n</code></pre> <p><code>stuffthingmaps_semseg</code> \u200b\u5373\u200b\u4e3a\u200b\u65b0\u200b\u751f\u6210\u200b\u7684\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b COCO \u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <p>(2) \u200b\u4f7f\u7528\u200b panoptic \u200b\u6570\u636e\u200b\u96c6\u200b</p> <p>\u200b\u901a\u8fc7\u200b panoptic \u200b\u6807\u6ce8\u200b\u751f\u6210\u200b\u7684\u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6\u200b\u7c7b\u522b\u200b\u6570\u200b\u76f8\u6bd4\u200b\u4f7f\u7528\u200b <code>stuffthingmaps</code> \u200b\u6570\u636e\u200b\u96c6\u200b\u751f\u6210\u200b\u7684\u200b\u4f1a\u5c11\u200b\u4e00\u4e9b\u200b\u3002\u200b\u9996\u5148\u200b\u4f60\u200b\u9700\u8981\u200b\u51c6\u5907\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u6807\u6ce8\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u811a\u672c\u200b\u5b8c\u6210\u200b\u8f6c\u6362\u200b</p> <pre><code>python tools/dataset_converters/prepare_coco_semantic_annos_from_panoptic_annos.py data/coco\n</code></pre> <p>\u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_train2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_train2017\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_val2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_val2017\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_semseg_train2017\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 panoptic_semseg_val2017\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n</code></pre> <p><code>panoptic_semseg_train2017</code> \u200b\u548c\u200b <code>panoptic_semseg_val2017</code> \u200b\u5373\u200b\u4e3a\u200b\u65b0\u200b\u751f\u6210\u200b\u7684\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b COCO \u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u6ce8\u610f\u200b\u5176\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\u5c31\u662f\u200b COCO \u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7684\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5305\u62ec\u200b thing \u200b\u548c\u200b stuff\u3002</p>"},{"location":"user_guides/dataset_prepare/#refcoco","title":"RefCOCO \u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>RefCOCO\u200b\u7cfb\u5217\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u56fe\u50cf\u200b\u548c\u200b\u6ce8\u91ca\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd0\u884c\u200b <code>tools/misc/download_dataset.py</code> \u200b\u4e0b\u8f7d\u200b:</p> <pre><code>python tools/misc/download_dataset.py --dataset-name refcoco --save-dir data/coco --unzip\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u76ee\u5f55\u200b\u5e94\u8be5\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a</p> <pre><code>data\n\u251c\u2500\u2500 coco\n\u2502   \u251c\u2500\u2500 refcoco\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instances.json\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 refs(google).p\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 refs(unc).p\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 refcoco+\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instances.json\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 refs(unc).p\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 refcocog\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instances.json\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 refs(google).p\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 refs(umd).p\n|   |\u2500\u2500 train2014\n</code></pre>"},{"location":"user_guides/dataset_prepare/#ade20k","title":"ADE20K \u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>ADE20K\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u56fe\u50cf\u200b\u548c\u200b\u6ce8\u91ca\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd0\u884c\u200b <code>tools/misc/download_dataset.py</code> \u200b\u4e0b\u8f7d\u200b:</p> <pre><code>python tools/misc/download_dataset.py --dataset-name ade20k_2016 --save-dir data --unzip\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u6ce8\u91ca\u200b\u79fb\u81f3\u200b<code>data/ADEChallengeData2016</code>\u200b\u76ee\u5f55\u200b\uff0c\u200b\u5e76\u200b\u8fd0\u884c\u200b\u9884\u5904\u7406\u200b\u811a\u672c\u200b\u4ee5\u200b\u4ea7\u751f\u200bcoco\u200b\u683c\u5f0f\u200b\u6ce8\u91ca\u200b\uff1a</p> <pre><code>mv data/annotations_instance data/ADEChallengeData2016/\nmv data/categoryMapping.txt data/ADEChallengeData2016/\nmv data/imgCatIds.json data/ADEChallengeData2016/\npython tools/dataset_converters/ade20k2coco.py data/ADEChallengeData2016 --task panoptic\npython tools/dataset_converters/ade20k2coco.py data/ADEChallengeData2016 --task instance\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u76ee\u5f55\u200b\u5e94\u8be5\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a</p> <pre><code>data\n\u251c\u2500\u2500 ADEChallengeData2016\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_instance_train.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_instance_val.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_panoptic_train\n|   |   \u251c\u2500\u2500 ADE_train_00000001.png\n|   |   \u251c\u2500\u2500 ADE_train_00000002.png\n|   |   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_panoptic_train.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_panoptic_val\n|   |   \u251c\u2500\u2500 ADE_val_00000001.png\n|   |   \u251c\u2500\u2500 ADE_val_00000002.png\n|   |   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ade20k_panoptic_val.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 annotations\n|   |   \u251c\u2500\u2500 training\n|   |   |   \u251c\u2500\u2500 ADE_train_00000001.png\n|   |   |   \u251c\u2500\u2500 ADE_train_00000002.png\n|   |   |   \u251c\u2500\u2500 ...\n|   |   \u251c\u2500\u2500 validation\n|   |   |   \u251c\u2500\u2500 ADE_val_00000001.png\n|   |   |   \u251c\u2500\u2500 ADE_val_00000002.png\n|   |   |   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 annotations_instance\n|   |   \u251c\u2500\u2500 training\n|   |   |   \u251c\u2500\u2500 ADE_train_00000001.png\n|   |   |   \u251c\u2500\u2500 ADE_train_00000002.png\n|   |   |   \u251c\u2500\u2500 ...\n|   |   \u251c\u2500\u2500 validation\n|   |   |   \u251c\u2500\u2500 ADE_val_00000001.png\n|   |   |   \u251c\u2500\u2500 ADE_val_00000002.png\n|   |   |   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 categoryMapping.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 images\n\u2502\u00a0\u00a0 |   \u251c\u2500\u2500 training\n|   |   |   \u251c\u2500\u2500 ADE_train_00000001.jpg\n|   |   |   \u251c\u2500\u2500 ADE_train_00000002.jpg\n|   |   |   \u251c\u2500\u2500 ...\n|   |   \u251c\u2500\u2500 validation\n|   |   |   \u251c\u2500\u2500 ADE_val_00000001.jpg\n|   |   |   \u251c\u2500\u2500 ADE_val_00000002.jpg\n|   |   |   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 imgCatIds.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 objectInfo150.txt\n|   |\u2500\u2500 sceneCategories.txt\n</code></pre> <p>\u200b\u4e0a\u8ff0\u200b\u6587\u4ef6\u5939\u200b\u5305\u62ec\u200bADE20K\u200b\u7684\u200b\u8bed\u4e49\u200b\u5206\u5272\u200b\u3001\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u548c\u200b\u6cdb\u200b\u5728\u200b\u5206\u5272\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u3002</p>"},{"location":"user_guides/dataset_prepare/#opendatalab","title":"\u4ece\u200b OpenDataLab \u200b\u4e2d\u200b\u4e0b\u8f7d","text":"<p>OpenDataLab \u200b\u4e3a\u200b\u4eba\u5de5\u667a\u80fd\u200b\u7814\u7a76\u8005\u200b\u63d0\u4f9b\u200b\u514d\u8d39\u200b\u5f00\u6e90\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u901a\u8fc7\u200b OpenDataLab\uff0c\u200b\u7814\u7a76\u8005\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u683c\u5f0f\u200b\u7edf\u4e00\u200b\u7684\u200b\u5404\u200b\u9886\u57df\u200b\u7ecf\u5178\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u901a\u8fc7\u200b\u5e73\u53f0\u200b\u7684\u200b\u641c\u7d22\u200b\u529f\u80fd\u200b\uff0c\u200b\u7814\u7a76\u8005\u200b\u53ef\u4ee5\u200b\u8fc5\u901f\u200b\u4fbf\u6377\u200b\u5730\u200b\u627e\u5230\u200b\u81ea\u5df1\u200b\u6240\u200b\u9700\u200b\u6570\u636e\u200b\u96c6\u200b\uff1b\u200b\u901a\u8fc7\u200b\u5e73\u53f0\u200b\u7684\u200b\u7edf\u4e00\u200b\u683c\u5f0f\u200b\uff0c\u200b\u7814\u7a76\u8005\u200b\u53ef\u4ee5\u200b\u4fbf\u6377\u200b\u5730\u200b\u5bf9\u200b\u8de8\u200b\u6570\u636e\u200b\u96c6\u200b\u4efb\u52a1\u200b\u8fdb\u884c\u200b\u5f00\u53d1\u200b\u3002</p> <p>\u200b\u76ee\u524d\u200b\uff0cMIM \u200b\u652f\u6301\u200b\u4f7f\u7528\u200b\u4e00\u6761\u200b\u547d\u4ee4\u884c\u200b\u4ece\u200b OpenDataLab \u200b\u4e2d\u200b\u4e0b\u8f7d\u200b VOC \u200b\u548c\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u540e\u7eed\u200b\u5c06\u200b\u652f\u6301\u200b\u66f4\u200b\u591a\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b OpenDataLab \u200b\u5e73\u53f0\u200b\u4e0b\u8f7d\u200b\u4f60\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u200b\u4e3a\u200b MMDetection \u200b\u6240\u200b\u8981\u6c42\u200b\u7684\u200b\u683c\u5f0f\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b MIM \u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u7248\u672c\u200b\u5927\u4e8e\u200b v0.3.8\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u66f4\u65b0\u200b:</p> <pre><code>pip install -U openmim\n</code></pre> <pre><code># install OpenXLab CLI tools\npip install -U openxlab\n# log in OpenXLab, registry\nopenxlab login\n\n# download voc2007 and preprocess by MIM\nmim download mmdet --dataset voc2007\n\n# download voc2012 and preprocess by MIM\nmim download mmdet --dataset voc2012\n\n# download coco2017 and preprocess by MIM\nmim download mmdet --dataset coco2017\n</code></pre>"},{"location":"user_guides/deploy/","title":"\u6a21\u578b\u200b\u90e8\u7f72","text":"<p>MMDeploy \u200b\u662f\u200b OpenMMLab \u200b\u7684\u200b\u90e8\u7f72\u200b\u4ed3\u5e93\u200b\uff0c\u200b\u8d1f\u8d23\u200b\u5305\u62ec\u200b MMPretrain\u3001MMDetection \u200b\u7b49\u200b\u5728\u5185\u200b\u7684\u200b\u5404\u200b\u7b97\u6cd5\u200b\u5e93\u200b\u7684\u200b\u90e8\u7f72\u200b\u5de5\u4f5c\u200b\u3002 \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u8fd9\u91cc\u200b\u83b7\u53d6\u200b MMDeploy \u200b\u5bf9\u200b MMDetection \u200b\u90e8\u7f72\u200b\u652f\u6301\u200b\u7684\u200b\u6700\u65b0\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u672c\u6587\u200b\u7684\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u5b89\u88c5\u200b</li> <li>\u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b</li> <li>\u200b\u6a21\u578b\u200b\u89c4\u8303\u200b</li> <li>\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b</li> <li>\u200b\u540e\u200b\u7aef\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b</li> <li>SDK \u200b\u6a21\u578b\u200b\u63a8\u7406\u200b</li> <li> </li> </ul>"},{"location":"user_guides/deploy/#_2","title":"\u6a21\u578b\u200b\u652f\u6301\u200b\u5217\u8868","text":""},{"location":"user_guides/deploy/#_3","title":"\u5b89\u88c5","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b\u6b64\u5904\u200b\u5b89\u88c5\u200b mmdet\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u6309\u7167\u200b\u8bf4\u660e\u200b\u5b89\u88c5\u200b mmdeploy\u3002</p> <pre><code>\u200b\u5982\u679c\u200b\u5b89\u88c5\u200b\u7684\u200b\u662f\u200b mmdeploy \u200b\u9884\u200b\u7f16\u8bd1\u200b\u5305\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4e5f\u200b\u8bf7\u200b\u901a\u8fc7\u200b 'git clone https://github.com/open-mmlab/mmdeploy.git --depth=1' \u200b\u4e0b\u8f7d\u200b mmdeploy \u200b\u6e90\u7801\u200b\u3002\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u5305\u542b\u200b\u4e86\u200b\u90e8\u7f72\u200b\u65f6\u8981\u200b\u7528\u5230\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n</code></pre>"},{"location":"user_guides/deploy/#_4","title":"\u6a21\u578b\u200b\u8f6c\u6362","text":"<p>\u200b\u5047\u8bbe\u200b\u5728\u200b\u5b89\u88c5\u200b\u6b65\u9aa4\u200b\u4e2d\u200b\uff0cmmdetection \u200b\u548c\u200b mmdeploy \u200b\u4ee3\u7801\u200b\u5e93\u200b\u5728\u200b\u540c\u7ea7\u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5f53\u524d\u200b\u7684\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b\u4e3a\u200b mmdetection \u200b\u7684\u200b\u6839\u76ee\u5f55\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4ee5\u200b Faster R-CNN \u200b\u6a21\u578b\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u6b64\u5904\u200b\u4e0b\u8f7d\u200b\u5bf9\u5e94\u200b\u7684\u200b checkpoint\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u5c06\u200b\u4e4b\u200b\u8f6c\u6362\u200b\u4e3a\u200b onnx \u200b\u6a21\u578b\u200b\uff1a</p> <pre><code>from mmdeploy.apis import torch2onnx\nfrom mmdeploy.backend.sdk.export_info import export2SDK\n\nimg = 'demo/demo.jpg'\nwork_dir = 'mmdeploy_models/mmdet/onnx'\nsave_file = 'end2end.onnx'\ndeploy_cfg = '../mmdeploy/configs/mmdet/detection/detection_onnxruntime_dynamic.py'\nmodel_cfg = 'configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py'\nmodel_checkpoint = 'faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'\ndevice = 'cpu'\n\n# 1. convert model to onnx\ntorch2onnx(img, work_dir, save_file, deploy_cfg, model_cfg,\n           model_checkpoint, device)\n\n# 2. extract pipeline info for inference by MMDeploy SDK\nexport2SDK(deploy_cfg, model_cfg, work_dir, pth=model_checkpoint,\n           device=device)\n</code></pre> <p>\u200b\u8f6c\u6362\u200b\u7684\u200b\u5173\u952e\u200b\u4e4b\u4e00\u200b\u662f\u200b\u4f7f\u7528\u200b\u6b63\u786e\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u9879\u76ee\u200b\u4e2d\u200b\u5df2\u200b\u5185\u7f6e\u200b\u4e86\u200b\u5404\u540e\u200b\u7aef\u200b\u90e8\u7f72\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002 \u200b\u6587\u4ef6\u200b\u7684\u200b\u547d\u540d\u200b\u6a21\u5f0f\u200b\u662f\u200b\uff1a</p> <pre><code>{task}/{task}_{backend}-{precision}_{static | dynamic}_{shape}.py\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>{task}: mmdet \u200b\u4e2d\u200b\u7684\u200b\u4efb\u52a1\u200b</li> </ul> <p>mmdet \u200b\u4efb\u52a1\u200b\u6709\u200b2\u200b\u79cd\u200b\uff1a\u200b\u7269\u4f53\u200b\u68c0\u6d4b\u200b\uff08detection\uff09\u3001\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\uff08instance-seg\uff09\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>RetinaNet</code>\u3001<code>Faster R-CNN</code>\u3001<code>DETR</code>\u200b\u7b49\u200b\u5c5e\u4e8e\u200b\u524d\u8005\u200b\u3002<code>Mask R-CNN</code>\u3001<code>SOLO</code>\u200b\u7b49\u200b\u5c5e\u4e8e\u200b\u540e\u8005\u200b\u3002\u200b\u66f4\u200b\u591a\u200b<code>\u200b\u6a21\u578b\u200b-\u200b\u4efb\u52a1\u200b</code>\u200b\u7684\u200b\u5212\u5206\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u7ae0\u8282\u200b\u6a21\u578b\u200b\u652f\u6301\u200b\u5217\u8868\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u52a1\u5fc5\u200b\u4f7f\u7528\u200b <code>detection/detection_*.py</code> \u200b\u8f6c\u6362\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>instance-seg/instance-seg_*.py</code> \u200b\u8f6c\u6362\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u6a21\u578b\u200b\u3002</p> <ul> <li> <p>{backend}: \u200b\u63a8\u7406\u200b\u540e\u200b\u7aef\u200b\u540d\u79f0\u200b\u3002\u200b\u6bd4\u5982\u200b\uff0connxruntime\u3001tensorrt\u3001pplnn\u3001ncnn\u3001openvino\u3001coreml \u200b\u7b49\u7b49\u200b</p> </li> <li> <p>{precision}: \u200b\u63a8\u7406\u200b\u7cbe\u5ea6\u200b\u3002\u200b\u6bd4\u5982\u200b\uff0cfp16\u3001int8\u3002\u200b\u4e0d\u586b\u200b\u8868\u793a\u200b fp32</p> </li> <li> <p>{static | dynamic}: \u200b\u52a8\u6001\u200b\u3001\u200b\u9759\u6001\u200b shape</p> </li> <li> <p>{shape}: \u200b\u6a21\u578b\u200b\u8f93\u5165\u200b\u7684\u200b shape \u200b\u6216\u8005\u200b shape \u200b\u8303\u56f4\u200b</p> </li> </ul> <p>\u200b\u5728\u200b\u4e0a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u628a\u200b <code>Faster R-CNN</code> \u200b\u8f6c\u4e3a\u200b\u5176\u4ed6\u200b\u540e\u200b\u7aef\u200b\u6a21\u578b\u200b\u3002\u200b\u6bd4\u5982\u200b\u4f7f\u7528\u200b<code>detection_tensorrt-fp16_dynamic-320x320-1344x1344.py</code>\uff0c\u200b\u628a\u200b\u6a21\u578b\u200b\u8f6c\u4e3a\u200b tensorrt-fp16 \u200b\u6a21\u578b\u200b\u3002</p> <pre><code>\u200b\u5f53\u8f6c\u200b tensorrt \u200b\u6a21\u578b\u200b\u65f6\u200b, --device \u200b\u9700\u8981\u200b\u88ab\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b \"cuda\"\n</code></pre>"},{"location":"user_guides/deploy/#_5","title":"\u6a21\u578b\u200b\u89c4\u8303","text":"<p>\u200b\u5728\u200b\u4f7f\u7528\u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u4e4b\u524d\u200b\uff0c\u200b\u6709\u200b\u5fc5\u8981\u200b\u4e86\u89e3\u200b\u8f6c\u6362\u200b\u7ed3\u679c\u200b\u7684\u200b\u7ed3\u6784\u200b\u3002 \u200b\u5b83\u200b\u5b58\u653e\u200b\u5728\u200b <code>--work-dir</code> \u200b\u6307\u5b9a\u200b\u7684\u200b\u8def\u200b\u8def\u5f84\u200b\u4e0b\u200b\u3002</p> <p>\u200b\u4e0a\u4f8b\u200b\u4e2d\u200b\u7684\u200b<code>mmdeploy_models/mmdet/onnx</code>\uff0c\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdeploy_models/mmdet/onnx\n\u251c\u2500\u2500 deploy.json\n\u251c\u2500\u2500 detail.json\n\u251c\u2500\u2500 end2end.onnx\n\u2514\u2500\u2500 pipeline.json\n</code></pre> <p>\u200b\u91cd\u8981\u200b\u7684\u200b\u662f\u200b\uff1a</p> <ul> <li>end2end.onnx: \u200b\u63a8\u7406\u200b\u5f15\u64ce\u200b\u6587\u4ef6\u200b\u3002\u200b\u53ef\u7528\u200b ONNX Runtime \u200b\u63a8\u7406\u200b</li> <li>xxx.json:  mmdeploy SDK \u200b\u63a8\u7406\u200b\u6240\u200b\u9700\u200b\u7684\u200b meta \u200b\u4fe1\u606f\u200b</li> </ul> <p>\u200b\u6574\u4e2a\u200b\u6587\u4ef6\u5939\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200bmmdeploy SDK model\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0cmmdeploy SDK model\u200b\u65e2\u200b\u5305\u62ec\u200b\u63a8\u7406\u200b\u5f15\u64ce\u200b\uff0c\u200b\u4e5f\u200b\u5305\u62ec\u200b\u63a8\u7406\u200b meta \u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"user_guides/deploy/#_6","title":"\u6a21\u578b\u200b\u63a8\u7406","text":""},{"location":"user_guides/deploy/#_7","title":"\u540e\u200b\u7aef\u200b\u6a21\u578b\u200b\u63a8\u7406","text":"<p>\u200b\u4ee5\u200b\u4e0a\u8ff0\u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b <code>end2end.onnx</code> \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\uff1a</p> <pre><code>from mmdeploy.apis.utils import build_task_processor\nfrom mmdeploy.utils import get_input_shape, load_config\nimport torch\n\ndeploy_cfg = '../mmdeploy/configs/mmdet/detection/detection_onnxruntime_dynamic.py'\nmodel_cfg = 'configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py'\ndevice = 'cpu'\nbackend_model = ['mmdeploy_models/mmdet/onnx/end2end.onnx']\nimage = 'demo/demo.jpg'\n\n# read deploy_cfg and model_cfg\ndeploy_cfg, model_cfg = load_config(deploy_cfg, model_cfg)\n\n# build task and backend model\ntask_processor = build_task_processor(model_cfg, deploy_cfg, device)\nmodel = task_processor.build_backend_model(backend_model)\n\n# process input image\ninput_shape = get_input_shape(deploy_cfg)\nmodel_inputs, _ = task_processor.create_input(image, input_shape)\n\n# do model inference\nwith torch.no_grad():\n    result = model.test_step(model_inputs)\n\n# visualize results\ntask_processor.visualize(\n    image=image,\n    model=model,\n    result=result[0],\n    window_name='visualize',\n    output_file='output_detection.png')\n</code></pre>"},{"location":"user_guides/deploy/#sdk","title":"SDK \u200b\u6a21\u578b\u200b\u63a8\u7406","text":"<p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5bf9\u200b SDK model \u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\uff1a</p> <pre><code>from mmdeploy_python import Detector\nimport cv2\n\nimg = cv2.imread('demo/demo.jpg')\n\n# create a detector\ndetector = Detector(model_path='mmdeploy_models/mmdet/onnx',\n                    device_name='cpu', device_id=0)\n# perform inference\nbboxes, labels, masks = detector(img)\n\n# visualize inference result\nindices = [i for i in range(len(bboxes))]\nfor index, bbox, label_id in zip(indices, bboxes, labels):\n    [left, top, right, bottom], score = bbox[0:4].astype(int), bbox[4]\n    if score &lt; 0.3:\n        continue\n\n    cv2.rectangle(img, (left, top), (right, bottom), (0, 255, 0))\n\ncv2.imwrite('output_detection.png', img)\n</code></pre> <p>\u200b\u9664\u4e86\u200bpython API\uff0cmmdeploy SDK \u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8bf8\u5982\u200b C\u3001C++\u3001C#\u3001Java\u200b\u7b49\u200b\u591a\u200b\u8bed\u8a00\u200b\u63a5\u53e3\u200b\u3002 \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u6837\u4f8b\u200b\u5b66\u4e60\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u63a5\u53e3\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"user_guides/deploy/#_8","title":"\u6a21\u578b\u200b\u652f\u6301\u200b\u5217\u8868","text":"<p>\u200b\u8bf7\u200b\u53c2\u8003\u200b\u8fd9\u91cc\u200b</p>"},{"location":"user_guides/finetune/","title":"\u6a21\u578b\u200b\u5fae\u8c03","text":"<p>\u200b\u5728\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b\u68c0\u6d4b\u5668\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u5176\u4ed6\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u4f8b\u5982\u200b CityScapes \u200b\u548c\u200b KITTI \u200b\u6570\u636e\u200b\u96c6\u200b\uff09\u200b\u4f18\u8d28\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u3002 \u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u6307\u5bfc\u200b\u7528\u6237\u200b\u5982\u4f55\u200b\u628a\u200b ModelZoo \u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u7684\u200b\u6a21\u578b\u200b\u7528\u4e8e\u200b\u5176\u4ed6\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u5e76\u200b\u4f7f\u5f97\u200b\u5f53\u524d\u200b\u6240\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6a21\u578b\u200b\u83b7\u5f97\u200b\u66f4\u597d\u200b\u6027\u80fd\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5728\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u5fae\u8c03\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6b65\u9aa4\u200b\u3002</p> <ul> <li>\u200b\u6309\u200b \u200b\u6559\u7a0b\u200b2\uff1a\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b \u200b\u4e2d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5bf9\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u200b\u6dfb\u52a0\u200b\u652f\u6301\u200b\u4e2d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5bf9\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u200b\u6dfb\u52a0\u200b\u652f\u6301\u200b</li> <li>\u200b\u6309\u7167\u200b\u672c\u200b\u6559\u7a0b\u200b\u4e2d\u200b\u6240\u200b\u8ba8\u8bba\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b</li> </ul> <p>\u200b\u63a5\u4e0b\u6765\u200b\u5c06\u4f1a\u200b\u4ee5\u200b Cityscapes Dataset \u200b\u4e0a\u200b\u7684\u200b\u5fae\u8c03\u200b\u8fc7\u7a0b\u200b\u4f5c\u4e3a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5177\u4f53\u200b\u8bb2\u8ff0\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u4fee\u6539\u200b\u7684\u200b\u4e94\u4e2a\u200b\u90e8\u5206\u200b\u3002</p>"},{"location":"user_guides/finetune/#_2","title":"\u7ee7\u627f\u200b\u57fa\u7840\u200b\u914d\u7f6e","text":"<p>\u200b\u4e3a\u4e86\u200b\u51cf\u8f7b\u200b\u7f16\u5199\u200b\u6574\u4e2a\u200b\u914d\u7f6e\u200b\u7684\u200b\u8d1f\u62c5\u200b\u5e76\u200b\u51cf\u5c11\u200b\u6f0f\u6d1e\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c MMDetection V3.0 \u200b\u652f\u6301\u200b\u4ece\u200b\u591a\u4e2a\u200b\u73b0\u6709\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u7ee7\u627f\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u3002\u200b\u5fae\u8c03\u200b MaskRCNN \u200b\u6a21\u578b\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u4ece\u200b <code>_base_/models/mask_rcnn_r50_fpn.py</code> \u200b\u4e2d\u200b\u7ee7\u627f\u200b\u7684\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u6765\u200b\u6784\u5efa\u200b\u6a21\u578b\u200b\u7684\u200b\u57fa\u672c\u200b\u7ed3\u6784\u200b\u3002\u200b\u5f53\u200b\u4f7f\u7528\u200b Cityscapes \u200b\u6570\u636e\u200b\u96c6\u65f6\u200b\uff0c\u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u7b80\u4fbf\u200b\u5730\u200b\u4ece\u200b<code>_base_/datasets/cityscapes_instance.py</code> \u200b\u4e2d\u200b\u7ee7\u627f\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u8fd0\u884c\u200b\u8bbe\u7f6e\u200b\u90e8\u5206\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>logger settings</code>\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u53ef\u4ee5\u200b\u4ece\u200b <code>_base_/default_runtime.py</code> \u200b\u4e2d\u200b\u7ee7\u627f\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u8bad\u7ec3\u200b\u8ba1\u5212\u200b\u7684\u200b\u914d\u7f6e\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4ece\u200b<code>_base_/schedules/schedule_1x.py</code> \u200b\u4e2d\u200b\u7ee7\u627f\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5b58\u653e\u200b\u4e8e\u200b <code>configs</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u5168\u90e8\u5185\u5bb9\u200b\u7684\u200b\u91cd\u65b0\u200b\u7f16\u5199\u200b\u800c\u200b\u4e0d\u662f\u200b\u4f7f\u7528\u200b\u7ee7\u627f\u200b\u65b9\u6cd5\u200b\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/mask_rcnn_r50_fpn.py',\n    '../_base_/datasets/cityscapes_instance.py', '../_base_/default_runtime.py',\n    '../_base_/schedules/schedule_1x.py'\n]\n</code></pre>"},{"location":"user_guides/finetune/#head","title":"Head \u200b\u7684\u200b\u4fee\u6539","text":"<p>\u200b\u63a5\u4e0b\u6765\u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u8fd8\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u91cf\u200b\u5bf9\u200b Head \u200b\u8fdb\u884c\u200b\u4fee\u6539\u200b\u3002\u200b\u53ea\u200b\u9700\u8981\u200b\u5bf9\u200b roi_head \u200b\u4e2d\u200b\u7684\u200b <code>num_classes</code>\u200b\u8fdb\u884c\u200b\u4fee\u6539\u200b\u3002\u200b\u4fee\u6539\u200b\u540e\u200b\u9664\u4e86\u200b\u6700\u540e\u200b\u7684\u200b\u9884\u6d4b\u200b\u6a21\u578b\u200b\u7684\u200b Head \u200b\u4e4b\u5916\u200b\uff0c\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u7684\u200b\u5927\u90e8\u5206\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u91cd\u65b0\u200b\u4f7f\u7528\u200b\u3002</p> <pre><code>model = dict(\n    roi_head=dict(\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=8,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0., 0., 0., 0.],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0)),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=8,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))))\n</code></pre>"},{"location":"user_guides/finetune/#_3","title":"\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u4fee\u6539","text":"<p>\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u8fd8\u200b\u9700\u8981\u200b\u51c6\u5907\u200b\u6570\u636e\u200b\u96c6\u200b\u5e76\u200b\u7f16\u5199\u200b\u6709\u5173\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u53ef\u200b\u5728\u200b Customize Datasets \u200b\u4e2d\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u3002\u200b\u76ee\u524d\u200b MMDetection V3.0 \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5df2\u7ecf\u200b\u652f\u6301\u200b VOC\u3001WIDERFACE\u3001COCO\u3001LIVS\u3001OpenImages\u3001DeepFashion\u3001Objects365 \u200b\u548c\u200b Cityscapes Dataset \u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"user_guides/finetune/#_4","title":"\u8bad\u7ec3\u200b\u7b56\u7565\u200b\u7684\u200b\u4fee\u6539","text":"<p>\u200b\u5fae\u8c03\u200b\u8d85\u200b\u53c2\u6570\u200b\u4e0e\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8bad\u7ec3\u200b\u7b56\u7565\u200b\u4e0d\u540c\u200b\u3002\u200b\u5b83\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b\u66f4\u200b\u5c11\u200b\u7684\u200b\u8bad\u7ec3\u200b\u56de\u5408\u200b\u3002</p> <pre><code># \u200b\u4f18\u5316\u200b\u5668\u200b\n# batch size \u200b\u4e3a\u200b 8 \u200b\u65f6\u200b\u7684\u200b lr \u200b\u914d\u7f6e\u200b\noptim_wrapper = dict(optimizer=dict(lr=0.01))\n\n# \u200b\u5b66\u4e60\u200b\u7387\u200b\nparam_scheduler = [\n    dict(\n        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0, end=500),\n    dict(\n        type='MultiStepLR',\n        begin=0,\n        end=8,\n        by_epoch=True,\n        milestones=[7],\n        gamma=0.1)\n]\n\n# \u200b\u8bbe\u7f6e\u200b max epoch\ntrain_cfg = dict(max_epochs=8)\n\n# \u200b\u8bbe\u7f6e\u200b log config\ndefault_hooks = dict(logger=dict(interval=100)),\n</code></pre>"},{"location":"user_guides/finetune/#_5","title":"\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b","text":"<p>\u200b\u5982\u679c\u200b\u8981\u200b\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>load_from</code> \u200b\u4e2d\u200b\u67e5\u9605\u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b\u8bad\u7ec3\u200b\u5f00\u59cb\u200b\u4e4b\u524d\u200b\u4e0b\u8f7d\u200b\u597d\u200b\u9700\u8981\u200b\u7684\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6d6a\u8d39\u200b\u4e86\u200b\u5b9d\u8d35\u65f6\u95f4\u200b\u3002</p> <pre><code>load_from = 'https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth'  # noqa\n</code></pre>"},{"location":"user_guides/inference/","title":"\u4f7f\u7528\u200b\u5df2\u6709\u200b\u6a21\u578b\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u7406","text":"<p>MMDetection \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8bb8\u591a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u597d\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b Model Zoo \u200b\u67e5\u770b\u200b\u5177\u4f53\u200b\u6709\u200b\u54ea\u4e9b\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u63a8\u7406\u200b\u5177\u4f53\u200b\u6307\u200b\u4f7f\u7528\u200b\u8bad\u7ec3\u200b\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\u6765\u200b\u68c0\u6d4b\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u7684\u200b\u76ee\u6807\u200b\uff0c\u200b\u672c\u6587\u200b\u5c06\u4f1a\u200b\u5c55\u793a\u200b\u5177\u4f53\u6b65\u9aa4\u200b\u3002</p> <p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b \u200b\u548c\u200b\u5bf9\u5e94\u200b\u88ab\u200b\u5b58\u50a8\u200b\u5728\u200b checkpoint \u200b\u6587\u4ef6\u200b\u5185\u200b\u7684\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u4ece\u200b RTMDet \u200b\u5f00\u59cb\u200b\uff0c\u200b\u5176\u200b \u200b\u914d\u7f6e\u200b \u200b\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b\u5728\u200b\u6b64\u200b\u3002 \u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5c06\u200b checkpoint \u200b\u6587\u4ef6\u200b\u4e0b\u8f7d\u200b\u5230\u200b <code>checkpoints</code> \u200b\u6587\u4ef6\u5939\u200b\u5185\u200b\u3002</p>"},{"location":"user_guides/inference/#_2","title":"\u63a8\u7406\u200b\u7684\u200b\u9ad8\u5c42\u200b\u7f16\u7a0b\u200b\u63a5\u53e3\u200b\u2014\u2014\u200b\u63a8\u7406\u200b\u5668","text":"<p>\u200b\u5728\u200b OpenMMLab \u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u63a8\u7406\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u88ab\u200b\u7edf\u4e00\u200b\u5230\u200b\u4e86\u200b\u63a8\u7406\u200b\u5668\u200b <code>Inferencer</code> \u200b\u4e2d\u200b\u3002\u200b\u63a8\u7406\u200b\u5668\u200b\u88ab\u200b\u8bbe\u8ba1\u200b\u6210\u4e3a\u200b\u4e00\u4e2a\u200b\u7b80\u6d01\u200b\u6613\u7528\u200b\u7684\u200b API\uff0c\u200b\u5b83\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b OpenMMLab \u200b\u5e93\u4e2d\u200b\u90fd\u200b\u6709\u7740\u200b\u975e\u5e38\u200b\u76f8\u4f3c\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002 \u200b\u4e0b\u9762\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u6f14\u793a\u200b\u6837\u4f8b\u200b\u90fd\u200b\u653e\u5728\u200b demo/inference_demo.ipynb \u200b\u4e2d\u200b\u65b9\u4fbf\u200b\u5927\u5bb6\u200b\u5c1d\u8bd5\u200b\u3002</p>"},{"location":"user_guides/inference/#_3","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":"<p>\u200b\u4f7f\u7528\u200b <code>DetInferencer</code>\uff0c\u200b\u60a8\u200b\u53ea\u200b\u9700\u200b 3 \u200b\u884c\u200b\u4ee3\u7801\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u63a8\u7406\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>from mmdet.apis import DetInferencer\n\n# \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\ninferencer = DetInferencer('rtmdet_tiny_8xb32-300e_coco')\n\n# \u200b\u63a8\u7406\u200b\u793a\u4f8b\u200b\u56fe\u7247\u200b\ninferencer('demo/demo.jpg', show=True)\n</code></pre> <p>\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u5c06\u200b\u88ab\u200b\u663e\u793a\u200b\u5728\u200b\u4e00\u4e2a\u200b\u65b0\u7a97\u53e3\u200b\u4e2d\u200b\uff1a</p> <pre><code>\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u6ca1\u6709\u200b GUI \u200b\u7684\u200b\u670d\u52a1\u5668\u200b\u4e0a\u200b\uff0c\u200b\u6216\u8005\u200b\u901a\u8fc7\u200b\u7981\u7528\u200b X11 \u200b\u8f6c\u53d1\u200b\u7684\u200b SSH \u200b\u96a7\u9053\u200b\u8fd0\u884c\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\uff0c`show` \u200b\u9009\u9879\u200b\u5c06\u200b\u4e0d\u8d77\u4f5c\u7528\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u4f60\u200b\u4ecd\u7136\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b `out_dir` \u200b\u53c2\u6570\u200b\u5c06\u200b\u53ef\u89c6\u5316\u200b\u6570\u636e\u200b\u4fdd\u5b58\u200b\u5230\u200b\u6587\u4ef6\u200b\u3002\u200b\u9605\u8bfb\u200b [\u200b\u50a8\u5b58\u200b\u7ed3\u679c\u200b](#\u200b\u50a8\u5b58\u200b\u7ed3\u679c\u200b) \u200b\u4e86\u89e3\u200b\u8be6\u60c5\u200b\u3002\n</code></pre>"},{"location":"user_guides/inference/#_4","title":"\u521d\u59cb\u5316","text":"<p>\u200b\u6bcf\u4e2a\u200b\u63a8\u7406\u200b\u5668\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u3002\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u9009\u62e9\u200b\u63a8\u7406\u200b\u8bbe\u5907\u200b\u3002</p>"},{"location":"user_guides/inference/#_5","title":"\u6a21\u578b\u200b\u521d\u59cb\u5316","text":"<ul> <li>\u200b\u8981\u200b\u7528\u200b MMDetection \u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u628a\u200b\u5b83\u200b\u7684\u200b\u540d\u5b57\u200b\u4f20\u7ed9\u200b\u53c2\u6570\u200b <code>model</code>\uff0c\u200b\u6743\u91cd\u200b\u5c06\u200b\u81ea\u52a8\u200b\u4ece\u200b OpenMMLab \u200b\u7684\u200b\u6a21\u578b\u5e93\u200b\u4e2d\u200b\u4e0b\u8f7d\u200b\u548c\u200b\u52a0\u8f7d\u200b\u3002</li> </ul> <pre><code>inferencer = DetInferencer(model='rtmdet_tiny_8xb32-300e_coco')\n</code></pre> <p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u6709\u200b\u4e00\u4e2a\u200b\u975e\u5e38\u5bb9\u6613\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u6a21\u578b\u200b\u540d\u79f0\u200b\u3002</p> <pre><code># models \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u540d\u79f0\u200b\u5217\u8868\u200b\uff0c\u200b\u5b83\u4eec\u200b\u5c06\u200b\u81ea\u52a8\u200b\u6253\u5370\u200b\nmodels = DetInferencer.list_models('mmdet')\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5c06\u200b\u6743\u91cd\u200b\u7684\u200b\u8def\u5f84\u200b\u6216\u200b URL \u200b\u4f20\u9012\u200b\u7ed9\u200b <code>weights</code> \u200b\u6765\u200b\u8ba9\u200b\u63a8\u7406\u200b\u5668\u200b\u52a0\u8f7d\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u6743\u91cd\u200b\u3002</p> <pre><code>inferencer = DetInferencer(model='rtmdet_tiny_8xb32-300e_coco', weights='path/to/rtmdet.pth')\n</code></pre> <ul> <li>\u200b\u8981\u200b\u52a0\u8f7d\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u914d\u7f6e\u200b\u548c\u200b\u6743\u91cd\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u628a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4f20\u7ed9\u200b <code>model</code>\uff0c\u200b\u628a\u200b\u6743\u91cd\u200b\u7684\u200b\u8def\u5f84\u200b\u4f20\u7ed9\u200b <code>weights</code>\u3002</li> </ul> <pre><code>inferencer = DetInferencer(model='path/to/rtmdet_config.py', weights='path/to/rtmdet.pth')\n</code></pre> <ul> <li>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cMMEngine \u200b\u4f1a\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u65f6\u200b\u81ea\u52a8\u200b\u5c06\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8f6c\u50a8\u200b\u5230\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5728\u200b MMEngine \u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6743\u91cd\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>weights</code>\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b <code>model</code>\uff1a</li> </ul> <pre><code># \u200b\u5982\u679c\u200b\u65e0\u6cd5\u200b\u5728\u200b\u6743\u91cd\u200b\u4e2d\u200b\u627e\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5f15\u53d1\u200b\u9519\u8bef\u200b\u3002\u200b\u76ee\u524d\u200b MMDetection \u200b\u6a21\u578b\u5e93\u200b\u4e2d\u200b\u53ea\u6709\u200b ddq-detr-4scale_r50 \u200b\u7684\u200b\u6743\u91cd\u200b\u53ef\u4ee5\u200b\u8fd9\u6837\u200b\u52a0\u8f7d\u200b\u3002\ninferencer = DetInferencer(weights='https://download.openmmlab.com/mmdetection/v3.0/ddq/ddq-detr-4scale_r50_8xb2-12e_coco/ddq-detr-4scale_r50_8xb2-12e_coco_20230809_170711-42528127.pth')\n</code></pre> <ul> <li>\u200b\u4f20\u9012\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5230\u200b <code>model</code> \u200b\u800c\u200b\u4e0d\u200b\u6307\u5b9a\u200b <code>weights</code> \u200b\u5219\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</li> </ul>"},{"location":"user_guides/inference/#_6","title":"\u63a8\u7406\u200b\u8bbe\u5907","text":"<p>\u200b\u6bcf\u4e2a\u200b\u63a8\u7406\u200b\u5668\u200b\u5b9e\u4f8b\u200b\u90fd\u200b\u4f1a\u200b\u8ddf\u200b\u4e00\u4e2a\u200b\u8bbe\u5907\u200b\u7ed1\u5b9a\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6700\u4f73\u200b\u8bbe\u5907\u200b\u662f\u200b\u7531\u200b MMEngine \u200b\u81ea\u52a8\u200b\u51b3\u5b9a\u200b\u7684\u200b\u3002\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6307\u5b9a\u200b <code>device</code> \u200b\u53c2\u6570\u200b\u6765\u200b\u6539\u53d8\u200b\u8bbe\u5907\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u5728\u200b GPU 1 \u200b\u4e0a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u63a8\u7406\u200b\u5668\u200b\u3002</p> <pre><code>inferencer = DetInferencer(model='rtmdet_tiny_8xb32-300e_coco', device='cuda:1')\n</code></pre> <p>\u200b\u5982\u8981\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u63a8\u7406\u200b\u5668\u200b\uff1a</p> <pre><code>inferencer = DetInferencer(model='rtmdet_tiny_8xb32-300e_coco', device='cpu')\n</code></pre> <p>\u200b\u8bf7\u200b\u53c2\u8003\u200b torch.device \u200b\u4e86\u89e3\u200b <code>device</code> \u200b\u53c2\u6570\u200b\u652f\u6301\u200b\u7684\u200b\u6240\u6709\u200b\u5f62\u5f0f\u200b\u3002</p>"},{"location":"user_guides/inference/#_7","title":"\u63a8\u7406","text":"<p>\u200b\u5f53\u200b\u63a8\u7406\u200b\u5668\u200b\u521d\u59cb\u5316\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f20\u5165\u200b\u8981\u200b\u63a8\u7406\u200b\u7684\u200b\u539f\u59cb\u6570\u636e\u200b\uff0c\u200b\u4ece\u200b\u8fd4\u56de\u503c\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u63a8\u7406\u200b\u7ed3\u679c\u200b\u3002</p>"},{"location":"user_guides/inference/#_8","title":"\u8f93\u5165","text":"<p>\u200b\u8f93\u5165\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4ee5\u4e0b\u200b\u4efb\u610f\u200b\u4e00\u79cd\u200b\u683c\u5f0f\u200b\uff1a</p> <ul> <li>str: \u200b\u56fe\u50cf\u200b\u7684\u200b\u8def\u5f84\u200b/URL\u3002</li> </ul> <pre><code>inferencer('demo/demo.jpg')\n</code></pre> <ul> <li>array: \u200b\u56fe\u50cf\u200b\u7684\u200b numpy \u200b\u6570\u7ec4\u200b\u3002\u200b\u5b83\u200b\u5e94\u8be5\u200b\u662f\u200b BGR \u200b\u683c\u5f0f\u200b\u3002</li> </ul> <pre><code>import mmcv\narray = mmcv.imread('demo/demo.jpg')\ninferencer(array)\n</code></pre> <ul> <li>list: \u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5217\u8868\u200b\u3002\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u90fd\u200b\u5c06\u200b\u5355\u72ec\u200b\u5904\u7406\u200b\u3002</li> </ul> <pre><code>inferencer(['img_1.jpg', 'img_2.jpg])\n# \u200b\u5217\u8868\u200b\u5185\u200b\u6df7\u5408\u200b\u7c7b\u578b\u200b\u4e5f\u200b\u662f\u200b\u5141\u8bb8\u200b\u7684\u200b\ninferencer(['img_1.jpg', array])\n</code></pre> <ul> <li>str: \u200b\u76ee\u5f55\u200b\u7684\u200b\u8def\u5f84\u200b\u3002\u200b\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u56fe\u50cf\u200b\u90fd\u200b\u5c06\u200b\u88ab\u200b\u5904\u7406\u200b\u3002</li> </ul> <pre><code>inferencer('path/to/your_imgs/')\n</code></pre>"},{"location":"user_guides/inference/#_9","title":"\u8f93\u51fa","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u63a8\u7406\u200b\u5668\u200b\u90fd\u200b\u4ee5\u200b\u5b57\u5178\u200b\u683c\u5f0f\u200b\u8fd4\u56de\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002</p> <ul> <li> <p><code>visualization</code> \u200b\u5305\u542b\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002\u200b\u4f46\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5217\u8868\u200b\uff0c\u200b\u9664\u975e\u200b <code>return_vis=True</code>\u3002</p> </li> <li> <p><code>predictions</code> \u200b\u5305\u542b\u200b\u4ee5\u200b json-\u200b\u53ef\u200b\u5e8f\u5217\u5316\u200b\u683c\u5f0f\u200b\u8fd4\u56de\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002</p> </li> </ul> <pre><code>{\n      'predictions' : [\n        # \u200b\u6bcf\u4e2a\u200b\u5b9e\u4f8b\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\u4e00\u4e2a\u200b\u8f93\u5165\u200b\u56fe\u50cf\u200b\n        {\n          'labels': [...],  # \u200b\u6574\u6570\u200b\u5217\u8868\u200b\uff0c\u200b\u957f\u5ea6\u200b\u4e3a\u200b (N, )\n          'scores': [...],  # \u200b\u6d6e\u70b9\u200b\u5217\u8868\u200b\uff0c\u200b\u957f\u5ea6\u200b\u4e3a\u200b (N, )\n          'bboxes': [...],  # 2d \u200b\u5217\u8868\u200b\uff0c\u200b\u5f62\u72b6\u200b\u4e3a\u200b (N, 4)\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b [min_x, min_y, max_x, max_y]\n        },\n        ...\n      ],\n      'visualization' : [\n        array(..., dtype=uint8),\n      ]\n  }\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u4ece\u200b\u6a21\u578b\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u539f\u59cb\u200b\u8f93\u51fa\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b <code>return_datasamples</code> \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>True</code> \u200b\u6765\u200b\u83b7\u53d6\u200b\u539f\u59cb\u200b\u7684\u200b DataSample\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5b58\u50a8\u200b\u5728\u200b <code>predictions</code> \u200b\u4e2d\u200b\u3002</p>"},{"location":"user_guides/inference/#_10","title":"\u50a8\u5b58\u200b\u7ed3\u679c","text":"<p>\u200b\u9664\u4e86\u200b\u4ece\u200b\u8fd4\u56de\u503c\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4f60\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>out_dir</code> \u200b\u548c\u200b <code>no_save_pred</code>/<code>no_save_vis</code> \u200b\u53c2\u6570\u200b\u5c06\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u5bfc\u51fa\u200b\u5230\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002</p> <pre><code>inferencer('demo/demo.jpg', out_dir='outputs/', no_save_pred=False)\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>outputs\n\u251c\u2500\u2500 preds\n\u2502   \u2514\u2500\u2500 demo.json\n\u2514\u2500\u2500 vis\n    \u2514\u2500\u2500 demo.jpg\n</code></pre>"},{"location":"user_guides/inference/#_11","title":"\u6279\u91cf\u200b\u63a8\u7406","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b <code>batch_size</code> \u200b\u6765\u81ea\u200b\u5b9a\u4e49\u200b\u6279\u91cf\u200b\u63a8\u7406\u200b\u7684\u200b\u6279\u200b\u5927\u5c0f\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u6279\u200b\u5927\u5c0f\u200b\u4e3a\u200b 1\u3002</p>"},{"location":"user_guides/inference/#api","title":"API","text":"<p>\u200b\u8fd9\u91cc\u200b\u5217\u51fa\u200b\u4e86\u200b\u63a8\u7406\u200b\u5668\u200b\u8be6\u5c3d\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u3002</p> <ul> <li>DetInferencer.__init__():</li> </ul> \u200b\u53c2\u6570\u200b \u200b\u7c7b\u578b\u200b \u200b\u9ed8\u8ba4\u503c\u200b \u200b\u63cf\u8ff0\u200b <code>model</code> str , \u200b\u53ef\u200b\u9009\u200b None \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u6216\u200b metafile \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u578b\u200b\u540d\u79f0\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b 'rtmdet-s' \u200b\u6216\u200b 'rtmdet_s_8xb32-300e_coco' \u200b\u6216\u200b 'configs/rtmdet/rtmdet_s_8xb32-300e_coco.py'\u3002\u200b\u5982\u679c\u200b\u672a\u6307\u5b9a\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u6237\u200b\u5fc5\u987b\u200b\u63d0\u4f9b\u200b MMEngine \u200b\u4fdd\u5b58\u200b\u7684\u200b\u5305\u542b\u200b\u914d\u7f6e\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b \"weights\"\u3002 <code>weights</code> str, \u200b\u53ef\u200b\u9009\u200b None \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u3002\u200b\u5982\u679c\u200b\u672a\u6307\u5b9a\u200b\u4e14\u200b <code>model</code> \u200b\u662f\u200b metafile \u200b\u4e2d\u200b\u7684\u200b\u6a21\u578b\u200b\u540d\u79f0\u200b\uff0c\u200b\u6743\u91cd\u200b\u5c06\u200b\u4ece\u200b metafile \u200b\u4e2d\u200b\u52a0\u8f7d\u200b\u3002 <code>device</code> str, \u200b\u53ef\u200b\u9009\u200b None \u200b\u63a8\u7406\u200b\u4f7f\u7528\u200b\u7684\u200b\u8bbe\u5907\u200b\uff0c\u200b\u63a5\u53d7\u200b <code>torch.device</code> \u200b\u5141\u8bb8\u200b\u7684\u200b\u6240\u6709\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c'cuda:0' \u200b\u6216\u200b 'cpu'\u3002\u200b\u5982\u679c\u200b\u4e3a\u200b None\uff0c\u200b\u5c06\u200b\u81ea\u52a8\u200b\u4f7f\u7528\u200b\u53ef\u7528\u200b\u8bbe\u5907\u200b\u3002 \u200b\u9ed8\u8ba4\u200b\u4e3a\u200b None\u3002 <code>scope</code> str, \u200b\u53ef\u200b\u9009\u200b 'mmdet' \u200b\u6a21\u578b\u200b\u7684\u200b\u201d\u200b\u57df\u540d\u200b\u201c\u3002 <code>palette</code> str 'none' \u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u914d\u8272\u200b\u3002\u200b\u4f18\u5148\u200b\u987a\u5e8f\u200b\u4e3a\u200b palette -&gt; config -&gt; checkpoint\u3002 <code>show_progress</code> bool True \u200b\u63a7\u5236\u200b\u662f\u5426\u200b\u5728\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u663e\u793a\u200b\u8fdb\u5ea6\u6761\u200b\u3002 <ul> <li>DetInferencer.__call__()</li> </ul> \u200b\u53c2\u6570\u200b \u200b\u7c7b\u578b\u200b \u200b\u9ed8\u8ba4\u503c\u200b \u200b\u63cf\u8ff0\u200b <code>inputs</code> str/list/tuple/np.array \u200b\u5fc5\u9700\u200b \u200b\u5b83\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u56fe\u7247\u200b/\u200b\u6587\u4ef6\u5939\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u4e00\u4e2a\u200b numpy \u200b\u6570\u7ec4\u200b\uff0c\u200b\u6216\u8005\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u56fe\u7247\u200b\u8def\u5f84\u200b\u6216\u200b numpy \u200b\u6570\u7ec4\u200b\u7684\u200b\u5217\u8868\u200b/\u200b\u5143\u7ec4\u200b <code>batch_size</code> int 1 \u200b\u63a8\u7406\u200b\u7684\u200b\u6279\u200b\u5927\u5c0f\u200b\u3002 <code>return_vis</code> bool False \u200b\u662f\u5426\u200b\u8fd4\u56de\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u3002 <code>show</code> bool False \u200b\u662f\u5426\u200b\u5728\u200b\u5f39\u51fa\u200b\u7a97\u53e3\u200b\u4e2d\u200b\u663e\u793a\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u3002 <code>wait_time</code> float 0 \u200b\u5f39\u7a97\u200b\u5c55\u793a\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u7684\u200b\u65f6\u95f4\u200b\u95f4\u9694\u200b\u3002 <code>no_save_vis</code> bool False \u200b\u662f\u5426\u200b\u5c06\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u4fdd\u5b58\u200b\u5230\u200b <code>out_dir</code>\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b\u4fdd\u5b58\u200b\u3002 <code>draw_pred</code> bool True \u200b\u662f\u5426\u200b\u7ed8\u5236\u200b\u9884\u6d4b\u200b\u7684\u200b\u8fb9\u754c\u200b\u6846\u200b\u3002 <code>pred_score_thr</code> float 0.3 \u200b\u663e\u793a\u200b\u9884\u6d4b\u200b\u6846\u200b\u7684\u200b\u6700\u4f4e\u200b\u7f6e\u4fe1\u5ea6\u200b\u3002 <code>return_datasamples</code> bool False \u200b\u662f\u5426\u200b\u5c06\u200b\u7ed3\u679c\u200b\u4f5c\u4e3a\u200b <code>DetDataSample</code> \u200b\u8fd4\u56de\u200b\u3002 \u200b\u5982\u679c\u200b\u4e3a\u200b False\uff0c\u200b\u5219\u200b\u7ed3\u679c\u200b\u5c06\u200b\u88ab\u200b\u6253\u5305\u200b\u5230\u200b\u4e00\u4e2a\u200b dict \u200b\u4e2d\u200b\u3002 <code>print_result</code> bool False \u200b\u662f\u5426\u200b\u5c06\u200b\u63a8\u7406\u200b\u7ed3\u679c\u200b\u6253\u5370\u200b\u5230\u200b\u63a7\u5236\u53f0\u200b\u3002 <code>no_save_pred</code> bool True \u200b\u662f\u5426\u200b\u5c06\u200b\u63a8\u7406\u200b\u7ed3\u679c\u200b\u4fdd\u5b58\u200b\u5230\u200b <code>out_dir</code>\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b\u4e0d\u200b\u4fdd\u5b58\u200b\u3002 <code>out_dir</code> str '' \u200b\u7ed3\u679c\u200b\u7684\u200b\u8f93\u51fa\u200b\u76ee\u5f55\u200b\u3002 <code>texts</code> str/list[str]\uff0c\u200b\u53ef\u200b\u9009\u200b None \u200b\u6587\u672c\u200b\u63d0\u793a\u200b\u8bcd\u200b\u3002 <code>stuff_texts</code> str/list[str]\uff0c\u200b\u53ef\u200b\u9009\u200b None \u200b\u7269\u4f53\u200b\u6587\u672c\u200b\u63d0\u793a\u200b\u8bcd\u200b\u3002 <code>custom_entities</code> bool False \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u5b9e\u4f53\u200b\u3002\u200b\u53ea\u200b\u7528\u4e8e\u200b GLIP \u200b\u7b97\u6cd5\u200b\u3002 **kwargs \u200b\u4f20\u9012\u200b\u7ed9\u200b :meth:<code>preprocess</code>\u3001:meth:<code>forward</code>\u3001:meth:<code>visualize</code> \u200b\u548c\u200b :meth:<code>postprocess</code> \u200b\u7684\u200b\u5176\u4ed6\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u3002kwargs \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5173\u952e\u5b57\u200b\u90fd\u200b\u5e94\u200b\u5728\u200b\u76f8\u5e94\u200b\u7684\u200b <code>preprocess_kwargs</code>\u3001<code>forward_kwargs</code>\u3001<code>visualize_kwargs</code> \u200b\u548c\u200b <code>postprocess_kwargs</code> \u200b\u4e2d\u200b\u3002"},{"location":"user_guides/inference/#_12","title":"\u6f14\u793a\u200b\u811a\u672c\u200b\u6837\u4f8b","text":"<p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u56db\u4e2a\u200b\u6f14\u793a\u200b\u811a\u672c\u200b\uff0c\u200b\u5b83\u4eec\u200b\u662f\u200b\u4f7f\u7528\u200b\u9ad8\u5c42\u200b\u7f16\u7a0b\u200b\u63a5\u53e3\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002\u200b\u6e90\u7801\u200b\u5728\u200b\u6b64\u200b \u3002</p>"},{"location":"user_guides/inference/#_13","title":"\u56fe\u7247\u200b\u6837\u4f8b","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u5355\u5f20\u200b\u56fe\u7247\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u7684\u200b\u811a\u672c\u200b\u3002</p> <pre><code>python demo/image_demo.py \\\n    ${IMAGE_FILE} \\\n    ${CONFIG_FILE} \\\n    [--weights ${WEIGHTS}] \\\n    [--device ${GPU_ID}] \\\n    [--pred-score-thr ${SCORE_THR}]\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python demo/image_demo.py demo/demo.jpg \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    --weights checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth \\\n    --device cpu\n</code></pre>"},{"location":"user_guides/inference/#_14","title":"\u6444\u50cf\u5934\u200b\u6837\u4f8b","text":"<p>\u200b\u8fd9\u662f\u200b\u4f7f\u7528\u200b\u6444\u50cf\u5934\u200b\u5b9e\u65f6\u200b\u56fe\u7247\u200b\u7684\u200b\u63a8\u7406\u200b\u811a\u672c\u200b\u3002</p> <pre><code>python demo/webcam_demo.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--device ${GPU_ID}] \\\n    [--camera-id ${CAMERA-ID}] \\\n    [--score-thr ${SCORE_THR}]\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python demo/webcam_demo.py \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth\n</code></pre>"},{"location":"user_guides/inference/#_15","title":"\u89c6\u9891\u200b\u6837\u4f8b","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u89c6\u9891\u200b\u6837\u4f8b\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u7684\u200b\u811a\u672c\u200b\u3002</p> <pre><code>python demo/video_demo.py \\\n    ${VIDEO_FILE} \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--device ${GPU_ID}] \\\n    [--score-thr ${SCORE_THR}] \\\n    [--out ${OUT_FILE}] \\\n    [--show] \\\n    [--wait-time ${WAIT_TIME}]\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python demo/video_demo.py demo/demo.mp4 \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth \\\n    --out result.mp4\n</code></pre>"},{"location":"user_guides/inference/#_16","title":"\u89c6\u9891\u200b\u6837\u4f8b\u200b\uff0c\u200b\u663e\u5361\u200b\u52a0\u901f\u200b\u7248\u672c","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u89c6\u9891\u200b\u6837\u4f8b\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u7684\u200b\u811a\u672c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u663e\u5361\u200b\u52a0\u901f\u200b\u3002</p> <pre><code>python demo/video_gpuaccel_demo.py \\\n     ${VIDEO_FILE} \\\n     ${CONFIG_FILE} \\\n     ${CHECKPOINT_FILE} \\\n     [--device ${GPU_ID}] \\\n     [--score-thr ${SCORE_THR}] \\\n     [--nvdecode] \\\n     [--out ${OUT_FILE}] \\\n     [--show] \\\n     [--wait-time ${WAIT_TIME}]\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python demo/video_gpuaccel_demo.py demo/demo.mp4 \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth \\\n    --nvdecode --out result.mp4\n</code></pre>"},{"location":"user_guides/inference/#_17","title":"\u5927\u56fe\u200b\u63a8\u7406\u200b\u6837\u4f8b","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u5927\u56fe\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u5207\u7247\u200b\u63a8\u7406\u200b\u7684\u200b\u811a\u672c\u200b\u3002</p> <pre><code>python demo/large_image_demo.py \\\n    ${IMG_PATH} \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    --device ${GPU_ID}  \\\n    --show \\\n    --tta  \\\n    --score-thr ${SCORE_THR} \\\n    --patch-size ${PATCH_SIZE} \\\n    --patch-overlap-ratio ${PATCH_OVERLAP_RATIO} \\\n    --merge-iou-thr ${MERGE_IOU_THR} \\\n    --merge-nms-type ${MERGE_NMS_TYPE} \\\n    --batch-size ${BATCH_SIZE} \\\n    --debug \\\n    --save-patch\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u6837\u4f8b\u200b:</p> <pre><code># inferecnce without tta\nwget -P checkpoint https://download.openmmlab.com/mmdetection/v2.0/faster_rcnn/faster_rcnn_r101_fpn_2x_coco/faster_rcnn_r101_fpn_2x_coco_bbox_mAP-0.398_20200504_210455-1d2dac9c.pth\n\npython demo/large_image_demo.py \\\n    demo/large_image.jpg \\\n    configs/faster_rcnn/faster-rcnn_r101_fpn_2x_coco.py \\\n    checkpoint/faster_rcnn_r101_fpn_2x_coco_bbox_mAP-0.398_20200504_210455-1d2dac9c.pth\n\n# inference with tta\nwget -P checkpoint https://download.openmmlab.com/mmdetection/v2.0/retinanet/retinanet_r50_fpn_1x_coco/retinanet_r50_fpn_1x_coco_20200130-c2398f9e.pth\n\npython demo/large_image_demo.py \\\n    demo/large_image.jpg \\\n    configs/retinanet/retinanet_r50_fpn_1x_coco.py \\\n    checkpoint/retinanet_r50_fpn_1x_coco_20200130-c2398f9e.pth --tta\n</code></pre>"},{"location":"user_guides/inference/#_18","title":"\u591a\u200b\u6a21\u6001\u200b\u7b97\u6cd5\u200b\u7684\u200b\u63a8\u7406\u200b\u548c\u200b\u9a8c\u8bc1","text":"<p>\u200b\u968f\u7740\u200b\u591a\u200b\u6a21\u6001\u200b\u89c6\u89c9\u200b\u7b97\u6cd5\u200b\u7684\u200b\u4e0d\u65ad\u200b\u53d1\u5c55\u200b\uff0cMMDetection \u200b\u4e5f\u200b\u5b8c\u6210\u200b\u4e86\u200b\u5bf9\u200b\u8fd9\u7c7b\u200b\u7b97\u6cd5\u200b\u7684\u200b\u652f\u6301\u200b\u3002\u200b\u8fd9\u4e00\u200b\u5c0f\u8282\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b GLIP \u200b\u7b97\u6cd5\u200b\u548c\u200b\u6a21\u578b\u200b\u6765\u200b\u6f14\u793a\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u5bf9\u5e94\u200b\u591a\u200b\u6a21\u6001\u200b\u7b97\u6cd5\u200b\u7684\u200b demo \u200b\u548c\u200b eval \u200b\u811a\u672c\u200b\u3002\u200b\u540c\u65f6\u200b MMDetection \u200b\u4e5f\u200b\u5728\u200b projects \u200b\u4e0b\u200b\u5b8c\u6210\u200b\u4e86\u200b gradio_demo \u200b\u9879\u76ee\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u53c2\u7167\u200b\u6587\u6863\u200b\u5728\u200b\u672c\u5730\u200b\u5feb\u901f\u200b\u4f53\u9a8c\u200b MMDetection \u200b\u4e2d\u200b\u652f\u6301\u200b\u7684\u200b\u5404\u7c7b\u200b\u56fe\u7247\u200b\u8f93\u5165\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"user_guides/inference/#_19","title":"\u6a21\u578b\u200b\u51c6\u5907","text":"<p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b\u591a\u200b\u6a21\u6001\u200b\u4f9d\u8d56\u200b\uff1a</p> <pre><code># if source\npip install -r requirements/multimodal.txt\n\n# if wheel\nmim install mmdet[multimodal]\n</code></pre> <p>MMDetection \u200b\u5df2\u7ecf\u200b\u96c6\u6210\u200b\u4e86\u200b glip \u200b\u7b97\u6cd5\u200b\u548c\u200b\u6a21\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u94fe\u63a5\u200b\u4e0b\u8f7d\u200b\u4f7f\u7528\u200b\uff1a</p> <pre><code>cd mmdetection\nwget https://download.openmmlab.com/mmdetection/v3.0/glip/glip_tiny_a_mmdet-b3654169.pth\n</code></pre>"},{"location":"user_guides/inference/#_20","title":"\u63a8\u7406\u200b\u6f14\u793a","text":"<p>\u200b\u4e0b\u8f7d\u200b\u5b8c\u6210\u200b\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b <code>demo</code> \u200b\u4e0b\u200b\u7684\u200b\u591a\u200b\u6a21\u6001\u200b\u63a8\u7406\u200b\u811a\u672c\u200b\u5b8c\u6210\u200b\u63a8\u7406\u200b\uff1a</p> <pre><code>python demo/image_demo.py demo/demo.jpg glip_tiny_a_mmdet-b3654169.pth --texts bench\n</code></pre> <p>demo \u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u60f3\u200b\u8fdb\u884c\u200b\u591a\u79cd\u7c7b\u578b\u200b\u7684\u200b\u8bc6\u522b\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>xx. xx</code> \u200b\u7684\u200b\u683c\u5f0f\u200b\u5728\u200b <code>--texts</code> \u200b\u5b57\u6bb5\u200b\u540e\u200b\u58f0\u660e\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b:</p> <pre><code>python demo/image_demo.py demo/demo.jpg glip_tiny_a_mmdet-b3654169.pth --texts 'bench. car'\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a</p> <p>\u200b\u63a8\u7406\u200b\u811a\u672c\u200b\u8fd8\u200b\u652f\u6301\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u53e5\u5b50\u200b\u4f5c\u4e3a\u200b <code>--texts</code> \u200b\u5b57\u6bb5\u200b\u7684\u200b\u8f93\u5165\u200b\uff1a</p> <pre><code>python demo/image_demo.py demo/demo.jpg glip_tiny_a_mmdet-b3654169.pth --texts 'There are a lot of cars here.'\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u4e0b\u56fe\u200b\uff1a</p>"},{"location":"user_guides/inference/#_21","title":"\u9a8c\u8bc1\u200b\u6f14\u793a","text":"<p>MMDetection \u200b\u652f\u6301\u200b\u540e\u200b\u7684\u200b GLIP \u200b\u7b97\u6cd5\u200b\u5bf9\u6bd4\u200b\u5b98\u65b9\u200b\u7248\u672c\u200b\u6ca1\u6709\u200b\u7cbe\u5ea6\u200b\u4e0a\u200b\u7684\u200b\u635f\u5931\u200b\uff0c benchmark \u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> Model official mAP mmdet mAP glip_A_Swin_T_O365.yaml 42.9 43.0 glip_Swin_T_O365.yaml 44.9 44.9 glip_Swin_L.yaml 51.4 51.3 <p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>test.py</code> \u200b\u811a\u672c\u200b\u5bf9\u6a21\u578b\u200b\u7cbe\u5ea6\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code># 1 gpu\npython tools/test.py configs/glip/glip_atss_swin-t_fpn_dyhead_pretrain_obj365.py glip_tiny_a_mmdet-b3654169.pth\n\n# 8 GPU\n./tools/dist_test.sh configs/glip/glip_atss_swin-t_fpn_dyhead_pretrain_obj365.py glip_tiny_a_mmdet-b3654169.pth 8\n</code></pre>"},{"location":"user_guides/init_cfg/","title":"\u6743\u91cd\u200b\u521d\u59cb\u5316","text":"<p>\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9002\u5f53\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u7b56\u7565\u200b\u6709\u5229\u4e8e\u200b\u52a0\u5feb\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u6216\u200b\u83b7\u5f97\u200b\uf901\u200b\u2fbc\u200b\u7684\u200b\u6027\u80fd\u200b\u3002 MMCV \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5e38\u200b\u2f64\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u6a21\u5757\u200b\u7684\u200b\u2f45\u200b\u6cd5\u200b\uff0c\u200b\u5982\u200b <code>nn.Conv2d</code>\u3002 MMdetection \u200b\u4e2d\u200b\u7684\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316\u200b\u4e3b\u8981\u200b\u4f7f\u200b\u2f64\u200b <code>init_cfg</code>\u3002\u200b\u2f64\u200b\u2f3e\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u4e24\u4e2a\u200b\u6b65\u9aa4\u200b\u6765\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\uff1a</p> <ol> <li>\u200b\u5728\u200b <code>model_cfg</code> \u200b\u4e2d\u4e3a\u200b\u6a21\u578b\u200b\u6216\u200b\u5176\u200b\u7ec4\u4ef6\u200b\u5b9a\u4e49\u200b <code>init_cfg</code>\uff0c\u200b\u4f46\u200b\u2f26\u200b\u7ec4\u4ef6\u200b\u7684\u200b <code>init_cfg</code> \u200b\u4f18\u5148\u7ea7\u200b\uf901\u200b\u2fbc\u200b\uff0c\u200b\u4f1a\u200b\u8986\u76d6\u200b\u2f57\u200b\u6a21\u5757\u200b\u7684\u200b <code>init_cfg</code> \u3002</li> <li>\u200b\u50cf\u200b\u5f80\u5e38\u200b\u4e00\u6837\u200b\u6784\u5efa\u200b\u6a21\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u663e\u5f0f\u200b\u8c03\u200b\u2f64\u200b <code>model.init_weights()</code> \u200b\u2f45\u200b\u6cd5\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u6309\u7167\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5199\u6cd5\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u3002</li> </ol> <p>MMdetection \u200b\u521d\u59cb\u5316\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7684\u200b\u9ad8\u5c42\u200b API \u200b\u8c03\u7528\u200b\u6d41\u7a0b\u200b\u662f\u200b\uff1a</p> <p>model_cfg(init_cfg) -&gt; build_from_cfg -&gt; model -&gt; init_weight() -&gt; initialize(self, self.init_cfg) -&gt; children's init_weight()</p>"},{"location":"user_guides/init_cfg/#_2","title":"\u63cf\u8ff0","text":"<p>\u200b\u5b83\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u662f\u200b dict \u200b\u6216\u8005\u200b list[dict]\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u4e0b\u5217\u200b\u952e\u503c\u200b:</p> <ul> <li><code>type</code> (str)\uff0c\u200b\u5305\u542b\u200b <code>INTIALIZERS</code> \u200b\u4e2d\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u5668\u200b\u540d\u79f0\u200b\uff0c\u200b\u540e\u9762\u200b\u8ddf\u7740\u200b\u521d\u59cb\u5316\u200b\u5668\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</li> <li><code>layer</code>\uff08str \u200b\u6216\u200b list[str]\uff09\uff0c\u200b\u5305\u542b\u200b Pytorch \u200b\u6216\u200b MMCV \u200b\u4e2d\u200b\u57fa\u672c\u200b\u5c42\u200b\u7684\u200b\u540d\u79f0\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u53ef\u200b\u5b66\u4e60\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>'Conv2d'</code>\uff0c<code>'DeformConv2d'</code>\u3002</li> <li><code>override</code> (dict \u200b\u6216\u200b list[dict])\uff0c\u200b\u5305\u542b\u200b\uf967\u200b\u7ee7\u627f\u200b\u2f83\u200b <code>BaseModule</code> \u200b\u4e14\u200b\u5176\u200b\u521d\u59cb\u5316\u200b\u914d\u7f6e\u200b\u4e0e\u200b <code>layer</code> \u200b\u952e\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u5c42\u200b\uf967\u200b\u540c\u200b\u7684\u200b\u2f26\u200b\u6a21\u5757\u200b\u3002 <code>type</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u5668\u5c06\u9002\u200b\u2f64\u200b\u4e8e\u200b <code>layer</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6240\u6709\u200b\u5c42\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5982\u679c\u200b\u2f26\u200b\u6a21\u5757\u200b\uf967\u200b\u662f\u200b <code>BaseModule</code> \u200b\u7684\u200b\u6d3e\u200b\u2f63\u200b\u7c7b\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u4e0e\u200b <code>layer</code> \u200b\u4e2d\u200b\u7684\u200b\u5c42\u200b\u76f8\u540c\u200b\u7684\u200b\u2f45\u200b\u5f0f\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5219\u200b\uf967\u200b\u9700\u8981\u200b\u4f7f\u200b\u2f64\u200b <code>override</code>\u3002<code>override</code> \u200b\u5305\u542b\u200b\u4e86\u200b\uff1a</li> <li><code>type</code> \u200b\u540e\u200b\u8ddf\u200b\u521d\u59cb\u5316\u200b\u5668\u200b\u7684\u200b\u53c2\u6570\u200b\uff1b</li> <li><code>name</code> \u200b\u7528\u4ee5\u200b\u6307\u200b\u2f70\u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u2f26\u200b\u6a21\u5757\u200b\u3002</li> </ul>"},{"location":"user_guides/init_cfg/#_3","title":"\u521d\u59cb\u5316\u200b\u53c2\u6570","text":"<p>\u200b\u4ece\u200b <code>mmcv.runner.BaseModule</code> \u200b\u6216\u200b <code>mmdet.models</code> \u200b\u7ee7\u627f\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u6a21\u578b\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u7528\u200b FooModel \u200b\u6765\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>import torch.nn as nn\nfrom mmcv.runner import BaseModule\n\nclass FooModel(BaseModule)\n    def __init__(self,\n                 arg1,\n                 arg2,\n                 init_cfg=None):\n        super(FooModel, self).__init__(init_cfg)\n        ...\n</code></pre> <ul> <li>\u200b\u76f4\u63a5\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u4f7f\u200b\u2f64\u200b <code>init_cfg</code> \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</li> </ul> <pre><code>import torch.nn as nn\nfrom mmcv.runner import BaseModule\n# or directly inherit mmdet models\n\nclass FooModel(BaseModule)\n  def __init__(self,\n                arg1,\n                arg2,\n                init_cfg=XXX):\n          super(FooModel, self).__init__(init_cfg)\n          ...\n</code></pre> <ul> <li>\u200b\u5728\u200b <code>mmcv.Sequential</code> \u200b\u6216\u200b <code>mmcv.ModuleList</code> \u200b\u4ee3\u7801\u200b\u4e2d\u200b\u76f4\u63a5\u200b\u4f7f\u200b\u2f64\u200b <code>init_cfg</code> \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</li> </ul> <pre><code>from mmcv.runner import BaseModule, ModuleList\n\nclass FooModel(BaseModule)\n  def __init__(self,\n                  arg1,\n                  arg2,\n                  init_cfg=None):\n          super(FooModel, self).__init__(init_cfg)\n          ...\n          self.conv1 = ModuleList(init_cfg=XXX)\n</code></pre> <ul> <li>\u200b\u4f7f\u200b\u2f64\u200b\u914d\u7f6e\u200b\u2f42\u200b\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>init_cfg</code> \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</li> </ul> <pre><code>model = dict(\n  ...\n      model = dict(\n          type='FooModel',\n          arg1=XXX,\n          arg2=XXX,\n          init_cfg=XXX),\n          ...\n</code></pre>"},{"location":"user_guides/init_cfg/#init_cfg","title":"init_cfg \u200b\u7684\u200b\u4f7f\u7528","text":"<ol> <li>\u200b\u7528\u200b <code>layer</code> \u200b\u952e\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u53ea\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>layer</code>, \u200b\u5b83\u200b\u53ea\u4f1a\u200b\u5728\u200b <code>layer</code> \u200b\u952e\u4e2d\u200b\u521d\u59cb\u5316\u200b\u7f51\u7edc\u5c42\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a <code>layer</code> \u200b\u952e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b\u662f\u200b Pytorch \u200b\u7684\u200b\u5e26\u6709\u200b weights \u200b\u548c\u200b bias \u200b\u5c5e\u6027\u200b\u7684\u200b\u7c7b\u540d\u200b\uff08\u200b\u56e0\u6b64\u200b\uf967\u200b\u2f40\u200b\u6301\u200b <code>MultiheadAttention</code> \u200b\u5c42\u200b\uff09\u3002</p> <ul> <li>\u200b\u5b9a\u4e49\u200b\u2f64\u200b\u4e8e\u200b\u521d\u59cb\u5316\u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u914d\u7f6e\u200b\u7684\u200b\u6a21\u5757\u200b\u7684\u200b <code>layer</code> \u200b\u952e\u200b\u3002</li> </ul> <pre><code>init_cfg = dict(type='Constant', layer=['Conv1d', 'Conv2d', 'Linear'], val=1)\n# \u200b\u2f64\u200b\u76f8\u540c\u200b\u7684\u200b\u914d\u7f6e\u200b\u521d\u59cb\u5316\u200b\u6574\u4e2a\u200b\u6a21\u5757\u200b\n</code></pre> <ul> <li>\u200b\u5b9a\u4e49\u200b\u2f64\u200b\u4e8e\u200b\u521d\u59cb\u5316\u200b\u5177\u6709\u200b\uf967\u200b\u540c\u200b\u914d\u7f6e\u200b\u7684\u200b\u5c42\u200b\u7684\u200b <code>layer</code> \u200b\u952e\u200b\u3002</li> </ul> <pre><code>init_cfg = [dict(type='Constant', layer='Conv1d', val=1),\n            dict(type='Constant', layer='Conv2d', val=2),\n            dict(type='Constant', layer='Linear', val=3)]\n# nn.Conv1d \u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b dict(type='Constant', val=1)\n# nn.Conv2d \u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b dict(type='Constant', val=2)\n# nn.Linear \u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b dict(type='Constant', val=3)\n</code></pre> <ol> <li> <p>\u200b\u4f7f\u200b\u2f64\u200b <code>override</code> \u200b\u952e\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</p> </li> <li> <p>\u200b\u5f53\u4f7f\u200b\u2f64\u200b\u5c5e\u6027\u200b\u540d\u200b\u521d\u59cb\u5316\u200b\u67d0\u4e9b\u200b\u7279\u5b9a\u200b\u90e8\u5206\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u2f64\u200b <code>override</code> \u200b\u952e\u200b\uff0c <code>override</code> \u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u5c06\u200b\u5ffd\u7565\u200b init_cfg \u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u3002</p> </li> </ol> <pre><code># layers\uff1a\n# self.feat = nn.Conv1d(3, 1, 3)\n# self.reg = nn.Conv2d(3, 3, 3)\n# self.cls = nn.Linear(1,2)\n\ninit_cfg = dict(type='Constant',\n                layer=['Conv1d','Conv2d'], val=1, bias=2,\n                override=dict(type='Constant', name='reg', val=3, bias=4))\n# self.feat and self.cls \u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b dict(type='Constant', val=1, bias=2)\n# \u200b\u53eb\u200b 'reg' \u200b\u7684\u200b\u6a21\u5757\u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b dict(type='Constant', val=3, bias=4)\n</code></pre> <ul> <li>\u200b\u5982\u679c\u200b init_cfg \u200b\u4e2d\u200b\u7684\u200b <code>layer</code> \u200b\u4e3a\u200b None\uff0c\u200b\u5219\u200b\u53ea\u4f1a\u200b\u521d\u59cb\u5316\u200b override \u200b\u4e2d\u6709\u200b name \u200b\u7684\u200b\u2f26\u200b\u6a21\u5757\u200b\uff0c\u200b\u2f7d\u200b override \u200b\u4e2d\u200b\u7684\u200b type \u200b\u548c\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u3002</li> </ul> <pre><code># layers\uff1a\n# self.feat = nn.Conv1d(3, 1, 3)\n# self.reg = nn.Conv2d(3, 3, 3)\n# self.cls = nn.Linear(1,2)\n\ninit_cfg = dict(type='Constant', val=1, bias=2,   override=dict(name='reg'))\n\n# self.feat and self.cls \u200b\u5c06\u200b\u88ab\u200b Pytorch \u200b\u521d\u59cb\u5316\u200b\n# \u200b\u53eb\u200b 'reg' \u200b\u7684\u200b\u6a21\u5757\u200b\u5c06\u200b\u88ab\u200b dict(type='Constant', val=1, bias=2) \u200b\u521d\u59cb\u5316\u200b\n</code></pre> <ul> <li> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\uf967\u200b\u5b9a\u4e49\u200b <code>layer</code> \u200b\u6216\u200b <code>override</code> \u200b\u952e\u200b\uff0c\u200b\u5b83\u200b\uf967\u200b\u4f1a\u200b\u521d\u59cb\u5316\u200b\u4efb\u4f55\u200b\u4e1c\u897f\u200b\u3002</p> </li> <li> <p>\u200b\u65e0\u6548\u200b\u7684\u200b\u4f7f\u7528\u200b</p> </li> </ul> <pre><code># override \u200b\u6ca1\u6709\u200b name \u200b\u952e\u200b\u7684\u8bdd\u200b\u662f\u200b\u65e0\u6548\u200b\u7684\u200b\ninit_cfg = dict(type='Constant', layer=['Conv1d','Conv2d'], val=1, bias=2,\n              override=dict(type='Constant', val=3, bias=4))\n\n# override \u200b\u6709\u200b name \u200b\u952e\u200b\u548c\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u4f46\u662f\u200b\u6ca1\u6709\u200b type \u200b\u952e\u200b\u4e5f\u200b\u662f\u200b\u65e0\u6548\u200b\u7684\u200b\ninit_cfg = dict(type='Constant', layer=['Conv1d','Conv2d'], val=1, bias=2,\n                override=dict(name='reg', val=3, bias=4))\n</code></pre> <ol> <li>\u200b\u4f7f\u200b\u2f64\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</li> </ol> <pre><code>init_cfg = dict(type='Pretrained',\n             checkpoint='torchvision://resnet50')\n</code></pre> <p>\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b MMEngine \u200b\u7684\u200b\u6587\u6863\u200b</p>"},{"location":"user_guides/label_studio/","title":"\u4f7f\u7528\u200b MMDetection \u200b\u548c\u200b Label-Studio \u200b\u8fdb\u884c\u200b\u534a\u81ea\u52a8\u5316\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u6807\u6ce8","text":"<p>\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8d39\u65f6\u8d39\u529b\u200b\u7684\u200b\u4efb\u52a1\u200b\uff0c\u200b\u672c\u6587\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b MMDetection \u200b\u4e2d\u200b\u7684\u200b RTMDet \u200b\u7b97\u6cd5\u200b\u8054\u5408\u200b Label-Studio \u200b\u8f6f\u4ef6\u200b\u8fdb\u884c\u200b\u534a\u81ea\u52a8\u5316\u200b\u6807\u6ce8\u200b\u3002\u200b\u5177\u4f53\u6765\u8bf4\u200b\uff0c\u200b\u4f7f\u7528\u200b RTMDet \u200b\u9884\u6d4b\u200b\u56fe\u7247\u200b\u751f\u6210\u200b\u6807\u6ce8\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b Label-Studio \u200b\u8fdb\u884c\u200b\u5fae\u8c03\u200b\u6807\u6ce8\u200b\uff0c\u200b\u793e\u533a\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u6b64\u200b\u6d41\u7a0b\u200b\u548c\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u5e94\u7528\u200b\u5230\u200b\u5176\u4ed6\u200b\u9886\u57df\u200b\u3002</p> <ul> <li>RTMDet\uff1aRTMDet \u200b\u662f\u200b OpenMMLab \u200b\u81ea\u7814\u200b\u7684\u200b\u9ad8\u7cbe\u5ea6\u200b\u5355\u200b\u9636\u6bb5\u200b\u7684\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5f00\u200b\u6e90\u4e8e\u200b MMDetection \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5de5\u5177\u7bb1\u200b\u4e2d\u200b\uff0c\u200b\u5176\u200b\u5f00\u6e90\u200b\u534f\u8bae\u200b\u4e3a\u200b Apache 2.0\uff0c\u200b\u5de5\u4e1a\u754c\u200b\u7684\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u53d7\u9650\u200b\u7684\u200b\u514d\u8d39\u200b\u4f7f\u7528\u200b\u3002</li> <li>Label Studio \u200b\u662f\u200b\u4e00\u6b3e\u200b\u4f18\u79c0\u200b\u7684\u200b\u6807\u6ce8\u200b\u8f6f\u4ef6\u200b\uff0c\u200b\u8986\u76d6\u200b\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u3001\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u3001\u200b\u5206\u5272\u200b\u7b49\u200b\u9886\u57df\u200b\u6570\u636e\u200b\u96c6\u200b\u6807\u6ce8\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</li> </ul> <p>\u200b\u672c\u6587\u200b\u5c06\u200b\u4f7f\u7528\u200b\u55b5\u200b\u55b5\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u8fdb\u884c\u200b\u534a\u81ea\u52a8\u5316\u200b\u6807\u6ce8\u200b\u3002</p>"},{"location":"user_guides/label_studio/#_1","title":"\u73af\u5883\u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u865a\u62df\u73af\u5883\u200b\uff0c\u200b\u7136\u540e\u200b\u5b89\u88c5\u200b PyTorch \u200b\u548c\u200b MMCV\u3002\u200b\u5728\u200b\u672c\u6587\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6307\u5b9a\u200b PyTorch \u200b\u548c\u200b MMCV \u200b\u7684\u200b\u7248\u672c\u200b\u3002\u200b\u63a5\u4e0b\u6765\u200b\u5b89\u88c5\u200b MMDetection\u3001Label-Studio \u200b\u548c\u200b label-studio-ml-backend\uff0c\u200b\u5177\u4f53\u6b65\u9aa4\u200b\u5982\u4e0b\u200b\uff1a</p> <p>\u200b\u521b\u5efa\u200b\u865a\u62df\u73af\u5883\u200b\uff1a</p> <pre><code>conda create -n rtmdet python=3.9 -y\nconda activate rtmdet\n</code></pre> <p>\u200b\u5b89\u88c5\u200b PyTorch</p> <pre><code># Linux and Windows CPU only\npip install torch==1.10.1+cpu torchvision==0.11.2+cpu torchaudio==0.10.1 -f https://download.pytorch.org/whl/cpu/torch_stable.html\n# Linux and Windows CUDA 11.3\npip install torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio==0.10.1 -f https://download.pytorch.org/whl/cu113/torch_stable.html\n# OSX\npip install torch==1.10.1 torchvision==0.11.2 torchaudio==0.10.1\n</code></pre> <p>\u200b\u5b89\u88c5\u200b MMCV</p> <pre><code>pip install -U openmim\nmim install \"mmcv&gt;=2.0.0\"\n# \u200b\u5b89\u88c5\u200b mmcv \u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5b89\u88c5\u200b mmengine\n</code></pre> <p>\u200b\u5b89\u88c5\u200b MMDetection</p> <pre><code>git clone https://github.com/open-mmlab/mmdetection\ncd mmdetection\npip install -v -e .\n</code></pre> <p>\u200b\u5b89\u88c5\u200b Label-Studio \u200b\u548c\u200b label-studio-ml-backend</p> <pre><code># \u200b\u5b89\u88c5\u200b label-studio \u200b\u9700\u8981\u200b\u4e00\u6bb5\u65f6\u95f4\u200b,\u200b\u5982\u679c\u200b\u627e\u200b\u4e0d\u5230\u200b\u7248\u672c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u5b98\u65b9\u200b\u6e90\u200b\npip install label-studio==1.7.2\npip install label-studio-ml==1.0.9\n</code></pre> <p>\u200b\u4e0b\u8f7d\u200brtmdet\u200b\u6743\u91cd\u200b</p> <pre><code>cd path/to/mmetection\nmkdir work_dirs\ncd work_dirs\nwget https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_m_8xb32-300e_coco/rtmdet_m_8xb32-300e_coco_20220719_112220-229f527c.pth\n</code></pre>"},{"location":"user_guides/label_studio/#_2","title":"\u542f\u52a8\u200b\u670d\u52a1","text":"<p>\u200b\u542f\u52a8\u200b RTMDet \u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\uff1a</p> <pre><code>cd path/to/mmetection\n\nlabel-studio-ml start projects/LabelStudio/backend_template --with \\\nconfig_file=configs/rtmdet/rtmdet_m_8xb32-300e_coco.py \\\ncheckpoint_file=./work_dirs/rtmdet_m_8xb32-300e_coco_20220719_112220-229f527c.pth \\\ndevice=cpu \\\n--port 8003\n# device=cpu \u200b\u4e3a\u200b\u4f7f\u7528\u200b CPU \u200b\u63a8\u7406\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b GPU \u200b\u63a8\u7406\u200b\uff0c\u200b\u5c06\u200b cpu \u200b\u66ff\u6362\u200b\u4e3a\u200b cuda:0\n</code></pre> <p></p> <p>\u200b\u6b64\u65f6\u200b\uff0cRTMDet \u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u5df2\u7ecf\u200b\u542f\u52a8\u200b\uff0c\u200b\u540e\u7eed\u200b\u5728\u200b Label-Studio Web \u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u914d\u7f6e\u200b http://localhost:8003 \u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\u542f\u52a8\u200b Label-Studio \u200b\u7f51\u9875\u200b\u670d\u52a1\u200b\uff1a</p> <pre><code>label-studio start\n</code></pre> <p></p> <p>\u200b\u6253\u5f00\u200b\u6d4f\u89c8\u5668\u200b\u8bbf\u95ee\u200b http://localhost:8080/ \u200b\u5373\u53ef\u200b\u770b\u5230\u200b Label-Studio \u200b\u7684\u200b\u754c\u9762\u200b\u3002</p> <p></p> <p>\u200b\u6211\u4eec\u200b\u6ce8\u518c\u200b\u4e00\u4e2a\u200b\u7528\u6237\u200b\uff0c\u200b\u7136\u540e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b RTMDet-Semiautomatic-Label \u200b\u9879\u76ee\u200b\u3002</p> <p></p> <p>\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u4e0b\u9762\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e0b\u8f7d\u200b\u597d\u200b\u793a\u4f8b\u200b\u7684\u200b\u55b5\u200b\u55b5\u200b\u56fe\u7247\u200b\uff0c\u200b\u70b9\u51fb\u200b Data Import \u200b\u5bfc\u5165\u200b\u9700\u8981\u200b\u6807\u6ce8\u200b\u7684\u200b\u732b\u200b\u56fe\u7247\u200b\u3002</p> <pre><code>cd path/to/mmetection\nmkdir data &amp;&amp; cd data\n\nwget https://download.openmmlab.com/mmyolo/data/cat_dataset.zip &amp;&amp; unzip cat_dataset.zip\n</code></pre> <p></p> <p></p> <p>\u200b\u7136\u540e\u200b\u9009\u62e9\u200b Object Detection With Bounding Boxes \u200b\u6a21\u677f\u200b</p> <p></p> <pre><code>airplane\napple\nbackpack\nbanana\nbaseball_bat\nbaseball_glove\nbear\nbed\nbench\nbicycle\nbird\nboat\nbook\nbottle\nbowl\nbroccoli\nbus\ncake\ncar\ncarrot\ncat\ncell_phone\nchair\nclock\ncouch\ncow\ncup\ndining_table\ndog\ndonut\nelephant\nfire_hydrant\nfork\nfrisbee\ngiraffe\nhair_drier\nhandbag\nhorse\nhot_dog\nkeyboard\nkite\nknife\nlaptop\nmicrowave\nmotorcycle\nmouse\norange\noven\nparking_meter\nperson\npizza\npotted_plant\nrefrigerator\nremote\nsandwich\nscissors\nsheep\nsink\nskateboard\nskis\nsnowboard\nspoon\nsports_ball\nstop_sign\nsuitcase\nsurfboard\nteddy_bear\ntennis_racket\ntie\ntoaster\ntoilet\ntoothbrush\ntraffic_light\ntrain\ntruck\ntv\numbrella\nvase\nwine_glass\nzebra\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u4e0a\u8ff0\u200b\u7c7b\u522b\u200b\u590d\u5236\u200b\u6dfb\u52a0\u200b\u5230\u200b Label-Studio\uff0c\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b Save\u3002</p> <p></p> <p>\u200b\u7136\u540e\u200b\u5728\u200b\u8bbe\u7f6e\u200b\u4e2d\u200b\u70b9\u51fb\u200b Add Model \u200b\u6dfb\u52a0\u200b RTMDet \u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u3002</p> <p></p> <p>\u200b\u70b9\u51fb\u200b Validate and Save\uff0c\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b Start Labeling\u3002</p> <p></p> <p>\u200b\u770b\u5230\u200b\u5982\u4e0b\u200b Connected \u200b\u5c31\u200b\u8bf4\u660e\u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u6dfb\u52a0\u200b\u6210\u529f\u200b\u3002</p> <p></p>"},{"location":"user_guides/label_studio/#_3","title":"\u5f00\u59cb\u200b\u534a\u81ea\u52a8\u5316\u200b\u6807\u6ce8","text":"<p>\u200b\u70b9\u51fb\u200b Label \u200b\u5f00\u59cb\u200b\u6807\u6ce8\u200b</p> <p></p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b RTMDet \u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u5df2\u7ecf\u200b\u6210\u529f\u200b\u8fd4\u56de\u200b\u4e86\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5e76\u200b\u663e\u793a\u200b\u5728\u200b\u56fe\u7247\u200b\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\u8fd9\u4e2a\u200b\u55b5\u200b\u55b5\u200b\u9884\u6d4b\u200b\u7684\u200b\u6846\u200b\u6709\u70b9\u200b\u5927\u200b\u3002</p> <p></p> <p>\u200b\u6211\u4eec\u200b\u624b\u5de5\u200b\u62d6\u52a8\u200b\u6846\u200b\uff0c\u200b\u4fee\u6b63\u200b\u4e00\u4e0b\u200b\u6846\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5f97\u5230\u200b\u4ee5\u4e0b\u200b\u4fee\u6b63\u200b\u8fc7\u540e\u200b\u7684\u200b\u6807\u6ce8\u200b\uff0c\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b Submit\uff0c\u200b\u672c\u5f20\u200b\u56fe\u7247\u200b\u5c31\u200b\u6807\u6ce8\u200b\u5b8c\u6bd5\u200b\u4e86\u200b\u3002</p> <p></p> <p>\u200b\u6211\u4eec\u200b submit \u200b\u5b8c\u6bd5\u200b\u6240\u6709\u200b\u56fe\u7247\u200b\u540e\u200b\uff0c\u200b\u70b9\u51fb\u200b exprot \u200b\u5bfc\u51fa\u200b COCO \u200b\u683c\u5f0f\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5c31\u200b\u80fd\u200b\u628a\u200b\u6807\u6ce8\u200b\u597d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u538b\u7f29\u5305\u200b\u5bfc\u51fa\u6765\u200b\u4e86\u200b\u3002</p> <p></p> <p>\u200b\u7528\u200b vscode \u200b\u6253\u5f00\u200b\u89e3\u538b\u200b\u540e\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6807\u6ce8\u200b\u597d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u56fe\u7247\u200b\u548c\u200b json \u200b\u683c\u5f0f\u200b\u7684\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u3002</p> <p></p> <p>\u200b\u5230\u200b\u6b64\u200b\u534a\u81ea\u52a8\u5316\u200b\u6807\u6ce8\u200b\u5c31\u200b\u5b8c\u6210\u200b\u4e86\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u8fd9\u4e2a\u200b\u6570\u636e\u200b\u96c6\u5728\u200b MMDetection \u200b\u8bad\u7ec3\u200b\u7cbe\u5ea6\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u6a21\u578b\u200b\u4e86\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u51fa\u200b\u66f4\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u7528\u200b\u8fd9\u4e2a\u200b\u6a21\u578b\u200b\u7ee7\u7eed\u200b\u534a\u81ea\u52a8\u5316\u200b\u6807\u6ce8\u200b\u65b0\u200b\u91c7\u96c6\u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e0d\u65ad\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u6269\u5145\u200b\u9ad8\u8d28\u91cf\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u3002</p>"},{"location":"user_guides/label_studio/#mmyolo","title":"\u4f7f\u7528\u200b MMYOLO \u200b\u4f5c\u4e3a\u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1","text":"<p>\u200b\u5982\u679c\u200b\u60f3\u200b\u5728\u200b MMYOLO \u200b\u4e2d\u200b\u4f7f\u7528\u200b Label-Studio\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u5728\u200b\u542f\u52a8\u200b\u540e\u200b\u7aef\u200b\u63a8\u7406\u200b\u670d\u52a1\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b config_file \u200b\u548c\u200b checkpoint_file \u200b\u66ff\u6362\u200b\u4e3a\u200b MMYOLO \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b\u6743\u91cd\u200b\u6587\u4ef6\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>cd path/to/mmetection\n\nlabel-studio-ml start projects/LabelStudio/backend_template --with \\\nconfig_file= path/to/mmyolo_config.py \\\ncheckpoint_file= path/to/mmyolo_weights.pth \\\ndevice=cpu \\\n--port 8003\n# device=cpu \u200b\u4e3a\u200b\u4f7f\u7528\u200b CPU \u200b\u63a8\u7406\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b GPU \u200b\u63a8\u7406\u200b\uff0c\u200b\u5c06\u200b cpu \u200b\u66ff\u6362\u200b\u4e3a\u200b cuda:0\n</code></pre> <p>\u200b\u65cb\u8f6c\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u548c\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u8fd8\u200b\u5728\u200b\u652f\u6301\u200b\u4e2d\u200b\uff0c\u200b\u656c\u8bf7\u671f\u5f85\u200b\u3002</p>"},{"location":"user_guides/new_model/","title":"\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b\uff08\u200b\u5f85\u200b\u66f4\u65b0\u200b\uff09","text":"<p>\u200b\u5728\u200b\u672c\u6587\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u77e5\u9053\u200b\u5982\u4f55\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u3001\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u63a8\u7406\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u5728\u200b cityscapes \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b Cascade Mask R-CNN R50 \u200b\u6a21\u578b\u200b\u4e3a\u4f8b\u200b\u6f14\u793a\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\u8bf4\u660e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b neck \u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b <code>FPN</code> \u200b\u66ff\u6362\u200b\u4e3a\u200b <code>AugFPN</code>\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u7684\u200b\u81ea\u52a8\u200b\u589e\u5f3a\u200b\u7c7b\u4e2d\u200b\u589e\u52a0\u200b <code>Rotate</code> \u200b\u6216\u200b <code>TranslateX</code>\u3002</p> <p>\u200b\u57fa\u672c\u200b\u6b65\u9aa4\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <ol> <li>\u200b\u51c6\u5907\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u200b</li> <li>\u200b\u51c6\u5907\u200b\u4f60\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b</li> <li>\u200b\u51c6\u5907\u200b\u914d\u7f6e\u6587\u4ef6\u200b</li> <li>\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u5bf9\u6a21\u578b\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\u3001\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u63a8\u7406\u200b</li> </ol>"},{"location":"user_guides/new_model/#_2","title":"\u51c6\u5907\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u5728\u200b\u672c\u6587\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b cityscapes \u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e3a\u4f8b\u200b\u8fdb\u884c\u200b\u8bf4\u660e\u200b\u3002</p> <p>\u200b\u63a8\u8350\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u6839\u200b\u8def\u5f84\u200b\u91c7\u7528\u200b\u7b26\u53f7\u200b\u94fe\u63a5\u200b\u65b9\u5f0f\u200b\u94fe\u63a5\u200b\u5230\u200b <code>$MMDETECTION/data</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u6587\u4ef6\u200b\u7ed3\u6784\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u76f8\u5e94\u200b\u7684\u200b\u8def\u5f84\u200b\u66f4\u6539\u200b\u3002\u200b\u6807\u51c6\u200b\u7684\u200b\u6587\u4ef6\u7ec4\u7ec7\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 mmdet\n\u251c\u2500\u2500 tools\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u251c\u2500\u2500 cityscapes\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u251c\u2500\u2500 leftImg8bit\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u2502   \u251c\u2500\u2500 gtFine\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u251c\u2500\u2500 VOCdevkit\n\u2502   \u2502   \u251c\u2500\u2500 VOC2007\n\u2502   \u2502   \u251c\u2500\u2500 VOC2012\n</code></pre> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u8bbe\u5b9a\u200b\u6570\u636e\u200b\u96c6\u6839\u200b\u8def\u5f84\u200b</p> <pre><code>export MMDET_DATASETS=$data_root\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u5c06\u4f1a\u200b\u4f7f\u7528\u200b\u73af\u5883\u200b\u4fbf\u200b\u53d8\u91cf\u200b <code>$MMDET_DATASETS</code> \u200b\u4f5c\u4e3a\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6839\u76ee\u5f55\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f60\u200b\u65e0\u9700\u200b\u518d\u200b\u4fee\u6539\u200b\u76f8\u5e94\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u4f60\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u811a\u672c\u200b <code>tools/dataset_converters/cityscapes.py</code> \u200b\u5c06\u200b cityscapes \u200b\u6807\u6ce8\u200b\u8f6c\u5316\u200b\u4e3a\u200b coco \u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u3002</p> <pre><code>pip install cityscapesscripts\npython tools/dataset_converters/cityscapes.py ./data/cityscapes --nproc 8 --out-dir ./data/cityscapes/annotations\n</code></pre> <p>\u200b\u76ee\u524d\u200b\u5728\u200b <code>cityscapes</code>\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6240\u200b\u5bf9\u5e94\u200b\u6a21\u578b\u200b\u662f\u200b\u91c7\u7528\u200b COCO \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u4e0d\u53ef\u200b\u7528\u200b\u6216\u8005\u200b\u6bd4\u8f83\u6162\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f60\u200b\u5148\u200b\u624b\u52a8\u200b\u4e0b\u8f7d\u200b\u5bf9\u5e94\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\uff0c\u200b\u5426\u5219\u200b\u53ef\u80fd\u200b\u5728\u200b\u8bad\u7ec3\u200b\u5f00\u59cb\u200b\u65f6\u5019\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u3002</p>"},{"location":"user_guides/new_model/#_3","title":"\u51c6\u5907\u200b\u4f60\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b","text":"<p>\u200b\u7b2c\u4e8c\u6b65\u200b\u662f\u200b\u51c6\u5907\u200b\u4f60\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u6216\u8005\u200b\u8bad\u7ec3\u200b\u76f8\u5173\u200b\u914d\u7f6e\u200b\u3002\u200b\u5047\u8bbe\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b\u5df2\u6709\u200b\u7684\u200b  Cascade Mask R-CNN R50 \u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u65b0\u589e\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b neck \u200b\u6a21\u5757\u200b <code>AugFPN</code> \u200b\u53bb\u200b\u4ee3\u66ff\u200b\u9ed8\u8ba4\u200b\u7684\u200b <code>FPN</code>\uff0c\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\uff1a</p>"},{"location":"user_guides/new_model/#1-neck-augfpn","title":"1 \u200b\u5b9a\u4e49\u65b0\u200b\u7684\u200b neck (\u200b\u4f8b\u5982\u200b AugFPN)","text":"<p>\u200b\u9996\u5148\u200b\u521b\u5efa\u200b\u65b0\u200b\u6587\u4ef6\u200b  <code>mmdet/models/necks/augfpn.py</code>.</p> <pre><code>import torch.nn as nn\nfrom mmdet.registry import MODELS\n\n@MODELS.register_module()\nclass AugFPN(nn.Module):\n\n    def __init__(self,\n                in_channels,\n                out_channels,\n                num_outs,\n                start_level=0,\n                end_level=-1,\n                add_extra_convs=False):\n        pass\n\n    def forward(self, inputs):\n        # implementation is ignored\n        pass\n</code></pre>"},{"location":"user_guides/new_model/#2","title":"2 \u200b\u5bfc\u5165\u200b\u6a21\u5757","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u91c7\u7528\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\uff0c\u200b\u7b2c\u4e00\u79cd\u200b\u662f\u200b\u5728\u200b  <code>mmdet/models/necks/__init__.py</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b</p> <pre><code>from .augfpn import AugFPN\n</code></pre> <p>\u200b\u7b2c\u4e8c\u79cd\u200b\u662f\u200b\u589e\u52a0\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u5230\u200b\u5bf9\u5e94\u200b\u914d\u7f6e\u200b\u4e2d\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u7684\u200b\u597d\u5904\u200b\u662f\u200b\u4e0d\u200b\u9700\u8981\u200b\u6539\u52a8\u200b\u4ee3\u7801\u200b</p> <pre><code>custom_imports = dict(\n    imports=['mmdet.models.necks.augfpn'],\n    allow_failed_imports=False)\n</code></pre>"},{"location":"user_guides/new_model/#3","title":"3 \u200b\u4fee\u6539\u200b\u914d\u7f6e","text":"<pre><code>neck=dict(\n    type='AugFPN',\n    in_channels=[256, 512, 1024, 2048],\n    out_channels=256,\n    num_outs=5)\n</code></pre> <p>\u200b\u5173\u4e8e\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u5176\u4f59\u200b\u76f8\u5173\u200b\u7ec6\u8282\u200b\u4f8b\u5982\u200b\u5b9e\u73b0\u200b\u65b0\u200b\u7684\u200b\u9aa8\u67b6\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5934\u90e8\u200b\u7f51\u7edc\u200b\u3001\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u8fd0\u884c\u200b\u65f6\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\u4f8b\u5982\u200b\u5b9a\u4e49\u65b0\u200b\u7684\u200b\u4f18\u5316\u200b\u5668\u200b\u3001\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\u3001\u200b\u5b9a\u5236\u200b\u8bad\u7ec3\u200b\u8c03\u5ea6\u200b\u7b56\u7565\u200b\u548c\u200b\u94a9\u5b50\u200b\u7b49\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u6587\u6863\u200b \u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b \u200b\u548c\u200b \u200b\u81ea\u5b9a\u4e49\u200b\u8fd0\u884c\u200b\u65f6\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"user_guides/new_model/#_4","title":"\u51c6\u5907\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>\u200b\u7b2c\u4e09\u6b65\u200b\u662f\u200b\u51c6\u5907\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u5047\u8bbe\u200b\u4f60\u200b\u6253\u7b97\u200b\u57fa\u4e8e\u200b cityscapes \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5728\u200b Cascade Mask R-CNN R50 \u200b\u4e2d\u200b\u65b0\u589e\u200b <code>AugFPN</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u540c\u65f6\u200b\u589e\u52a0\u200b <code>Rotate</code> \u200b\u6216\u8005\u200b <code>Translate</code> \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u7b56\u7565\u200b\uff0c\u200b\u5047\u8bbe\u200b\u4f60\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b <code>configs/cityscapes/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53d6\u540d\u4e3a\u200b <code>cascade-mask-rcnn_r50_augfpn_autoaug-10e_cityscapes.py</code>\uff0c\u200b\u5219\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code># \u200b\u7ee7\u627f\u200b base \u200b\u914d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u8fdb\u884c\u200b\u9488\u5bf9\u6027\u200b\u4fee\u6539\u200b\n_base_ = [\n    '../_base_/models/cascade-mask-rcnn_r50_fpn.py',\n    '../_base_/datasets/cityscapes_instance.py', '../_base_/default_runtime.py'\n]\n\nmodel = dict(\n    # \u200b\u8bbe\u7f6e\u200b `init_cfg` \u200b\u4e3a\u200b None\uff0c\u200b\u8868\u793a\u200b\u4e0d\u200b\u52a0\u8f7d\u200b ImageNet \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\uff0c\n    # \u200b\u540e\u7eed\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b `load_from` \u200b\u53c2\u6570\u200b\u7528\u6765\u200b\u52a0\u8f7d\u200b COCO \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\n    backbone=dict(init_cfg=None),\n    # \u200b\u4f7f\u7528\u200b\u65b0\u589e\u200b\u7684\u200b `AugFPN` \u200b\u6a21\u5757\u200b\u4ee3\u66ff\u200b\u9ed8\u8ba4\u200b\u7684\u200b `FPN`\n    neck=dict(\n        type='AugFPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    # \u200b\u6211\u4eec\u200b\u4e5f\u200b\u9700\u8981\u200b\u5c06\u200b num_classes \u200b\u4ece\u200b 80 \u200b\u4fee\u6539\u200b\u4e3a\u200b 8 \u200b\u6765\u200b\u5339\u914d\u200b cityscapes \u200b\u6570\u636e\u200b\u96c6\u200b\u6807\u6ce8\u200b\n    # \u200b\u8fd9\u4e2a\u200b\u4fee\u6539\u200b\u5305\u62ec\u200b `bbox_head` \u200b\u548c\u200b `mask_head`.\n    roi_head=dict(\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                # \u200b\u5c06\u200b COCO \u200b\u7c7b\u522b\u200b\u4fee\u6539\u200b\u4e3a\u200b cityscapes \u200b\u7c7b\u522b\u200b\n                num_classes=8,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0., 0., 0., 0.],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                # \u200b\u5c06\u200b COCO \u200b\u7c7b\u522b\u200b\u4fee\u6539\u200b\u4e3a\u200b cityscapes \u200b\u7c7b\u522b\u200b\n                num_classes=8,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0., 0., 0., 0.],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                # \u200b\u5c06\u200b COCO \u200b\u7c7b\u522b\u200b\u4fee\u6539\u200b\u4e3a\u200b cityscapes \u200b\u7c7b\u522b\u200b\n                num_classes=8,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0., 0., 0., 0.],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ],\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            # \u200b\u5c06\u200b COCO \u200b\u7c7b\u522b\u200b\u4fee\u6539\u200b\u4e3a\u200b cityscapes \u200b\u7c7b\u522b\u200b\n            num_classes=8,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))))\n\n# \u200b\u8986\u5199\u200b `train_pipeline`\uff0c\u200b\u7136\u540e\u200b\u65b0\u589e\u200b `AutoAugment` \u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(\n        type='AutoAugment',\n        policies=[\n            [dict(\n                 type='Rotate',\n                 level=5,\n                 img_border_value=(124, 116, 104),\n                 prob=0.5)\n            ],\n            [dict(type='Rotate', level=7, img_border_value=(124, 116, 104)),\n             dict(\n                 type='TranslateX',\n                 level=5,\n                 prob=0.5,\n                 img_border_value=(124, 116, 104))\n            ],\n        ]),\n    dict(\n        type='RandomResize',\n        scale=[(2048, 800), (2048, 1024)],\n        keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PackDetInputs'),\n]\n\n# \u200b\u8bbe\u7f6e\u200b\u6bcf\u5f20\u200b\u663e\u5361\u200b\u7684\u200b\u6279\u5904\u7406\u200b\u5927\u5c0f\u200b\uff0c\u200b\u540c\u65f6\u200b\u8bbe\u7f6e\u200b\u65b0\u200b\u7684\u200b\u8bad\u7ec3\u200b pipeline\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=3,\n    train=dict(dataset=dict(pipeline=train_pipeline)))\n\n# \u200b\u8bbe\u7f6e\u200b\u4f18\u5316\u200b\u5668\u200b\noptim_wrapper = dict(\n    type='OptimWrapper',\n    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001))\n\n# \u200b\u8bbe\u7f6e\u200b\u5b9a\u5236\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u7b56\u7565\u200b\nparam_scheduler = [\n    dict(\n        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0, end=500),\n    dict(\n        type='MultiStepLR',\n        begin=0,\n        end=10,\n        by_epoch=True,\n        milestones=[8],\n        gamma=0.1)\n]\n\n# \u200b\u8bad\u7ec3\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u914d\u7f6e\u200b\ntrain_cfg = dict(type='EpochBasedTrainLoop', max_epochs=10, val_interval=1)\nval_cfg = dict(type='ValLoop')\ntest_cfg = dict(type='TestLoop')\n\n# \u200b\u6211\u4eec\u200b\u91c7\u7528\u200b COCO \u200b\u9884\u200b\u8bad\u7ec3\u200b\u8fc7\u200b\u7684\u200b Cascade Mask R-CNN R50 \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u4f5c\u4e3a\u200b\u521d\u59cb\u5316\u200b\u6743\u91cd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u66f4\u52a0\u200b\u7a33\u5b9a\u200b\u7684\u200b\u6027\u80fd\u200b\nload_from = 'https://download.openmmlab.com/mmdetection/v2.0/cascade_rcnn/cascade_mask_rcnn_r50_fpn_1x_coco/cascade_mask_rcnn_r50_fpn_1x_coco_20200203-9d4dcb24.pth'\n</code></pre>"},{"location":"user_guides/new_model/#_5","title":"\u8bad\u7ec3\u200b\u65b0\u200b\u6a21\u578b","text":"<p>\u200b\u4e3a\u4e86\u200b\u80fd\u591f\u200b\u4f7f\u7528\u200b\u65b0\u589e\u200b\u914d\u7f6e\u200b\u6765\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> <pre><code>python tools/train.py configs/cityscapes/cascade-mask-rcnn_r50_augfpn_autoaug-10e_cityscapes.py\n</code></pre> <p>\u200b\u5982\u679c\u200b\u60f3\u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u7528\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b \u200b\u4f8b\u5b50\u200b1\u3002</p>"},{"location":"user_guides/new_model/#_6","title":"\u6d4b\u8bd5\u200b\u548c\u200b\u63a8\u7406","text":"<p>\u200b\u4e3a\u4e86\u200b\u80fd\u591f\u200b\u6d4b\u8bd5\u200b\u8bad\u7ec3\u200b\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> <pre><code>python tools/test.py configs/cityscapes/cascade-mask-rcnn_r50_augfpn_autoaug-10e_cityscapes.py work_dirs/cascade-mask-rcnn_r50_augfpn_autoaug-10e_cityscapes/epoch_10.pth\n</code></pre> <p>\u200b\u5982\u679c\u200b\u60f3\u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u7528\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b \u200b\u4f8b\u5b50\u200b1\u3002</p>"},{"location":"user_guides/robustness_benchmarking/","title":"\u68c0\u6d4b\u5668\u200b\u9c81\u68d2\u6027\u200b\u68c0\u67e5","text":""},{"location":"user_guides/robustness_benchmarking/#_2","title":"\u4ecb\u7ecd","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5728\u200b Benchmarking Robustness in Object Detection: Autonomous Driving when Winter is Coming \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u300c\u200b\u56fe\u50cf\u200b\u635f\u574f\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u300d\u200b\u4e0a\u200b\u6d4b\u8bd5\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u548c\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u6a21\u578b\u200b\u7684\u200b\u5de5\u5177\u200b\u3002 \u200b\u6b64\u200b\u9875\u9762\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u8be5\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u57fa\u672c\u200b\u6559\u7a0b\u200b\u3002</p> <pre><code>@article{michaelis2019winter,\n  title={Benchmarking Robustness in Object Detection:\n    Autonomous Driving when Winter is Coming},\n  author={Michaelis, Claudio and Mitzkus, Benjamin and\n    Geirhos, Robert and Rusak, Evgenia and\n    Bringmann, Oliver and Ecker, Alexander S. and\n    Bethge, Matthias and Brendel, Wieland},\n  journal={arXiv:1907.07484},\n  year={2019}\n}\n</code></pre> <p></p>"},{"location":"user_guides/robustness_benchmarking/#_3","title":"\u5173\u4e8e\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5","text":"<p>\u200b\u8981\u200b\u5c06\u200b\u7ed3\u679c\u200b\u63d0\u4ea4\u200b\u5230\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u8bf7\u200b\u8bbf\u95ee\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u4e3b\u9875\u200b</p> <p>\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u662f\u200b\u4eff\u7167\u200b imagenet-c \u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u7531\u200b Dan Hendrycks \u200b\u548c\u200b Thomas Dietterich \u200b\u5728\u200bBenchmarking Neural Network Robustness to Common Corruptions and Perturbations(ICLR 2019)\u200b\u4e2d\u200b\u53d1\u8868\u200b\u3002</p> <p>\u200b\u56fe\u50cf\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u529f\u80fd\u200b\u5305\u542b\u200b\u5728\u200b\u6b64\u5e93\u200b\u4e2d\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u65b9\u6cd5\u200b\u5355\u72ec\u200b\u5b89\u88c5\u200b\uff1a</p> <pre><code>pip install imagecorruptions\n</code></pre> <p>\u200b\u4e0e\u200b imagenet-c \u200b\u76f8\u6bd4\u200b\uff0c\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u8fdb\u884c\u200b\u4e00\u4e9b\u200b\u66f4\u6539\u200b\u4ee5\u200b\u5904\u7406\u200b\u4efb\u610f\u200b\u5927\u5c0f\u200b\u7684\u200b\u56fe\u50cf\u200b\u548c\u200b\u7070\u5ea6\u200b\u56fe\u50cf\u200b\u3002 \u200b\u6211\u4eec\u200b\u8fd8\u200b\u4fee\u6539\u200b\u4e86\u200b\u201c\u200b\u8fd0\u52a8\u200b\u6a21\u7cca\u200b\u201d\u200b\u548c\u200b\u201c\u200b\u96ea\u200b\u201d\u200b\u635f\u574f\u200b\uff0c\u200b\u4ee5\u200b\u89e3\u9664\u200b\u5bf9\u4e8e\u200b linux \u200b\u7279\u5b9a\u200b\u5e93\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c \u200b\u5426\u5219\u200b\u5fc5\u987b\u200b\u5355\u72ec\u200b\u5b89\u88c5\u200b\u8fd9\u4e9b\u200b\u5e93\u200b\u3002\u200b\u6709\u5173\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b imagecorruptions\u3002</p>"},{"location":"user_guides/robustness_benchmarking/#_4","title":"\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u63a8\u7406","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\u6765\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u5728\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u7684\u200b\u5404\u79cd\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u7ec4\u5408\u200b\u4e0b\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p>"},{"location":"user_guides/robustness_benchmarking/#_5","title":"\u5728\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u6d4b\u8bd5","text":"<ul> <li> \u200b\u5355\u5f20\u200b GPU \u200b\u6d4b\u8bd5\u200b</li> <li> \u200b\u591a\u200b\u5f20\u200b GPU \u200b\u6d4b\u8bd5\u200b</li> <li> \u200b\u53ef\u89c6\u5316\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b</li> </ul> <p>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5728\u200b\u57fa\u51c6\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u4f7f\u7528\u200b 15 \u200b\u79cd\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u6765\u200b\u6d4b\u8bd5\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u3002</p> <pre><code># single-gpu testing\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}]\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u5176\u5b83\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u3002</p> <pre><code># noise\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --corruptions noise\n\n# blur\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --corruptions blur\n\n# wetaher\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --corruptions weather\n\n# digital\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --corruptions digital\n</code></pre> <p>\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u4e00\u7ec4\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code># gaussian noise, zoom blur and snow\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --corruptions gaussian_noise zoom_blur snow\n</code></pre> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u65bd\u52a0\u200b\u5728\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u7684\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u7684\u200b\u4e25\u91cd\u200b\u7a0b\u5ea6\u200b\u3002 \u200b\u4e25\u91cd\u200b\u7a0b\u5ea6\u200b\u4ece\u200b 1 \u200b\u5230\u200b 5 \u200b\u9010\u7ea7\u200b\u589e\u5f3a\u200b\uff0c0 \u200b\u8868\u793a\u200b\u4e0d\u200b\u5bf9\u200b\u56fe\u50cf\u200b\u65bd\u52a0\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\uff0c\u200b\u5373\u200b\u539f\u59cb\u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\u3002</p> <pre><code># severity 1\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --severities 1\n\n# severities 0,2,4\npython tools/analysis_tools/test_robustness.py ${CONFIG_FILE} ${CHECKPOINT_FILE} [--out ${RESULT_FILE}] [--eval ${EVAL_METRICS}] --severities 0 2 4\n</code></pre>"},{"location":"user_guides/robustness_benchmarking/#_6","title":"\u6a21\u578b\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c","text":"<p>\u200b\u4e0b\u8868\u662f\u200b\u5404\u200b\u6a21\u578b\u200b\u5728\u200b COCO 2017val \u200b\u4e0a\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u3002</p> Model Backbone Style Lr schd box AP clean box AP corr. box % mask AP clean mask AP corr. mask % Faster R-CNN R-50-FPN pytorch 1x 36.3 18.2 50.2 - - - Faster R-CNN R-101-FPN pytorch 1x 38.5 20.9 54.2 - - - Faster R-CNN X-101-32x4d-FPN pytorch 1x 40.1 22.3 55.5 - - - Faster R-CNN X-101-64x4d-FPN pytorch 1x 41.3 23.4 56.6 - - - Faster R-CNN R-50-FPN-DCN pytorch 1x 40.0 22.4 56.1 - - - Faster R-CNN X-101-32x4d-FPN-DCN pytorch 1x 43.4 26.7 61.6 - - - Mask R-CNN R-50-FPN pytorch 1x 37.3 18.7 50.1 34.2 16.8 49.1 Mask R-CNN R-50-FPN-DCN pytorch 1x 41.1 23.3 56.7 37.2 20.7 55.7 Cascade R-CNN R-50-FPN pytorch 1x 40.4 20.1 49.7 - - - Cascade Mask R-CNN R-50-FPN pytorch 1x 41.2 20.7 50.2 35.7 17.6 49.3 RetinaNet R-50-FPN pytorch 1x 35.6 17.8 50.1 - - - Hybrid Task Cascade X-101-64x4d-FPN-DCN pytorch 1x 50.6 32.7 64.7 43.8 28.1 64.0 <p>\u200b\u7531\u4e8e\u200b\u5bf9\u200b\u56fe\u50cf\u200b\u7684\u200b\u635f\u574f\u200b\u53d8\u6362\u200b\u5b58\u5728\u200b\u968f\u673a\u6027\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u53ef\u80fd\u200b\u7565\u6709\u4e0d\u540c\u200b\u3002</p>"},{"location":"user_guides/semi_det/","title":"\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b","text":"<p>\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u540c\u65f6\u200b\u5229\u7528\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u4e00\u65b9\u9762\u200b\u53ef\u4ee5\u200b\u51cf\u5c11\u200b\u6a21\u578b\u200b\u5bf9\u200b\u68c0\u6d4b\u200b\u6846\u200b\u6570\u91cf\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u53e6\u4e00\u65b9\u9762\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b\u5927\u91cf\u200b\u7684\u200b\u672a\u200b\u6807\u8bb0\u200b\u6570\u636e\u200b\u8fdb\u4e00\u6b65\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u6309\u7167\u200b\u4ee5\u4e0b\u200b\u6d41\u7a0b\u200b\u8fdb\u884c\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\uff1a</p> <ul> <li>\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b</li> <li>\u200b\u51c6\u5907\u200b\u548c\u200b\u62c6\u5206\u200b\u6570\u636e\u200b\u96c6\u200b</li> <li>\u200b\u914d\u7f6e\u200b\u591a\u200b\u5206\u652f\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b</li> <li>\u200b\u914d\u7f6e\u200b\u534a\u200b\u76d1\u7763\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b</li> <li>\u200b\u914d\u7f6e\u200b\u534a\u200b\u76d1\u7763\u200b\u6a21\u578b\u200b</li> <li>\u200b\u914d\u7f6e\u200bMeanTeacherHook</li> <li>\u200b\u914d\u7f6e\u200bTeacherStudentValLoop</li> </ul>"},{"location":"user_guides/semi_det/#_2","title":"\u51c6\u5907\u200b\u548c\u200b\u62c6\u5206\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0b\u8f7d\u200b\u811a\u672c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e0b\u8f7d\u200b coco2017 \u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u81ea\u52a8\u200b\u89e3\u538b\u200b\u3002</p> <pre><code>python tools/misc/download_dataset.py\n</code></pre> <p>\u200b\u89e3\u538b\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u76ee\u5f55\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 image_info_unlabeled2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_val2017.json\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 unlabeled2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n</code></pre> <p>\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u5728\u200b coco \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u6709\u200b\u4e24\u79cd\u200b\u6bd4\u8f83\u200b\u901a\u7528\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u8bbe\u7f6e\u200b\uff1a</p> <p>\uff081\uff09\u200b\u5c06\u200b <code>train2017</code> \u200b\u6309\u7167\u200b\u56fa\u5b9a\u200b\u767e\u5206\u6bd4\u200b\uff081%\uff0c2%\uff0c5% \u200b\u548c\u200b 10%\uff09\u200b\u5212\u5206\u200b\u51fa\u200b\u4e00\u90e8\u5206\u200b\u6570\u636e\u200b\u4f5c\u4e3a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5269\u4f59\u200b\u7684\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u6570\u636e\u200b\u4f5c\u4e3a\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u540c\u65f6\u200b\u8003\u8651\u200b\u5212\u5206\u200b\u4e0d\u540c\u200b\u7684\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u6570\u636e\u200b\u4f5c\u4e3a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u5bf9\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u7684\u200b\u7ed3\u679c\u200b\u5f71\u54cd\u200b\u8f83\u5927\u200b\uff0c\u200b\u6240\u4ee5\u200b\u91c7\u7528\u200b\u4e94\u6298\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u6765\u200b\u8bc4\u4f30\u200b\u7b97\u6cd5\u200b\u6027\u80fd\u200b\u3002\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6570\u636e\u200b\u96c6\u200b\u5212\u5206\u200b\u811a\u672c\u200b\uff1a</p> <pre><code>python tools/misc/split_coco.py\n</code></pre> <p>\u200b\u8be5\u200b\u811a\u672c\u200b\u9ed8\u8ba4\u200b\u4f1a\u200b\u6309\u7167\u200b 1%\uff0c2%\uff0c5% \u200b\u548c\u200b 10% \u200b\u7684\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u5360\u200b\u6bd4\u200b\u5212\u5206\u200b <code>train2017</code>\uff0c\u200b\u6bcf\u200b\u4e00\u79cd\u200b\u5212\u5206\u200b\u4f1a\u200b\u968f\u673a\u200b\u91cd\u590d\u200b 5 \u200b\u6b21\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u751f\u6210\u200b\u7684\u200b\u534a\u200b\u76d1\u7763\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u540d\u79f0\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li> <p>\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u6807\u6ce8\u200b\u540d\u79f0\u200b\u683c\u5f0f\u200b\uff1a<code>instances_train2017.{fold}@{percent}.json</code></p> </li> <li> <p>\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u540d\u79f0\u200b\u6807\u6ce8\u200b\uff1a<code>instances_train2017.{fold}@{percent}-unlabeled.json</code></p> </li> </ul> <p>\u200b\u5176\u4e2d\u200b\uff0c<code>fold</code> \u200b\u7528\u4e8e\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff0c<code>percent</code> \u200b\u8868\u793a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u7684\u200b\u5360\u200b\u6bd4\u200b\u3002 \u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 image_info_unlabeled2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_val2017.json\n\u2502   \u2502   \u251c\u2500\u2500 semi_anns\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@1.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@1-unlabeled.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@2.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@2-unlabeled.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@5.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@5-unlabeled.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@10.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.1@10-unlabeled.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.2@1.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.2@1-unlabeled.json\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 unlabeled2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n</code></pre> <p>\uff082\uff09\u200b\u5c06\u200b <code>train2017</code> \u200b\u4f5c\u4e3a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c<code>unlabeled2017</code> \u200b\u4f5c\u4e3a\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u7531\u4e8e\u200b <code>image_info_unlabeled2017.json</code> \u200b\u6ca1\u6709\u200b <code>categories</code> \u200b\u4fe1\u606f\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u521d\u59cb\u5316\u200b <code>CocoDataset</code> \uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u5c06\u200b <code>instances_train2017.json</code> \u200b\u7684\u200b <code>categories</code> \u200b\u5199\u5165\u200b <code>image_info_unlabeled2017.json</code> \uff0c\u200b\u53e6\u5b58\u4e3a\u200b <code>instances_unlabeled2017.json</code>\uff0c\u200b\u76f8\u5173\u200b\u811a\u672c\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>from mmengine.fileio import load, dump\n\nanns_train = load('instances_train2017.json')\nanns_unlabeled = load('image_info_unlabeled2017.json')\nanns_unlabeled['categories'] = anns_train['categories']\ndump(anns_unlabeled, 'instances_unlabeled2017.json')\n</code></pre> <p>\u200b\u5904\u7406\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u76ee\u5f55\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 image_info_unlabeled2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_train2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_unlabeled2017.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 instances_val2017.json\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 unlabeled2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n</code></pre>"},{"location":"user_guides/semi_det/#_3","title":"\u914d\u7f6e\u200b\u591a\u200b\u5206\u652f\u200b\u6570\u636e\u200b\u6d41\u7a0b","text":"<p>\u200b\u534a\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6709\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b \u200b\u4e00\u81f4\u6027\u200b\u6b63\u5219\u200b\u5316\u200b \u200b\u548c\u200b\u4f2a\u200b\u6807\u7b7e\u200b \u3002 \u200b\u4e00\u81f4\u6027\u200b\u6b63\u5219\u200b\u5316\u200b\u5f80\u5f80\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u7cbe\u5fc3\u200b\u7684\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u800c\u200b\u4f2a\u200b\u6807\u7b7e\u200b\u7684\u200b\u5f62\u5f0f\u200b\u6bd4\u8f83\u7b80\u5355\u200b\uff0c\u200b\u66f4\u200b\u5bb9\u6613\u200b\u62d3\u5c55\u200b\u5230\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u3002\u200b\u6211\u4eec\u200b\u4e3b\u8981\u200b\u91c7\u7528\u200b\u4e86\u200b\u57fa\u4e8e\u200b\u4f2a\u200b\u6807\u7b7e\u200b\u7684\u200b\u6559\u5e08\u200b\u5b66\u751f\u200b\u8054\u5408\u200b\u8bad\u7ec3\u200b\u7684\u200b\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u6846\u67b6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u9700\u8981\u200b\u914d\u7f6e\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\uff1a \uff081\uff09\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u7684\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code># pipeline used to augment labeled data,\n# which will be sent to student model for supervised training.\nsup_pipeline = [\n    dict(type='LoadImageFromFile',backend_args = backend_args),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RandomResize', scale=scale, keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='RandAugment', aug_space=color_space, aug_num=1),\n    dict(type='FilterAnnotations', min_gt_bbox_wh=(1e-2, 1e-2)),\n    dict(type='MultiBranch', sup=dict(type='PackDetInputs'))\n]\n</code></pre> <p>\uff082\uff09\u200b\u65e0\u200b\u6807\u7b7e\u200b\u7684\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code># pipeline used to augment unlabeled data weakly,\n# which will be sent to teacher model for predicting pseudo instances.\nweak_pipeline = [\n    dict(type='RandomResize', scale=scale, keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='PackDetInputs',\n        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',\n                   'scale_factor', 'flip', 'flip_direction',\n                   'homography_matrix')),\n]\n\n# pipeline used to augment unlabeled data strongly,\n# which will be sent to student model for unsupervised training.\nstrong_pipeline = [\n    dict(type='RandomResize', scale=scale, keep_ratio=True),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='RandomOrder',\n        transforms=[\n            dict(type='RandAugment', aug_space=color_space, aug_num=1),\n            dict(type='RandAugment', aug_space=geometric, aug_num=1),\n        ]),\n    dict(type='RandomErasing', n_patches=(1, 5), ratio=(0, 0.2)),\n    dict(type='FilterAnnotations', min_gt_bbox_wh=(1e-2, 1e-2)),\n    dict(\n        type='PackDetInputs',\n        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',\n                   'scale_factor', 'flip', 'flip_direction',\n                   'homography_matrix')),\n]\n\n# pipeline used to augment unlabeled data into different views\nunsup_pipeline = [\n    dict(type='LoadImageFromFile', backend_args = backend_args),\n    dict(type='LoadEmptyAnnotations'),\n    dict(\n        type='MultiBranch',\n        unsup_teacher=weak_pipeline,\n        unsup_student=strong_pipeline,\n    )\n]\n</code></pre>"},{"location":"user_guides/semi_det/#_4","title":"\u914d\u7f6e\u200b\u534a\u200b\u76d1\u7763\u200b\u6570\u636e\u200b\u52a0\u8f7d","text":"<p>\uff081\uff09\u200b\u6784\u5efa\u200b\u534a\u200b\u76d1\u7763\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u4f7f\u7528\u200b <code>ConcatDataset</code> \u200b\u62fc\u63a5\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <pre><code>labeled_dataset = dict(\n    type=dataset_type,\n    data_root=data_root,\n    ann_file='annotations/instances_train2017.json',\n    data_prefix=dict(img='train2017/'),\n    filter_cfg=dict(filter_empty_gt=True, min_size=32),\n    pipeline=sup_pipeline)\n\nunlabeled_dataset = dict(\n    type=dataset_type,\n    data_root=data_root,\n    ann_file='annotations/instances_unlabeled2017.json',\n    data_prefix=dict(img='unlabeled2017/'),\n    filter_cfg=dict(filter_empty_gt=False),\n    pipeline=unsup_pipeline)\n\ntrain_dataloader = dict(\n    batch_size=batch_size,\n    num_workers=num_workers,\n    persistent_workers=True,\n    sampler=dict(\n        type='GroupMultiSourceSampler',\n        batch_size=batch_size,\n        source_ratio=[1, 4]),\n    dataset=dict(\n        type='ConcatDataset', datasets=[labeled_dataset, unlabeled_dataset]))\n</code></pre> <p>\uff082\uff09\u200b\u4f7f\u7528\u200b\u591a\u6e90\u200b\u6570\u636e\u200b\u96c6\u200b\u91c7\u6837\u5668\u200b\u3002 \u200b\u4f7f\u7528\u200b <code>GroupMultiSourceSampler</code> \u200b\u4ece\u200b <code>labeled_dataset</code> \u200b\u548c\u200b <code>labeled_dataset</code> \u200b\u91c7\u6837\u200b\u6570\u636e\u200b\u7ec4\u6210\u200b batch , <code>source_ratio</code> \u200b\u63a7\u5236\u200b batch \u200b\u4e2d\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u7684\u200b\u5360\u200b\u6bd4\u200b\u3002<code>GroupMultiSourceSampler</code> \u200b\u8fd8\u200b\u4fdd\u8bc1\u200b\u4e86\u200b\u540c\u4e00\u4e2a\u200b batch \u200b\u4e2d\u200b\u7684\u200b\u56fe\u7247\u200b\u5177\u6709\u200b\u76f8\u8fd1\u200b\u7684\u200b\u957f\u5bbd\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4fdd\u8bc1\u200bbatch\u200b\u5185\u200b\u56fe\u7247\u200b\u7684\u200b\u957f\u5bbd\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>MultiSourceSampler</code>\u3002<code>GroupMultiSourceSampler</code> \u200b\u91c7\u6837\u200b\u793a\u610f\u56fe\u200b\u5982\u4e0b\u200b\uff1a</p> <p><code>sup=1000</code> \u200b\u8868\u793a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u89c4\u6a21\u200b\u4e3a\u200b 1000 \uff0c<code>sup_h=200</code> \u200b\u8868\u793a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b1\u200b\u7684\u200b\u56fe\u7247\u200b\u89c4\u6a21\u200b\u4e3a\u200b 200\uff0c<code>sup_w=800</code> \u200b\u8868\u793a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u5c0f\u4e8e\u200b1\u200b\u7684\u200b\u56fe\u7247\u200b\u89c4\u6a21\u200b\u4e3a\u200b 800 \uff0c<code>unsup=9000</code> \u200b\u8868\u793a\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u89c4\u6a21\u200b\u4e3a\u200b 9000 \uff0c<code>unsup_h=1800</code> \u200b\u8868\u793a\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b1\u200b\u7684\u200b\u56fe\u7247\u200b\u89c4\u6a21\u200b\u4e3a\u200b 1800\uff0c<code>unsup_w=7200</code> \u200b\u8868\u793a\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u5c0f\u4e8e\u200b1\u200b\u7684\u200b\u56fe\u7247\u200b\u89c4\u6a21\u200b\u4e3a\u200b 7200 \uff0c<code>GroupMultiSourceSampler</code> \u200b\u6bcf\u6b21\u200b\u6309\u7167\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u56fe\u7247\u200b\u7684\u200b\u603b\u4f53\u200b\u957f\u5bbd\u200b\u6bd4\u200b\u5206\u5e03\u200b\u968f\u673a\u200b\u9009\u62e9\u200b\u4e00\u7ec4\u200b\uff0c\u200b\u7136\u540e\u200b\u6309\u7167\u200b <code>source_ratio</code> \u200b\u4ece\u200b\u4e24\u4e2a\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u91c7\u6837\u200b\u7ec4\u6210\u200b batch \uff0c\u200b\u56e0\u6b64\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u65e0\u200b\u6807\u7b7e\u200b\u6570\u636e\u200b\u96c6\u200b\u91cd\u590d\u200b\u91c7\u6837\u200b\u6b21\u6570\u200b\u4e0d\u540c\u200b\u3002</p>"},{"location":"user_guides/semi_det/#_5","title":"\u914d\u7f6e\u200b\u534a\u200b\u76d1\u7763\u200b\u6a21\u578b","text":"<p>\u200b\u6211\u4eec\u200b\u9009\u62e9\u200b <code>Faster R-CNN</code> \u200b\u4f5c\u4e3a\u200b <code>detector</code> \u200b\u8fdb\u884c\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u4ee5\u534a\u200b\u76d1\u7763\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\u7b97\u6cd5\u200b <code>SoftTeacher</code> \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u6a21\u578b\u200b\u7684\u200b\u914d\u7f6e\u200b\u53ef\u4ee5\u200b\u7ee7\u627f\u200b <code>_base_/models/faster-rcnn_r50_fpn.py</code>\uff0c\u200b\u5c06\u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b\u9aa8\u5e72\u200b\u7f51\u7edc\u200b\u66ff\u6362\u6210\u200b <code>caffe</code> \u200b\u98ce\u683c\u200b\u3002 \u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e0e\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0c<code>Faster R-CNN</code> \u200b\u4f5c\u4e3a\u200b <code>detector</code>\uff0c\u200b\u662f\u200b\u4f5c\u4e3a\u200b <code>model</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5c5e\u6027\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b <code>model</code> \u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u5c06\u200b<code>data_preprocessor</code>\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b<code>MultiBranchDataPreprocessor</code>\uff0c\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\u6570\u636e\u200b\u6d41\u7a0b\u200b\u56fe\u7247\u200b\u7684\u200b\u586b\u5145\u200b\u548c\u200b\u5f52\u4e00\u5316\u200b\u3002 \u200b\u6700\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>semi_train_cfg</code> \u200b\u548c\u200b <code>semi_test_cfg</code> \u200b\u914d\u7f6e\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u9700\u8981\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/faster-rcnn_r50_fpn.py', '../_base_/default_runtime.py',\n    '../_base_/datasets/semi_coco_detection.py'\n]\n\ndetector = _base_.model\ndetector.data_preprocessor = dict(\n    type='DetDataPreprocessor',\n    mean=[103.530, 116.280, 123.675],\n    std=[1.0, 1.0, 1.0],\n    bgr_to_rgb=False,\n    pad_size_divisor=32)\ndetector.backbone = dict(\n    type='ResNet',\n    depth=50,\n    num_stages=4,\n    out_indices=(0, 1, 2, 3),\n    frozen_stages=1,\n    norm_cfg=dict(type='BN', requires_grad=False),\n    norm_eval=True,\n    style='caffe',\n    init_cfg=dict(\n        type='Pretrained',\n        checkpoint='open-mmlab://detectron2/resnet50_caffe'))\n\nmodel = dict(\n    _delete_=True,\n    type='SoftTeacher',\n    detector=detector,\n    data_preprocessor=dict(\n        type='MultiBranchDataPreprocessor',\n        data_preprocessor=detector.data_preprocessor),\n    semi_train_cfg=dict(\n        freeze_teacher=True,\n        sup_weight=1.0,\n        unsup_weight=4.0,\n        pseudo_label_initial_score_thr=0.5,\n        rpn_pseudo_thr=0.9,\n        cls_pseudo_thr=0.9,\n        reg_pseudo_thr=0.02,\n        jitter_times=10,\n        jitter_scale=0.06,\n        min_pseudo_bbox_wh=(1e-2, 1e-2)),\n    semi_test_cfg=dict(predict_on='teacher'))\n</code></pre> <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u652f\u6301\u200b\u5176\u4ed6\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u6bd4\u5982\u200b\uff0c<code>RetinaNet</code> \u200b\u548c\u200b <code>Cascade R-CNN</code>\u3002\u200b\u7531\u4e8e\u200b <code>SoftTeacher</code> \u200b\u4ec5\u200b\u652f\u6301\u200b <code>Faster R-CNN</code>\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u5c06\u200b\u5176\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>SemiBaseDetector</code>\uff0c\u200b\u793a\u4f8b\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>_base_ = [\n    '../_base_/models/retinanet_r50_fpn.py', '../_base_/default_runtime.py',\n    '../_base_/datasets/semi_coco_detection.py'\n]\n\ndetector = _base_.model\n\nmodel = dict(\n    _delete_=True,\n    type='SemiBaseDetector',\n    detector=detector,\n    data_preprocessor=dict(\n        type='MultiBranchDataPreprocessor',\n        data_preprocessor=detector.data_preprocessor),\n    semi_train_cfg=dict(\n        freeze_teacher=True,\n        sup_weight=1.0,\n        unsup_weight=1.0,\n        cls_pseudo_thr=0.9,\n        min_pseudo_bbox_wh=(1e-2, 1e-2)),\n    semi_test_cfg=dict(predict_on='teacher'))\n</code></pre> <p>\u200b\u6cbf\u7528\u200b <code>SoftTeacher</code> \u200b\u7684\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5c06\u200b <code>batch_size</code> \u200b\u6539\u4e3a\u200b 2 \uff0c<code>source_ratio</code> \u200b\u6539\u4e3a\u200b <code>[1, 1]</code>\uff0c<code>RetinaNet</code>\uff0c<code>Faster R-CNN</code>\uff0c <code>Cascade R-CNN</code> \u200b\u4ee5\u53ca\u200b <code>SoftTeacher</code> \u200b\u5728\u200b 10% coco \u200b\u8bad\u7ec3\u200b\u96c6\u4e0a\u200b\u7684\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u548c\u200b\u534a\u200b\u76d1\u7763\u200b\u8bad\u7ec3\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> Model Detector BackBone Style sup-0.1-coco mAP semi-0.1-coco mAP SemiBaseDetector RetinaNet R-50-FPN caffe 23.5 27.7 SemiBaseDetector Faster R-CNN R-50-FPN caffe 26.7 28.4 SemiBaseDetector Cascade R-CNN R-50-FPN caffe 28.0 29.7 SoftTeacher Faster R-CNN R-50-FPN caffe 26.7 31.1"},{"location":"user_guides/semi_det/#meanteacherhook","title":"\u914d\u7f6e\u200bMeanTeacherHook","text":"<p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u6559\u5e08\u200b\u6a21\u578b\u200b\u91c7\u7528\u200b\u5bf9\u200b\u5b66\u751f\u200b\u6a21\u578b\u200b\u6307\u6570\u200b\u6ed1\u52a8\u200b\u5e73\u5747\u200b\uff08EMA\uff09\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\uff0c\u200b\u8fdb\u800c\u200b\u6559\u5e08\u200b\u6a21\u578b\u200b\u968f\u7740\u200b\u5b66\u751f\u200b\u6a21\u578b\u200b\u7684\u200b\u4f18\u5316\u200b\u800c\u200b\u4f18\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u914d\u7f6e\u200b <code>custom_hooks</code> \u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>custom_hooks = [dict(type='MeanTeacherHook')]\n</code></pre>"},{"location":"user_guides/semi_det/#teacherstudentvalloop","title":"\u914d\u7f6e\u200bTeacherStudentValLoop","text":"<p>\u200b\u7531\u4e8e\u200b\u6559\u5e08\u200b\u5b66\u751f\u200b\u8054\u5408\u200b\u8bad\u7ec3\u200b\u6846\u67b6\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b\u6a21\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>TeacherStudentValLoop</code> \u200b\u66ff\u6362\u200b <code>ValLoop</code>\uff0c\u200b\u5728\u200b\u8bad\u7ec3\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u540c\u65f6\u200b\u68c0\u9a8c\u200b\u4e24\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u3002</p> <pre><code>val_cfg = dict(type='TeacherStudentValLoop')\n</code></pre>"},{"location":"user_guides/single_stage_as_rpn/","title":"\u5c06\u200b\u5355\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u5668\u200b\u4f5c\u4e3a\u200b RPN","text":"<p>\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u7f51\u7edc\u200b (Region Proposal Network, RPN) \u200b\u4f5c\u4e3a\u200b Faster R-CNN \u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u6a21\u5757\u200b\uff0c\u200b\u5c06\u200b\u4e3a\u200b Faster R-CNN \u200b\u7684\u200b\u7b2c\u4e8c\u9636\u6bb5\u200b\u4ea7\u751f\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u3002\u200b\u5728\u200b MMDetection \u200b\u91cc\u200b\u5927\u591a\u6570\u200b\u7684\u200b\u4e8c\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u5668\u200b\u4f7f\u7528\u200b <code>RPNHead</code>\u200b\u4f5c\u4e3a\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u7f51\u7edc\u200b\u6765\u200b\u4ea7\u751f\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u4efb\u4f55\u200b\u7684\u200b\u5355\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u5668\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u7f51\u7edc\u200b\uff0c\u200b\u662f\u56e0\u4e3a\u200b\u4ed6\u4eec\u200b\u5bf9\u200b\u8fb9\u754c\u200b\u6846\u200b\u7684\u200b\u9884\u6d4b\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u662f\u200b\u4e00\u79cd\u200b\u5019\u9009\u200b\u533a\u57df\u200b\uff0c\u200b\u5e76\u4e14\u200b\u56e0\u6b64\u200b\u80fd\u591f\u200b\u5728\u200b R-CNN \u200b\u4e2d\u200b\u5f97\u5230\u200b\u6539\u8fdb\u200b\u3002\u200b\u56e0\u6b64\u200b\u5728\u200b MMDetection v3.0 \u200b\u4e2d\u200b\u4f1a\u200b\u652f\u6301\u200b\u5c06\u200b\u5355\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u5668\u200b\u4f5c\u4e3a\u200b RPN \u200b\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5373\u200b\u5982\u4f55\u200b\u5728\u200b Faster R-CNN \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u65e0\u951a\u200b\u6846\u200b\u7684\u200b\u5355\u200b\u9636\u6bb5\u200b\u7684\u200b\u68c0\u6d4b\u5668\u200b\u6a21\u578b\u200b FCOS \u200b\u4f5c\u4e3a\u200b RPN \uff0c\u200b\u8be6\u7ec6\u200b\u9610\u8ff0\u200b\u5177\u4f53\u200b\u7684\u200b\u5168\u90e8\u200b\u6d41\u7a0b\u200b\u3002</p> <p>\u200b\u4e3b\u8981\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b:</p> <ol> <li>\u200b\u5728\u200b Faster R-CNN \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>FCOSHead</code> \u200b\u4f5c\u4e3a\u200b <code>RPNHead</code></li> <li>\u200b\u8bc4\u4f30\u200b\u5019\u9009\u200b\u533a\u57df\u200b</li> <li>\u200b\u7528\u200b\u9884\u5148\u200b\u8bad\u7ec3\u200b\u7684\u200b FCOS \u200b\u8bad\u7ec3\u200b\u5b9a\u5236\u200b\u7684\u200b Faster R-CNN</li> </ol>"},{"location":"user_guides/single_stage_as_rpn/#faster-r-cnn-fcoshead-rpnhead","title":"\u5728\u200b Faster R-CNN \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>FCOSHead</code> \u200b\u4f5c\u4e3a\u200b<code>RPNHead</code>","text":"<p>\u200b\u4e3a\u4e86\u200b\u5728\u200b Faster R-CNN \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>FCOSHead</code> \u200b\u4f5c\u4e3a\u200b <code>RPNHead</code> \uff0c\u200b\u6211\u4eec\u200b\u5e94\u8be5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b <code>configs/faster_rcnn/faster-rcnn_r50_fpn_fcos-rpn_1x_coco.py</code> \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b <code>configs/faster_rcnn/faster-rcnn_r50_fpn_fcos-rpn_1x_coco.py</code> \u200b\u4e2d\u5c06\u200b <code>rpn_head</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>bbox_head</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u6b64\u5916\u200b\u6211\u4eec\u200b\u4ecd\u7136\u200b\u4f7f\u7528\u200b FCOS \u200b\u7684\u200b\u74f6\u9888\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u6b65\u5e45\u200b\u4e3a\u200b<code>[8,16,32,64,128]</code>\uff0c\u200b\u5e76\u4e14\u200b\u66f4\u65b0\u200b <code>bbox_roi_extractor</code> \u200b\u7684\u200b <code>featmap_stride</code> \u200b\u4e3a\u200b <code>[8,16,32,64,128]</code>\u3002\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u635f\u5931\u200b\u53d8\u6162\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u524d\u200b1000\u200b\u6b21\u200b\u8fed\u4ee3\u200b\u800c\u200b\u4e0d\u662f\u200b\u524d\u200b500\u200b\u6b21\u200b\u8fed\u4ee3\u200b\u4e2d\u200b\u5e94\u7528\u200b\u9884\u70ed\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b lr \u200b\u589e\u957f\u200b\u5f97\u200b\u66f4\u6162\u200b\u3002\u200b\u76f8\u5173\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b:</p> <pre><code>_base_ = [\n    '../_base_/models/faster-rcnn_r50_fpn.py',\n    '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\nmodel = dict(\n    # \u200b\u4ece\u200b configs/fcos/fcos_r50-caffe_fpn_gn-head_1x_coco.py \u200b\u590d\u5236\u200b\n    neck=dict(\n        start_level=1,\n        add_extra_convs='on_output',  # \u200b\u4f7f\u7528\u200b P5\n        relu_before_extra_convs=True),\n    rpn_head=dict(\n        _delete_=True,  # \u200b\u5ffd\u7565\u200b\u672a\u200b\u4f7f\u7528\u200b\u7684\u200b\u65e7\u200b\u8bbe\u7f6e\u200b\n        type='FCOSHead',\n        num_classes=1,  # \u200b\u5bf9\u4e8e\u200b rpn, num_classes = 1\uff0c\u200b\u5982\u679c\u200b num_classes &gt; 1\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5728\u200b TwoStageDetector \u200b\u4e2d\u200b\u81ea\u52a8\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        strides=[8, 16, 32, 64, 128],\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='IoULoss', loss_weight=1.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),\n    roi_head=dict(  # featmap_strides \u200b\u7684\u200b\u66f4\u65b0\u200b\u53d6\u51b3\u4e8e\u200b\u4e8e\u200b\u9888\u90e8\u200b\u7684\u200b\u6b65\u4f10\u200b\n        bbox_roi_extractor=dict(featmap_strides=[8, 16, 32, 64, 128])))\n# \u200b\u5b66\u4e60\u200b\u7387\u200b\nparam_scheduler = [\n    dict(\n        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0,\n        end=1000),  # \u200b\u6162\u6162\u200b\u589e\u52a0\u200b lr\uff0c\u200b\u5426\u5219\u200b\u635f\u5931\u200b\u53d8\u6210\u200b NAN\n    dict(\n        type='MultiStepLR',\n        begin=0,\n        end=12,\n        by_epoch=True,\n        milestones=[8, 11],\n        gamma=0.1)\n]\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u547d\u4ee4\u200b\u6765\u200b\u8bad\u7ec3\u200b\u6211\u4eec\u200b\u7684\u200b\u5b9a\u5236\u200b\u6a21\u578b\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u8bad\u7ec3\u200b\u547d\u4ee4\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u8fd9\u91cc\u200b\u3002</p> <pre><code># \u200b\u4f7f\u7528\u200b8\u200b\u4e2a\u200b GPU \u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\nbash\ntools/dist_train.sh\nconfigs/faster_rcnn/faster-rcnn_r50_fpn_fcos-rpn_1x_coco.py\n--work-dir  /work_dirs/faster-rcnn_r50_fpn_fcos-rpn_1x_coco\n</code></pre>"},{"location":"user_guides/single_stage_as_rpn/#_1","title":"\u8bc4\u4f30\u200b\u5019\u9009\u200b\u533a\u57df","text":"<p>\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u7684\u200b\u8d28\u91cf\u200b\u5bf9\u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b\u6027\u80fd\u200b\u6709\u200b\u91cd\u8981\u200b\u5f71\u54cd\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u8bc4\u4f30\u200b\u5019\u9009\u200b\u533a\u57df\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u548c\u200b\u4e0a\u9762\u200b\u4e00\u6837\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u540d\u4e3a\u200b <code>configs/rpn/fcos-rpn_r50_fpn_1x_coco.py</code> \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b <code>configs/rpn/fcos-rpn_r50_fpn_1x_coco.py</code> \u200b\u4e2d\u5c06\u200b <code>rpn_head</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>bbox_head</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/rpn_r50_fpn.py', '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\nval_evaluator = dict(metric='proposal_fast')\ntest_evaluator = val_evaluator\nmodel = dict(\n    # \u200b\u4ece\u200b configs/fcos/fcos_r50-caffe_fpn_gn-head_1x_coco.py \u200b\u590d\u5236\u200b\n    neck=dict(\n        start_level=1,\n        add_extra_convs='on_output',  # \u200b\u4f7f\u7528\u200b P5\n        relu_before_extra_convs=True),\n    rpn_head=dict(\n        _delete_=True,  # \u200b\u5ffd\u7565\u200b\u672a\u200b\u4f7f\u7528\u200b\u7684\u200b\u65e7\u200b\u8bbe\u7f6e\u200b\n        type='FCOSHead',\n        num_classes=1,  # \u200b\u5bf9\u4e8e\u200b rpn, num_classes = 1\uff0c\u200b\u5982\u679c\u200b num_classes &gt;\u200b\u4e3a\u200b1\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5728\u200b rpn \u200b\u4e2d\u200b\u81ea\u52a8\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        strides=[8, 16, 32, 64, 128],\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='IoULoss', loss_weight=1.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))\n</code></pre> <p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e4b\u540e\u200b\u6709\u200b\u68c0\u67e5\u70b9\u200b <code>./work_dirs/faster-rcnn_r50_fpn_fcos-rpn_1x_coco/epoch_12.pth</code> \uff0c\u200b\u7136\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u547d\u4ee4\u200b\u6765\u200b\u8bc4\u4f30\u200b\u5efa\u8bae\u200b\u7684\u200b\u8d28\u91cf\u200b\u3002</p> <pre><code># \u200b\u4f7f\u7528\u200b8\u200b\u4e2a\u200b GPU \u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\nbash\ntools/dist_test.sh\nconfigs/rpn/fcos-rpn_r50_fpn_1x_coco.py\n--work_dirs /faster-rcnn_r50_fpn_fcos-rpn_1x_coco/epoch_12.pth\n</code></pre>"},{"location":"user_guides/single_stage_as_rpn/#fcos-faster-r-cnn","title":"\u7528\u200b\u9884\u5148\u200b\u8bad\u7ec3\u200b\u7684\u200b FCOS \u200b\u8bad\u7ec3\u200b\u5b9a\u5236\u200b\u7684\u200b Faster R-CNN","text":"<p>\u200b\u9884\u200b\u8bad\u7ec3\u200b\u4e0d\u4ec5\u200b\u52a0\u5feb\u200b\u4e86\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b\uff0c\u200b\u800c\u4e14\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u68c0\u6d4b\u5668\u200b\u7684\u200b\u6027\u80fd\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u6765\u200b\u8bf4\u660e\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u9884\u5148\u200b\u8bad\u7ec3\u200b\u7684\u200b FCOS \u200b\u4f5c\u4e3a\u200b RPN \u200b\u6765\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\u548c\u200b\u63d0\u9ad8\u200b\u7cbe\u5ea6\u200b\u3002\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u60f3\u200b\u5728\u200b Faster R-CNN \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>FCOSHead</code> \u200b\u4f5c\u4e3a\u200b <code>rpn_head</code>\uff0c\u200b\u5e76\u200b\u52a0\u8f7d\u200b\u9884\u5148\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b\u6765\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b <code>fcos_r50-caffe_fpn_gn-head_1x_coco</code>\u3002 \u200b\u914d\u7f6e\u6587\u4ef6\u200b <code>configs/faster_rcnn/faster-rcnn_r50-caffe_fpn_fcos- rpn_1x_copy .py</code> \u200b\u7684\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c<code>fcos_r50-caffe_fpn_gn-head_1x_coco</code> \u200b\u4f7f\u7528\u200b ResNet50 \u200b\u7684\u200b caffe \u200b\u7248\u672c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b <code>data_preprocessor</code> \u200b\u4e2d\u200b\u7684\u200b\u50cf\u7d20\u200b\u5e73\u5747\u503c\u200b\u548c\u200b std\u3002</p> <pre><code>_base_ = [\n    '../_base_/models/faster-rcnn_r50_fpn.py',\n    '../_base_/datasets/coco_detection.py',\n    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'\n]\nmodel = dict(\n    data_preprocessor=dict(\n        mean=[103.530, 116.280, 123.675],\n        std=[1.0, 1.0, 1.0],\n        bgr_to_rgb=False),\n    backbone=dict(\n        norm_cfg=dict(type='BN', requires_grad=False),\n        style='caffe',\n        init_cfg=None),  # the checkpoint in ``load_from`` contains the weights of backbone\n    neck=dict(\n        start_level=1,\n        add_extra_convs='on_output',  # \u200b\u4f7f\u7528\u200b P5\n        relu_before_extra_convs=True),\n    rpn_head=dict(\n        _delete_=True,  # \u200b\u5ffd\u7565\u200b\u672a\u200b\u4f7f\u7528\u200b\u7684\u200b\u65e7\u200b\u8bbe\u7f6e\u200b\n        type='FCOSHead',\n        num_classes=1,  # \u200b\u5bf9\u4e8e\u200b rpn, num_classes = 1\uff0c\u200b\u5982\u679c\u200b num_classes &gt; 1\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5728\u200b TwoStageDetector \u200b\u4e2d\u200b\u81ea\u52a8\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        strides=[8, 16, 32, 64, 128],\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='IoULoss', loss_weight=1.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),\n    roi_head=dict(  # update featmap_strides due to the strides in neck\n        bbox_roi_extractor=dict(featmap_strides=[8, 16, 32, 64, 128])))\nload_from = 'https://download.openmmlab.com/mmdetection/v2.0/fcos/fcos_r50_caffe_fpn_gn-head_1x_coco/fcos_r50_caffe_fpn_gn-head_1x_coco-821213aa.pth'\n</code></pre> <p>\u200b\u8bad\u7ec3\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>bash\ntools/dist_train.sh\nconfigs/faster_rcnn/faster-rcnn_r50-caffe_fpn_fcos-rpn_1x_coco.py  \\\n--work-dir /work_dirs/faster-rcnn_r50-caffe_fpn_fcos-rpn_1x_coco\n</code></pre>"},{"location":"user_guides/test/","title":"\u6d4b\u8bd5\u200b\u73b0\u6709\u200b\u6a21\u578b","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\uff0c\u200b\u80fd\u591f\u200b\u6d4b\u8bd5\u200b\u4e00\u4e2a\u200b\u73b0\u6709\u200b\u6a21\u578b\u200b\u5728\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u96c6\u200b\uff08COCO\uff0cPascal VOC\uff0cCityscapes \u200b\u7b49\u200b\uff09\u200b\u4e0a\u200b\u7684\u200b\u6027\u80fd\u200b\u3002\u200b\u6211\u4eec\u200b\u652f\u6301\u200b\u5728\u200b\u5982\u4e0b\u200b\u73af\u5883\u200b\u4e0b\u200b\u6d4b\u8bd5\u200b\uff1a</p> <ul> <li>\u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b</li> <li>CPU \u200b\u6d4b\u8bd5\u200b</li> <li>\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u6d4b\u8bd5\u200b</li> <li>\u200b\u591a\u200b\u8282\u70b9\u200b\u6d4b\u8bd5\u200b</li> </ul> <p>\u200b\u6839\u636e\u200b\u4ee5\u4e0a\u200b\u6d4b\u8bd5\u73af\u5883\u200b\uff0c\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u811a\u672c\u200b\u6765\u200b\u6267\u884c\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u3002</p> <pre><code># \u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--out ${RESULT_FILE}] \\\n    [--show]\n\n# CPU \u200b\u6d4b\u8bd5\u200b\uff1a\u200b\u7981\u7528\u200b GPU \u200b\u5e76\u200b\u8fd0\u884c\u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\nexport CUDA_VISIBLE_DEVICES=-1\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--out ${RESULT_FILE}] \\\n    [--show]\n\n# \u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u6d4b\u8bd5\u200b\nbash tools/dist_test.sh \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    ${GPU_NUM} \\\n    [--out ${RESULT_FILE}]\n</code></pre> <p><code>tools/dist_test.sh</code> \u200b\u4e5f\u200b\u652f\u6301\u200b\u591a\u200b\u8282\u70b9\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u9700\u8981\u200b\u4f9d\u8d56\u200b PyTorch \u200b\u7684\u200b \u200b\u542f\u52a8\u200b\u5de5\u5177\u200b \u3002</p> <p>\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>RESULT_FILE</code>: \u200b\u7ed3\u679c\u200b\u6587\u4ef6\u540d\u79f0\u200b\uff0c\u200b\u9700\u4ee5\u200b .pkl \u200b\u5f62\u5f0f\u200b\u5b58\u50a8\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u58f0\u660e\u200b\uff0c\u200b\u5219\u200b\u4e0d\u200b\u5c06\u200b\u7ed3\u679c\u200b\u5b58\u50a8\u200b\u5230\u200b\u6587\u4ef6\u200b\u3002</li> <li><code>--show</code>: \u200b\u5982\u679c\u200b\u5f00\u542f\u200b\uff0c\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u5c06\u200b\u88ab\u200b\u7ed8\u5236\u200b\u5728\u200b\u56fe\u50cf\u200b\u4e0a\u200b\uff0c\u200b\u4ee5\u200b\u4e00\u4e2a\u200b\u65b0\u7a97\u53e3\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5c55\u793a\u200b\u3002\u200b\u5b83\u200b\u53ea\u200b\u9002\u7528\u200b\u4e8e\u5355\u200b GPU \u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u662f\u200b\u7528\u4e8e\u200b\u8c03\u8bd5\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u3002\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4f7f\u7528\u200b\u6b64\u200b\u529f\u80fd\u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b GUI \u200b\u53ef\u4ee5\u200b\u5728\u200b\u73af\u5883\u200b\u4e2d\u200b\u6253\u5f00\u200b\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u9047\u5230\u200b\u8fd9\u4e48\u200b\u4e00\u4e2a\u200b\u9519\u8bef\u200b <code>cannot connect to X server</code>\u3002</li> <li><code>--show-dir</code>: \u200b\u5982\u679c\u200b\u6307\u660e\u200b\uff0c\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u7ed8\u5236\u200b\u5728\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u5230\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u3002\u200b\u5b83\u200b\u53ea\u200b\u9002\u7528\u200b\u4e8e\u5355\u200b GPU \u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u662f\u200b\u7528\u4e8e\u200b\u8c03\u8bd5\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u3002\u200b\u5373\u4f7f\u200b\u4f60\u200b\u7684\u200b\u73af\u5883\u200b\u4e2d\u200b\u6ca1\u6709\u200b GUI\uff0c\u200b\u8fd9\u4e2a\u200b\u9009\u9879\u200b\u4e5f\u200b\u53ef\u200b\u4f7f\u7528\u200b\u3002</li> <li><code>--cfg-options</code>:  \u200b\u5982\u679c\u200b\u6307\u660e\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\u5c06\u200b\u4f1a\u200b\u88ab\u200b\u5408\u5e76\u200b\u5230\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u3002</li> </ul>"},{"location":"user_guides/test/#_2","title":"\u6837\u4f8b","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u4e0b\u8f7d\u200b\u4e86\u200b checkpoint \u200b\u6587\u4ef6\u200b\u5230\u200b <code>checkpoints/</code> \u200b\u6587\u4ef6\u200b\u4e0b\u200b\u4e86\u200b\u3002</p> <ol> <li>\u200b\u6d4b\u8bd5\u200b RTMDet \u200b\u5e76\u200b\u53ef\u89c6\u5316\u200b\u5176\u200b\u7ed3\u679c\u200b\u3002\u200b\u6309\u200b\u4efb\u610f\u952e\u200b\u7ee7\u7eed\u200b\u4e0b\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002</li> </ol> <pre><code>python tools/test.py \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth \\\n    --show\n</code></pre> <ol> <li>\u200b\u6d4b\u8bd5\u200b RTMDet\uff0c\u200b\u5e76\u200b\u4e3a\u4e86\u200b\u4e4b\u540e\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u4fdd\u5b58\u200b\u7ed8\u5236\u200b\u7684\u200b\u56fe\u50cf\u200b\u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002</li> </ol> <pre><code>python tools/test.py \\\n    configs/rtmdet/rtmdet_l_8xb32-300e_coco.py \\\n    checkpoints/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth \\\n    --show-dir rtmdet_l_8xb32-300e_coco_results\n</code></pre> <ol> <li>\u200b\u5728\u200b Pascal VOC \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u6d4b\u8bd5\u200b Faster R-CNN\uff0c\u200b\u4e0d\u200b\u4fdd\u5b58\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\uff0c\u200b\u6d4b\u8bd5\u200b <code>mAP</code>\u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002</li> </ol> <pre><code>python tools/test.py \\\n    configs/pascal_voc/faster-rcnn_r50_fpn_1x_voc0712.py \\\n    checkpoints/faster_rcnn_r50_fpn_1x_voc0712_20200624-c9895d40.pth\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b 8 \u200b\u5757\u200b GPU \u200b\u6d4b\u8bd5\u200b Mask R-CNN\uff0c\u200b\u6d4b\u8bd5\u200b <code>bbox</code> \u200b\u548c\u200b <code>mAP</code> \u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002</li> </ol> <pre><code>./tools/dist_test.sh \\\n    configs/mask-rcnn_r50_fpn_1x_coco.py \\\n    checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth \\\n    8 \\\n    --out results.pkl\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b 8 \u200b\u5757\u200b GPU \u200b\u6d4b\u8bd5\u200b Mask R-CNN\uff0c\u200b\u6d4b\u8bd5\u200b\u6bcf\u7c7b\u200b\u7684\u200b <code>bbox</code> \u200b\u548c\u200b <code>mAP</code>\u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002</li> </ol> <pre><code>./tools/dist_test.sh \\\n    configs/mask_rcnn/mask-rcnn_r50_fpn_1x_coco.py \\\n    checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth \\\n    8\n</code></pre> <p>\u200b\u8be5\u200b\u547d\u4ee4\u200b\u751f\u6210\u200b\u4e24\u4e2a\u200bJSON\u200b\u6587\u4ef6\u200b <code>./work_dirs/coco_instance/test.bbox.json</code> \u200b\u548c\u200b <code>./work_dirs/coco_instance/test.segm.json</code>\u3002</p> <ol> <li>\u200b\u5728\u200b COCO test-dev \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\uff0c\u200b\u4f7f\u7528\u200b 8 \u200b\u5757\u200b GPU \u200b\u6d4b\u8bd5\u200b Mask R-CNN\uff0c\u200b\u5e76\u200b\u751f\u6210\u200b JSON \u200b\u6587\u4ef6\u200b\u63d0\u4ea4\u200b\u5230\u200b\u5b98\u65b9\u200b\u8bc4\u6d4b\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b config \u200b\u7684\u200b\u6ce8\u91ca\u200b\u4e2d\u200b\u7528\u200b test_evaluator \u200b\u548c\u200b test_dataloader \u200b\u66ff\u6362\u200b\u539f\u6765\u200b\u7684\u200b test_evaluator \u200b\u548c\u200b test_dataloader\uff0c\u200b\u7136\u540e\u200b\u8fd0\u884c\u200b\uff1a</li> </ol> <pre><code>./tools/dist_test.sh \\\n    configs/cityscapes/mask-rcnn_r50_fpn_1x_cityscapes.py \\\n    checkpoints/mask_rcnn_r50_fpn_1x_cityscapes_20200227-afe51d5a.pth \\\n    8\n</code></pre> <p>\u200b\u8fd9\u200b\u884c\u200b\u547d\u4ee4\u200b\u751f\u6210\u200b\u4e24\u4e2a\u200b JSON \u200b\u6587\u4ef6\u200b <code>mask_rcnn_test-dev_results.bbox.json</code> \u200b\u548c\u200b <code>mask_rcnn_test-dev_results.segm.json</code>\u3002</p> <ol> <li>\u200b\u5728\u200b Cityscapes \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\uff0c\u200b\u4f7f\u7528\u200b 8 \u200b\u5757\u200b GPU \u200b\u6d4b\u8bd5\u200b Mask R-CNN\uff0c\u200b\u751f\u6210\u200b txt \u200b\u548c\u200b png \u200b\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u200b\u4e0a\u200b\u4f20\u5230\u200b\u5b98\u65b9\u200b\u8bc4\u6d4b\u200b\u670d\u52a1\u5668\u200b\u3002\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b \u200b\u5728\u200b\u6b64\u200b \u3002 \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b config \u200b\u7684\u200b\u6ce8\u91ca\u200b\u4e2d\u200b\u7528\u200b test_evaluator \u200b\u548c\u200b test_dataloader \u200b\u66ff\u6362\u200b\u539f\u6765\u200b\u7684\u200b test_evaluator \u200b\u548c\u200b test_dataloader\uff0c\u200b\u7136\u540e\u200b\u8fd0\u884c\u200b\uff1a</li> </ol> <pre><code>./tools/dist_test.sh \\\n    configs/cityscapes/mask-rcnn_r50_fpn_1x_cityscapes.py \\\n    checkpoints/mask_rcnn_r50_fpn_1x_cityscapes_20200227-afe51d5a.pth \\\n    8\n</code></pre> <p>\u200b\u751f\u6210\u200b\u7684\u200b png \u200b\u548c\u200b txt \u200b\u6587\u4ef6\u200b\u5728\u200b <code>./work_dirs/cityscapes_metric</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u3002</p>"},{"location":"user_guides/test/#ground-truth","title":"\u4e0d\u200b\u4f7f\u7528\u200b Ground Truth \u200b\u6807\u6ce8\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5","text":"<p>MMDetection \u200b\u652f\u6301\u200b\u5728\u200b\u4e0d\u200b\u4f7f\u7528\u200b ground-truth \u200b\u6807\u6ce8\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5bf9\u6a21\u578b\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u8fd9\u200b\u9700\u8981\u200b\u7528\u5230\u200b <code>CocoDataset</code>\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u683c\u5f0f\u200b\u4e0d\u662f\u200b COCO \u200b\u683c\u5f0f\u200b\u7684\u200b\uff0c\u200b\u8bf7\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u6210\u200b COCO \u200b\u683c\u5f0f\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u683c\u5f0f\u200b\u662f\u200b VOC \u200b\u6216\u8005\u200b Cityscapes\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b tools/dataset_converters \u200b\u5185\u200b\u7684\u200b\u811a\u672c\u200b\u76f4\u63a5\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u6210\u200b COCO \u200b\u683c\u5f0f\u200b\u3002\u200b\u5982\u679c\u200b\u662f\u200b\u5176\u4ed6\u200b\u683c\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b images2coco \u200b\u811a\u672c\u200b \u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\u3002</p> <pre><code>python tools/dataset_converters/images2coco.py \\\n    ${IMG_PATH} \\\n    ${CLASSES} \\\n    ${OUT} \\\n    [--exclude-extensions]\n</code></pre> <p>\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>IMG_PATH</code>: \u200b\u56fe\u7247\u200b\u6839\u200b\u8def\u5f84\u200b\u3002</li> <li><code>CLASSES</code>: \u200b\u7c7b\u200b\u5217\u8868\u200b\u6587\u672c\u6587\u4ef6\u200b\u540d\u200b\u3002\u200b\u6587\u672c\u200b\u4e2d\u200b\u6bcf\u200b\u4e00\u884c\u200b\u5b58\u50a8\u200b\u4e00\u4e2a\u200b\u7c7b\u522b\u200b\u3002</li> <li><code>OUT</code>: \u200b\u8f93\u51fa\u200b json \u200b\u6587\u4ef6\u540d\u200b\u3002 \u200b\u9ed8\u8ba4\u200b\u4fdd\u5b58\u200b\u76ee\u5f55\u200b\u548c\u200b <code>IMG_PATH</code> \u200b\u5728\u200b\u540c\u200b\u4e00\u7ea7\u200b\u3002</li> <li><code>exclude-extensions</code>: \u200b\u5f85\u200b\u6392\u9664\u200b\u7684\u200b\u6587\u4ef6\u200b\u540e\u7f00\u540d\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b\u8f6c\u6362\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b</p> <pre><code># \u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--show]\n\n# CPU \u200b\u6d4b\u8bd5\u200b\uff1a\u200b\u7981\u7528\u200b GPU \u200b\u5e76\u200b\u8fd0\u884c\u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\nexport CUDA_VISIBLE_DEVICES=-1\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--out ${RESULT_FILE}] \\\n    [--show]\n\n# \u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u6d4b\u8bd5\u200b\nbash tools/dist_test.sh \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    ${GPU_NUM} \\\n    [--show]\n</code></pre> <p>\u200b\u5047\u8bbe\u200b model zoo \u200b\u4e2d\u200b\u7684\u200b checkpoint \u200b\u6587\u4ef6\u200b\u88ab\u200b\u4e0b\u8f7d\u200b\u5230\u200b\u4e86\u200b <code>checkpoints/</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff0c \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff0c\u200b\u7528\u200b 8 \u200b\u5757\u200b GPU \u200b\u5728\u200b COCO test-dev \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u6d4b\u8bd5\u200b Mask R-CNN\uff0c\u200b\u5e76\u4e14\u200b\u751f\u6210\u200b JSON \u200b\u6587\u4ef6\u200b\u3002</p> <pre><code>./tools/dist_test.sh \\\n    configs/mask_rcnn/mask-rcnn_r50_fpn_1x_coco.py \\\n    checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth \\\n    8\n</code></pre> <p>\u200b\u8fd9\u200b\u884c\u200b\u547d\u4ee4\u200b\u751f\u6210\u200b\u4e24\u4e2a\u200b JSON \u200b\u6587\u4ef6\u200b <code>./work_dirs/coco_instance/test.bbox.json</code> \u200b\u548c\u200b <code>./work_dirs/coco_instance/test.segm.json</code>\u3002</p>"},{"location":"user_guides/test/#_3","title":"\u6279\u91cf\u200b\u63a8\u7406","text":"<p>MMDetection \u200b\u5728\u200b\u6d4b\u8bd5\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0c\u200b\u65e2\u200b\u652f\u6301\u200b\u5355\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u63a8\u7406\u200b\uff0c\u200b\u4e5f\u200b\u652f\u6301\u200b\u5bf9\u200b\u56fe\u50cf\u200b\u8fdb\u884c\u200b\u6279\u91cf\u200b\u63a8\u7406\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u5355\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>samples_per_gpu</code> \u200b\u6765\u200b\u5f00\u542f\u200b\u6279\u91cf\u200b\u6d4b\u8bd5\u200b\u3002 \u200b\u5f00\u542f\u200b\u6279\u91cf\u200b\u63a8\u7406\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4fee\u6539\u200b\u65b9\u6cd5\u200b\u4e3a\u200b\uff1a</p> <pre><code>data = dict(train_dataloader=dict(...), val_dataloader=dict(...), test_dataloader=dict(batch_size=2, ...))\n</code></pre> <p>\u200b\u6216\u8005\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5c06\u200b <code>--cfg-options</code> \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>--cfg-options test_dataloader.batch_size=</code> \u200b\u6765\u200b\u5f00\u542f\u200b\u5b83\u200b\u3002</p>"},{"location":"user_guides/test/#tta","title":"\u6d4b\u8bd5\u200b\u65f6\u200b\u589e\u5f3a\u200b (TTA)","text":"<p>\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u589e\u5f3a\u200b (TTA) \u200b\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b\u6d4b\u8bd5\u9636\u6bb5\u200b\u4f7f\u7528\u200b\u7684\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u7b56\u7565\u200b\u3002\u200b\u5b83\u200b\u5bf9\u200b\u540c\u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b\u5e94\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u589e\u5f3a\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7ffb\u8f6c\u200b\u548c\u200b\u7f29\u653e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u589e\u5f3a\u200b\u540e\u200b\u7684\u200b\u56fe\u50cf\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5408\u5e76\u200b\uff0c\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u66f4\u200b\u51c6\u786e\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002\u200b\u4e3a\u4e86\u200b\u8ba9\u200b\u7528\u6237\u200b\u66f4\u200b\u5bb9\u6613\u200b\u4f7f\u7528\u200b TTA\uff0cMMEngine \u200b\u63d0\u4f9b\u200b\u4e86\u200b BaseTTAModel \u200b\u7c7b\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u9700\u6c42\u200b\u901a\u8fc7\u200b\u7b80\u5355\u200b\u5730\u200b\u6269\u5c55\u200b BaseTTAModel \u200b\u7c7b\u6765\u200b\u5b9e\u73b0\u200b\u4e0d\u540c\u200b\u7684\u200b TTA \u200b\u7b56\u7565\u200b\u3002</p> <p>\u200b\u5728\u200b MMDetection \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b DetTTAModel \u200b\u7c7b\u200b\uff0c\u200b\u5b83\u200b\u7ee7\u627f\u200b\u81ea\u200b BaseTTAModel\u3002</p>"},{"location":"user_guides/test/#_4","title":"\u4f7f\u7528\u200b\u6848\u4f8b","text":"<p>\u200b\u4f7f\u7528\u200b TTA \u200b\u9700\u8981\u200b\u4e24\u4e2a\u200b\u6b65\u9aa4\u200b\u3002\u200b\u9996\u5148\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b <code>tta_model</code> \u200b\u548c\u200b <code>tta_pipeline</code>\uff1a</p> <pre><code>tta_model = dict(\n    type='DetTTAModel',\n    tta_cfg=dict(nms=dict(\n                   type='nms',\n                   iou_threshold=0.5),\n                   max_per_img=100))\n\ntta_pipeline = [\n    dict(type='LoadImageFromFile',\n        backend_args=None),\n    dict(\n        type='TestTimeAug',\n        transforms=[[\n            dict(type='Resize', scale=(1333, 800), keep_ratio=True)\n        ], [ # It uses 2 flipping transformations (flipping and not flipping).\n            dict(type='RandomFlip', prob=1.),\n            dict(type='RandomFlip', prob=0.)\n        ], [\n            dict(\n               type='PackDetInputs',\n               meta_keys=('img_id', 'img_path', 'ori_shape',\n                       'img_shape', 'scale_factor', 'flip',\n                       'flip_direction'))\n       ]])]\n</code></pre> <p>\u200b\u7b2c\u4e8c\u6b65\u200b\uff0c\u200b\u8fd0\u884c\u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\u65f6\u200b\uff0c\u200b\u8bbe\u7f6e\u200b <code>--tta</code> \u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code># \u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--tta]\n\n# CPU \u200b\u6d4b\u8bd5\u200b\uff1a\u200b\u7981\u7528\u200b GPU \u200b\u5e76\u200b\u8fd0\u884c\u200b\u5355\u200b GPU \u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\nexport CUDA_VISIBLE_DEVICES=-1\npython tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    [--out ${RESULT_FILE}] \\\n    [--tta]\n\n# \u200b\u591a\u200b GPU \u200b\u6d4b\u8bd5\u200b\nbash tools/dist_test.sh \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    ${GPU_NUM} \\\n    [--tta]\n</code></pre> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u4fee\u6539\u200b TTA \u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6dfb\u52a0\u200b\u7f29\u653e\u200b\u589e\u5f3a\u200b\uff1a</p> <pre><code>tta_model = dict(\n    type='DetTTAModel',\n    tta_cfg=dict(nms=dict(\n                   type='nms',\n                   iou_threshold=0.5),\n                   max_per_img=100))\n\nimg_scales = [(1333, 800), (666, 400), (2000, 1200)]\ntta_pipeline = [\n    dict(type='LoadImageFromFile',\n         backend_args=None),\n    dict(\n        type='TestTimeAug',\n        transforms=[[\n            dict(type='Resize', scale=s, keep_ratio=True) for s in img_scales\n        ], [\n            dict(type='RandomFlip', prob=1.),\n            dict(type='RandomFlip', prob=0.)\n        ], [\n            dict(\n               type='PackDetInputs',\n               meta_keys=('img_id', 'img_path', 'ori_shape',\n                       'img_shape', 'scale_factor', 'flip',\n                       'flip_direction'))\n       ]])]\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u7ba1\u9053\u200b\u5c06\u200b\u9996\u5148\u200b\u5bf9\u200b\u56fe\u50cf\u200b\u6267\u884c\u200b 3 \u200b\u4e2a\u200b\u591a\u200b\u5c3a\u5ea6\u200b\u8f6c\u6362\u200b\uff0c\u200b\u7136\u540e\u200b\u6267\u884c\u200b 2 \u200b\u4e2a\u200b\u7ffb\u8f6c\u200b\u8f6c\u6362\u200b\uff08\u200b\u7ffb\u8f6c\u200b\u548c\u200b\u4e0d\u200b\u7ffb\u8f6c\u200b\uff09\uff0c\u200b\u6700\u540e\u200b\u4f7f\u7528\u200b PackDetInputs \u200b\u5c06\u200b\u56fe\u50cf\u200b\u6253\u5305\u200b\u5230\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u3002 \u200b\u8fd9\u91cc\u200b\u6709\u200b\u66f4\u200b\u591a\u200b\u7684\u200b TTA \u200b\u4f7f\u7528\u200b\u6848\u4f8b\u200b\u4f9b\u200b\u60a8\u200b\u53c2\u8003\u200b\uff1a</p> <ul> <li>RetinaNet</li> <li>CenterNet</li> <li>YOLOX</li> <li>RTMDet</li> </ul> <p>\u200b\u66f4\u200b\u591a\u200b\u9ad8\u7ea7\u200b\u7528\u6cd5\u200b\u548c\u200b TTA \u200b\u7684\u200b\u6570\u636e\u6d41\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b MMEngine\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u5728\u200b\u540e\u7eed\u200b\u652f\u6301\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b TTA\u3002</p>"},{"location":"user_guides/test_results_submission/","title":"\u63d0\u4ea4\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c","text":""},{"location":"user_guides/test_results_submission/#_2","title":"\u5168\u666f\u200b\u5206\u5272\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u63d0\u4ea4","text":"<p>\u200b\u4e0b\u9762\u200b\u51e0\u8282\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5728\u200b COCO \u200b\u6d4b\u8bd5\u200b\u5f00\u53d1\u200b\u96c6\u4e0a\u200b\u751f\u6210\u200b\u6cdb\u89c6\u200b\u5206\u5272\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u9884\u6d4b\u200b\u63d0\u4ea4\u200b\u5230\u200b COCO\u200b\u8bc4\u4f30\u200b\u670d\u52a1\u5668\u200b</p>"},{"location":"user_guides/test_results_submission/#_3","title":"\u524d\u63d0\u6761\u4ef6","text":"<ul> <li>\u200b\u4e0b\u8f7d\u200b COCO\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u200b\u56fe\u50cf\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u56fe\u50cf\u200b\u4fe1\u606f\u200b\uff0c\u200b\u548c\u200b\u5168\u666f\u200b\u8bad\u7ec3\u200b/\u200b\u76f8\u5173\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u7136\u540e\u200b\u89e3\u538b\u7f29\u200b\u5b83\u4eec\u200b\uff0c\u200b\u628a\u200b <code>test2017</code> \u200b\u653e\u5230\u200b <code>data/coco/</code>\uff0c\u200b\u628a\u200b json \u200b\u6587\u4ef6\u200b\u548c\u200b\u6ce8\u91ca\u200b\u6587\u4ef6\u200b\u653e\u5230\u200b <code>data/coco/annotations/</code> \u3002</li> </ul> <pre><code># \u200b\u5047\u8bbe\u200b data/coco/ \u200b\u4e0d\u200b\u5b58\u5728\u200b\nmkdir -pv data/coco/\n# \u200b\u4e0b\u8f7d\u200b test2017\nwget -P data/coco/ http://images.cocodataset.org/zips/test2017.zip\nwget -P data/coco/ http://images.cocodataset.org/annotations/image_info_test2017.zip\nwget -P data/coco/ http://images.cocodataset.org/annotations/panoptic_annotations_trainval2017.zip\n# \u200b\u89e3\u538b\u7f29\u200b\u5b83\u4eec\u200b\nunzip data/coco/test2017.zip -d data/coco/\nunzip data/coco/image_info_test2017.zip -d data/coco/\nunzip data/coco/panoptic_annotations_trainval2017.zip -d data/coco/\n# \u200b\u5220\u9664\u200b zip \u200b\u6587\u4ef6\u200b(\u200b\u53ef\u200b\u9009\u200b)\nrm -rf data/coco/test2017.zip data/coco/image_info_test2017.zip data/coco/panoptic_annotations_trainval2017.zip\n</code></pre> <ul> <li>\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u66f4\u65b0\u200b\u6d4b\u8bd5\u200b\u56fe\u50cf\u200b\u4fe1\u606f\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\u3002\u200b\u7531\u4e8e\u200b <code>image_info_test-dev2017.json</code> \u200b\u7684\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\u4e2d\u200b\u7f3a\u5c11\u200b\u5c5e\u6027\u200b <code>isthing</code> \uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7528\u200b <code>panoptic_val2017.json</code> \u200b\u4e2d\u200b\u7684\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\u66f4\u65b0\u200b\u5b83\u200b\u3002</li> </ul> <pre><code>python tools/misc/gen_coco_panoptic_test_info.py data/coco/annotations\n</code></pre> <p>\u200b\u5728\u200b\u5b8c\u6210\u200b\u4e0a\u8ff0\u200b\u51c6\u5907\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b <code>data</code> \u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u5e94\u8be5\u200b\u662f\u200b\u8fd9\u6837\u200b:</p> <pre><code>data\n`-- coco\n    |-- annotations\n    |   |-- image_info_test-dev2017.json\n    |   |-- image_info_test2017.json\n    |   |-- panoptic_image_info_test-dev2017.json\n    |   |-- panoptic_train2017.json\n    |   |-- panoptic_train2017.zip\n    |   |-- panoptic_val2017.json\n    |   `-- panoptic_val2017.zip\n    `-- test2017\n</code></pre>"},{"location":"user_guides/test_results_submission/#coco","title":"coco \u200b\u6d4b\u8bd5\u200b\u5f00\u53d1\u200b\u7684\u200b\u63a8\u7406","text":"<p>\u200b\u8981\u200b\u5728\u200b coco test-dev \u200b\u4e0a\u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e94\u8be5\u200b\u9996\u5148\u200b\u66f4\u65b0\u200b <code>test_dataloder</code> \u200b\u548c\u200b <code>test_evaluator</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b:1. \u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u66f4\u65b0\u200b\u5b83\u4eec\u200b;2. \u200b\u5728\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\u66f4\u65b0\u200b\u5b83\u4eec\u200b\u3002</p>"},{"location":"user_guides/test_results_submission/#_4","title":"\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u66f4\u65b0\u200b\u5b83\u4eec","text":"<p>\u200b\u76f8\u5173\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u5728\u200b <code>configs/_base_/datasets/ coco_panoptical .py</code> \u200b\u7684\u200b\u672b\u5c3e\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code>test_dataloader = dict(\n    batch_size=1,\n    num_workers=1,\n    persistent_workers=True,\n    drop_last=False,\n    sampler=dict(type='DefaultSampler', shuffle=False),\n    dataset=dict(\n        type=dataset_type,\n        data_root=data_root,\n        ann_file='annotations/panoptic_image_info_test-dev2017.json',\n        data_prefix=dict(img='test2017/'),\n        test_mode=True,\n        pipeline=test_pipeline))\ntest_evaluator = dict(\n    type='CocoPanopticMetric',\n    format_only=True,\n    ann_file=data_root + 'annotations/panoptic_image_info_test-dev2017.json',\n    outfile_prefix='./work_dirs/coco_panoptic/test')\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4efb\u4f55\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b coco test-dev \u200b\u96c6\u4e0a\u200b\u7684\u200b\u63a8\u7406\u200b\u8bbe\u7f6e\u200b</p> <p>\u200b\u60c5\u51b5\u200b1:\u200b\u76f4\u63a5\u200b\u53d6\u6d88\u200b\u6ce8\u91ca\u200b <code>configs/_base_/datasets/ coco_panoptical .py</code> \u200b\u4e2d\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u3002</p> <p>\u200b\u60c5\u51b5\u200b2:\u200b\u5c06\u200b\u4ee5\u4e0b\u200b\u8bbe\u7f6e\u200b\u590d\u5236\u5230\u200b\u60a8\u200b\u73b0\u5728\u200b\u4f7f\u7528\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u3002</p> <pre><code>test_dataloader = dict(\n    dataset=dict(\n        ann_file='annotations/panoptic_image_info_test-dev2017.json',\n        data_prefix=dict(img='test2017/', _delete_=True)))\ntest_evaluator = dict(\n    format_only=True,\n    ann_file=data_root + 'annotations/panoptic_image_info_test-dev2017.json',\n    outfile_prefix='./work_dirs/coco_panoptic/test')\n</code></pre> <p>\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5bf9\u200b coco test-dev et \u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code>python tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE}\n</code></pre>"},{"location":"user_guides/test_results_submission/#_5","title":"\u5728\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\u66f4\u65b0\u200b\u5b83\u4eec","text":"<p>coco test-dev \u200b\u4e0a\u200b\u66f4\u65b0\u200b\u76f8\u5173\u200b\u8bbe\u7f6e\u200b\u548c\u200b\u63a8\u7406\u200b\u7684\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code># \u200b\u7528\u200b\u4e00\u4e2a\u200b gpu \u200b\u6d4b\u8bd5\u200b\nCUDA_VISIBLE_DEVICES=0 python tools/test.py \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    --cfg-options \\\n    test_dataloader.dataset.ann_file=annotations/panoptic_image_info_test-dev2017.json \\\n    test_dataloader.dataset.data_prefix.img=test2017 \\\n    test_dataloader.dataset.data_prefix._delete_=True \\\n    test_evaluator.format_only=True \\\n    test_evaluator.ann_file=data/coco/annotations/panoptic_image_info_test-dev2017.json \\\n    test_evaluator.outfile_prefix=${WORK_DIR}/results\n# \u200b\u7528\u200b\u56db\u4e2a\u200b gpu \u200b\u6d4b\u8bd5\u200b\nCUDA_VISIBLE_DEVICES=0,1,3,4 bash tools/dist_test.sh \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    8 \\  # eights gpus\n    --cfg-options \\\n    test_dataloader.dataset.ann_file=annotations/panoptic_image_info_test-dev2017.json \\\n    test_dataloader.dataset.data_prefix.img=test2017 \\\n    test_dataloader.dataset.data_prefix._delete_=True \\\n    test_evaluator.format_only=True \\\n    test_evaluator.ann_file=data/coco/annotations/panoptic_image_info_test-dev2017.json \\\n    test_evaluator.outfile_prefix=${WORK_DIR}/results\n# \u200b\u7528\u200b slurm \u200b\u6d4b\u8bd5\u200b\nGPUS=8 tools/slurm_test.sh \\\n    ${Partition} \\\n    ${JOB_NAME} \\\n    ${CONFIG_FILE} \\\n    ${CHECKPOINT_FILE} \\\n    --cfg-options \\\n    test_dataloader.dataset.ann_file=annotations/panoptic_image_info_test-dev2017.json \\\n    test_dataloader.dataset.data_prefix.img=test2017 \\\n    test_dataloader.dataset.data_prefix._delete_=True \\\n    test_evaluator.format_only=True \\\n    test_evaluator.ann_file=data/coco/annotations/panoptic_image_info_test-dev2017.json \\\n    test_evaluator.outfile_prefix=${WORK_DIR}/results\n</code></pre> <p>\u200b\u4f8b\u5b50\u200b:\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u9884\u5148\u200b\u8bad\u7ec3\u200b\u7684\u200b\u5e26\u6709\u200b ResNet-50 \u200b\u9aa8\u5e72\u7f51\u200b\u7684\u200b MaskFormer \u200b\u5bf9\u200b <code>test2017</code> \u200b\u6267\u884c\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code># \u200b\u5355\u200b gpu \u200b\u6d4b\u8bd5\u200b\nCUDA_VISIBLE_DEVICES=0 python tools/test.py \\\n    configs/maskformer/maskformer_r50_mstrain_16x1_75e_coco.py \\\n    checkpoints/maskformer_r50_mstrain_16x1_75e_coco_20220221_141956-bc2699cb.pth \\\n    --cfg-options \\\n    test_dataloader.dataset.ann_file=annotations/panoptic_image_info_test-dev2017.json \\\n    test_dataloader.dataset.data_prefix.img=test2017 \\\n    test_dataloader.dataset.data_prefix._delete_=True \\\n    test_evaluator.format_only=True \\\n    test_evaluator.ann_file=data/coco/annotations/panoptic_image_info_test-dev2017.json \\\n    test_evaluator.outfile_prefix=work_dirs/maskformer/results\n</code></pre>"},{"location":"user_guides/test_results_submission/#_6","title":"\u91cd\u547d\u540d\u200b\u6587\u4ef6\u200b\u5e76\u200b\u538b\u7f29\u200b\u7ed3\u679c","text":"<p>\u200b\u63a8\u7406\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5168\u666f\u200b\u5206\u5272\u200b\u7ed3\u679c\u200b(\u200b\u4e00\u4e2a\u200b json \u200b\u6587\u4ef6\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5b58\u50a8\u200b\u63a9\u7801\u200b\u7684\u200b\u76ee\u5f55\u200b)\u200b\u5c06\u200b\u5728\u200b <code>WORK_DIR</code> \u200b\u4e2d\u200b\u3002\u200b\u6211\u4eec\u200b\u5e94\u8be5\u200b\u6309\u7167\u200b COCO's Website\u200b\u4e0a\u200b\u7684\u200b\u547d\u540d\u200b\u7ea6\u5b9a\u200b\u91cd\u65b0\u547d\u540d\u200b\u5b83\u4eec\u200b\u3002\u200b\u6700\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5c06\u200b json \u200b\u548c\u200b\u5b58\u50a8\u200b\u63a9\u7801\u200b\u7684\u200b\u76ee\u5f55\u200b\u538b\u7f29\u200b\u5230\u200b zip \u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u547d\u540d\u200b\u7ea6\u5b9a\u200b\u91cd\u547d\u540d\u200b\u8be5\u200b zip \u200b\u6587\u4ef6\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c zip \u200b\u6587\u4ef6\u200b\u5e94\u8be5\u200b\u76f4\u63a5\u200b\u5305\u542b\u200b\u4e0a\u8ff0\u200b\u4e24\u4e2a\u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u91cd\u547d\u540d\u200b\u6587\u4ef6\u200b\u548c\u200b\u538b\u7f29\u200b\u7ed3\u679c\u200b\u7684\u200b\u547d\u4ee4\u200b:</p> <pre><code># \u200b\u5728\u200b WORK_DIR \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u6709\u200b panoptic \u200b\u5206\u5272\u200b\u7ed3\u679c\u200b: 'panoptic' \u200b\u548c\u200b 'results. panoptical .json'\u3002\ncd ${WORK_DIR}\n# \u200b\u5c06\u200b '[algorithm_name]' \u200b\u66ff\u6362\u200b\u4e3a\u200b\u60a8\u200b\u4f7f\u7528\u200b\u7684\u200b\u7b97\u6cd5\u200b\u540d\u79f0\u200b\nmv ./panoptic ./panoptic_test-dev2017_[algorithm_name]_results\nmv ./results.panoptic.json ./panoptic_test-dev2017_[algorithm_name]_results.json\nzip panoptic_test-dev2017_[algorithm_name]_results.zip -ur panoptic_test-dev2017_[algorithm_name]_results panoptic_test-dev2017_[algorithm_name]_results.json\n</code></pre>"},{"location":"user_guides/tracking_analysis_tools/","title":"Tracking analysis tools","text":"<p>\u200b\u6211\u4eec\u200b\u5728\u200b <code>tools/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f88\u591a\u200b\u6709\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"user_guides/tracking_analysis_tools/#mot","title":"MOT \u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u53c2\u6570\u200b\u641c\u7d22","text":"<p><code>tools/analysis_tools/mot/mot_param_search.py</code> \u200b\u53ef\u4ee5\u200b\u641c\u7d22\u200b MOT \u200b\u6a21\u578b\u200b\u4e2d\u200b <code>tracker</code> \u200b\u7684\u200b\u53c2\u6570\u200b\u3002 \u200b\u5b83\u200b\u4e0e\u200b <code>tools/test.py</code> \u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f46\u200b\u914d\u7f6e\u200b\u4e0a\u200b\u6709\u6240\u4e0d\u540c\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ol> <li>\u200b\u5b9a\u4e49\u200b\u8981\u200b\u8bb0\u5f55\u200b\u7684\u200b\u671f\u671b\u200b\u8bc4\u4f30\u200b\u6307\u6807\u200b\u3002</li> </ol> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b <code>evaluator</code> \u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> <pre><code>test_evaluator=dict(type='MOTChallengeMetrics', metric=['HOTA', 'CLEAR', 'Identity'])\n</code></pre> <p>\u200b\u5f53\u7136\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b <code>test_evaluator</code> \u200b\u4e2d\u200b <code>metric</code> \u200b\u7684\u200b\u5185\u5bb9\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u81ea\u7531\u9009\u62e9\u200b <code>['HOTA', 'CLEAR', 'Identity']</code> \u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u6307\u6807\u200b\u3002</p> <ol> <li>\u200b\u5b9a\u4e49\u200b\u8981\u200b\u641c\u7d22\u200b\u7684\u200b\u53c2\u6570\u200b\u53ca\u5176\u200b\u53d6\u503c\u200b\u3002</li> </ol> <p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>tracker</code> \u200b\u7684\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>model=dict(\n    tracker=dict(\n        type='BaseTracker',\n        obj_score_thr=0.5,\n        match_iou_thr=0.5\n    )\n)\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u641c\u7d22\u200b <code>tracker</code> \u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u5176\u503c\u200b\u6539\u4e3a\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>model=dict(\n    tracker=dict(\n        type='BaseTracker',\n        obj_score_thr=[0.4, 0.5, 0.6],\n        match_iou_thr=[0.4, 0.5, 0.6, 0.7]\n    )\n)\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u811a\u672c\u200b\u5c06\u200b\u6d4b\u8bd5\u200b\u4e00\u5171\u200b12\u200b\u79cd\u200b\u60c5\u51b5\u200b\u5e76\u4e14\u200b\u8bb0\u5f55\u200b\u7ed3\u679c\u200b\u3002</p>"},{"location":"user_guides/tracking_analysis_tools/#mot_1","title":"MOT \u200b\u8bef\u5dee\u200b\u53ef\u89c6\u5316","text":"<p><code>tools/analysis_tools/mot/mot_error_visualize.py</code> \u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u591a\u200b\u76ee\u6807\u200b\u8ddf\u8e2a\u200b\u53ef\u89c6\u5316\u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u8be5\u200b\u811a\u672c\u200b\u9700\u8981\u200b\u63a8\u65ad\u200b\u7684\u200b\u7ed3\u679c\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u7ea2\u8272\u200b\u8fb9\u754c\u200b\u6846\u200b\u8868\u793a\u200b\u8bef\u68c0\u200b\uff08false positive\uff09\uff0c\u200b\u9ec4\u8272\u200b\u8fb9\u754c\u200b\u6846\u200b\u8868\u793a\u200b\u6f0f\u68c0\u200b\uff08false negative\uff09\uff0c\u200b\u84dd\u8272\u200b\u8fb9\u754c\u200b\u6846\u200b\u8868\u793a\u200bID\u200b\u5207\u6362\u200b\uff08ID switch\uff09\u3002</p> <pre><code>python tools/analysis_tools/mot/mot_error_visualize.py \\\n    ${CONFIG_FILE}\\\n    --input ${INPUT} \\\n    --result-dir ${RESULT_DIR} \\\n    [--output-dir ${OUTPUT}] \\\n    [--fps ${FPS}] \\\n    [--show] \\\n    [--backend ${BACKEND}]\n</code></pre> <p><code>RESULT_DIR</code> \u200b\u4e2d\u200b\u5305\u542b\u200b\u4e86\u200b\u6240\u6709\u200b\u89c6\u9891\u200b\u7684\u200b\u63a8\u65ad\u200b\u7ed3\u679c\u200b\uff0c\u200b\u63a8\u65ad\u200b\u7ed3\u679c\u200b\u662f\u200b\u4e00\u4e2a\u200b <code>txt</code> \u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>OUTPUT</code>\uff1a\u200b\u53ef\u89c6\u5316\u200b\u6f14\u793a\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u5982\u679c\u200b\u672a\u6307\u5b9a\u200b\uff0c<code>--show</code> \u200b\u662f\u200b\u5fc5\u9009\u200b\u7684\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5373\u65f6\u200b\u663e\u793a\u200b\u89c6\u9891\u200b\u3002</li> <li><code>FPS</code>\uff1a\u200b\u8f93\u51fa\u200b\u89c6\u9891\u200b\u7684\u200b\u5e27\u200b\u7387\u200b\u3002</li> <li><code>--show</code>\uff1a\u200b\u662f\u5426\u200b\u5373\u65f6\u200b\u663e\u793a\u200b\u89c6\u9891\u200b\u3002</li> <li><code>BACKEND</code>\uff1a\u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u8fb9\u754c\u200b\u6846\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\u3002\u200b\u9009\u9879\u200b\u5305\u62ec\u200b <code>cv2</code> \u200b\u548c\u200b <code>plt</code>\u3002</li> </ul>"},{"location":"user_guides/tracking_analysis_tools/#_1","title":"\u6d4f\u89c8\u200b\u6570\u636e\u200b\u96c6","text":"<p><code>tools/analysis_tools/mot/browse_dataset.py</code> \u200b\u53ef\u4ee5\u200b\u53ef\u89c6\u5316\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4ee5\u200b\u68c0\u67e5\u6570\u636e\u200b\u96c6\u200b\u914d\u7f6e\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>python tools/analysis_tools/browse_dataset.py ${CONFIG_FILE} [--show-interval ${SHOW_INTERVAL}]\n</code></pre> <p>\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>SHOW_INTERVAL</code>: \u200b\u663e\u793a\u200b\u7684\u200b\u95f4\u9694\u65f6\u95f4\u200b\uff08\u200b\u79d2\u200b\uff09\u3002</li> <li><code>--show</code>: \u200b\u662f\u5426\u200b\u5373\u65f6\u200b\u663e\u793a\u200b\u56fe\u50cf\u200b\u3002</li> </ul>"},{"location":"user_guides/tracking_config/","title":"\u5b66\u4e60\u200b\u66f4\u200b\u591a\u200b\u4e0e\u200b\u914d\u7f6e\u200b\u76f8\u5173\u200b\u7684\u200b\u4e8b","text":"<p>\u200b\u6211\u4eec\u200b\u7528\u200b python \u200b\u6587\u6863\u200b\u4f5c\u4e3a\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u200b\u7cfb\u7edf\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>MMDetection/configs</code> \u200b\u5e95\u4e0b\u200b\u627e\u5230\u200b\u6240\u6709\u200b\u5df2\u200b\u63d0\u4f9b\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u628a\u200b\u6a21\u5757\u5316\u200b\u548c\u200b\u7ee7\u627f\u200b\u5316\u200b\u8bbe\u8ba1\u200b\u878d\u5165\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u8fd9\u4f7f\u200b\u6211\u4eec\u200b\u5f88\u200b\u65b9\u4fbf\u200b\u53bb\u200b\u8fdb\u884c\u200b\u5404\u79cd\u200b\u5b9e\u9a8c\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u67e5\u770b\u200b\u76f8\u5173\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8dd1\u200b <code>python tools/misc/print_config.py /PATH/TO/CONFIG</code> \u200b\u53bb\u200b\u770b\u200b\u5b8c\u6574\u200b\u7684\u200b\u8be6\u7ec6\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_2","title":"\u5b8c\u6574\u200b\u914d\u7f6e\u200b\u7684\u200b\u7b80\u8981\u200b\u8bf4\u660e","text":"<p>\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u7684\u200b\u914d\u7f6e\u200b\u901a\u5e38\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u4e3b\u8981\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\uff1a</p> <p><code>model</code>\uff1a\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u57fa\u672c\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5305\u542b\u200b <code>data_preprocessor</code>\u3001<code>detector</code>\u3001<code>motion</code> \u200b\u4e4b\u7c7b\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u8fd8\u6709\u200b <code>train_cfg</code>\u3001<code>test_cfg</code> \u200b\u7b49\u7b49\u200b\uff1b</p> <p><code>train_dataloader</code>\uff1a\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u901a\u5e38\u200b\u5305\u542b\u200b <code>batch_size</code>\u3001 <code>num_workers</code>\u3001 <code>sampler</code>\u3001 <code>dataset</code> \u200b\u7b49\u7b49\u200b\uff1b</p> <p><code>val_dataloader</code>\uff1a\u200b\u9a8c\u8bc1\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4e0e\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\u7c7b\u4f3c\u200b\uff1b</p> <p><code>test_dataloader</code>\uff1a\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4e0e\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u914d\u7f6e\u200b\u7c7b\u4f3c\u200b\uff1b</p> <p><code>val_evaluator</code>\uff1a\u200b\u9a8c\u8bc1\u200b\u8bc4\u4f30\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>type='MOTChallengeMetrics'</code> \u200b\u662f\u200b MOT \u200b\u4efb\u52a1\u200b\u91cc\u9762\u200b\u7684\u200b\u6d4b\u91cf\u200b\u6807\u51c6\u200b\uff1b</p> <p><code>test_evaluator</code>\uff1a\u200b\u6d4b\u8bd5\u200b\u8bc4\u4f30\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4e0e\u200b\u9a8c\u8bc1\u200b\u8bc4\u4f30\u5668\u200b\u7684\u200b\u914d\u7f6e\u200b\u7c7b\u4f3c\u200b\uff1b</p> <p><code>train_cfg</code>\uff1a\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>type='EpochBasedTrainLoop'</code> \uff1b</p> <p><code>val_cfg</code>\uff1a\u200b\u9a8c\u8bc1\u200b\u5faa\u73af\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>type='VideoValLoop'</code> \uff1b</p> <p><code>test_cfg</code>\uff1a\u200b\u6d4b\u8bd5\u200b\u5faa\u73af\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>type='VideoTestLoop'</code> \uff1b</p> <p><code>default_hooks</code>\uff1a\u200b\u9ed8\u8ba4\u200b\u9c7c\u94a9\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5305\u542b\u200b\u8ba1\u65f6\u5668\u200b\u3001\u200b\u65e5\u5fd7\u200b\u3001\u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u7a0b\u5e8f\u200b\u3001\u200b\u68c0\u67e5\u70b9\u200b\u3001\u200b\u6837\u672c\u200b\u79cd\u5b50\u200b\u3001\u200b\u53ef\u89c6\u5316\u200b\uff1b</p> <p><code>vis_backends</code>\uff1a\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b <code>type='LocalVisBackend'</code> \uff1b</p> <p><code>visualizer</code>\uff1a\u200b\u53ef\u89c6\u5316\u200b\u5de5\u5177\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f8b\u5982\u200bMOT\u200b\u4efb\u52a1\u200b\u4f7f\u7528\u200b <code>type='TrackLocalVisualizer'</code> \uff1b</p> <p><code>param_scheduler</code>\uff1a\u200b\u53c2\u6570\u200b\u8c03\u5ea6\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u901a\u5e38\u200b\u91cc\u9762\u200b\u8bbe\u7f6e\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u5ea6\u200b\u7a0b\u5e8f\u200b\uff1b</p> <p><code>optim_wrapper</code>\uff1a\u200b\u4f18\u5316\u200b\u5668\u200b\u5c01\u88c5\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5305\u542b\u200b\u4f18\u5316\u200b\u76f8\u5173\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4f18\u5316\u200b\u5668\u200b\u3001\u200b\u68af\u5ea6\u200b\u526a\u88c1\u200b\u7b49\u200b\uff1b</p> <p><code>load_from</code>\uff1a\u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u8def\u5f84\u200b\uff1b</p> <p><code>resume</code>\uff1a\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b <code>True</code> \uff0c\u200b\u4f1a\u200b\u4ece\u200b <code>load_from</code> \u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u4f1a\u200b\u6062\u590d\u200b\u81f3\u200b\u68c0\u67e5\u70b9\u200b\u7684\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_3","title":"\u901a\u8fc7\u200b\u811a\u672c\u200b\u53c2\u6570\u200b\u4fee\u6539\u200b\u914d\u7f6e","text":"<p>\u200b\u5f53\u200b\u4f7f\u7528\u200b <code>tools/train.py</code> \u200b\u6216\u200b <code>tools/test_trackin.py</code> \u200b\u6267\u884c\u200b\u4efb\u52a1\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b <code>--cfg-options</code> \u200b\u6765\u200b\u5c31\u200b\u5730\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\u3002\u200b\u6211\u4eec\u200b\u4e3e\u200b\u51e0\u4e2a\u200b\u4f8b\u5b50\u200b\u5982\u4e0b\u200b\u3002\u200b\u6709\u5173\u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200bMMEngine\u3002</p>"},{"location":"user_guides/tracking_config/#dict","title":"\u66f4\u65b0\u200b dict \u200b\u94fe\u200b\u7684\u200b\u914d\u7f6e\u200b\u952e","text":"<p>\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u539f\u59cb\u200b\u914d\u7f6e\u200b\u4e2d\u200b <code>dict</code> \u200b\u952e\u200b\u7684\u200b\u987a\u5e8f\u200b\u6307\u5b9a\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8bbe\u7f6e\u200b <code>--cfg-options model.detector.backbone.norm_eval=False</code> \u200b\u4f1a\u200b\u5c06\u200b\u6a21\u578b\u200b\u4e3b\u5e72\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b <code>BN</code> \u200b\u6a21\u5757\u200b\u66f4\u200b\u6539\u4e3a\u200b\u8bad\u7ec3\u200b\u6a21\u5f0f\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_4","title":"\u66f4\u65b0\u200b\u914d\u7f6e\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u5173\u952e\u5b57","text":"<p>\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u7684\u200b <code>dict</code> \u200b\u5173\u952e\u5b57\u200b\u4f1a\u4ee5\u200b\u5217\u8868\u200b\u7684\u200b\u5f62\u5f0f\u200b\u7ec4\u6210\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u7ba1\u9053\u200b\u4e2d\u200b\u7684\u200b <code>test_dataloader.dataset.pipeline</code> \u200b\u4ee5\u200b\u5217\u8868\u200b\u5f62\u5f0f\u200b\u51fa\u73b0\u200b\uff0c\u200b\u5373\u200b <code>[dict(type='LoadImageFromFile'), ...]</code>\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u7ba1\u9053\u200b\u4e2d\u5c06\u200b <code>LoadImageFromFile</code> \u200b\u66f4\u200b\u6539\u4e3a\u200b <code>LoadImageFromWebcam</code>\uff0c\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b <code>--cfg-options test_dataloader.dataset.pipeline.0.type=LoadImageFromWebcam</code>\u3002</p>"},{"location":"user_guides/tracking_config/#_5","title":"\u66f4\u65b0\u200b\u5217\u8868\u200b/\u200b\u5143\u7ec4\u200b\u7684\u200b\u503c","text":"<p>\u200b\u8981\u200b\u88ab\u200b\u66f4\u65b0\u200b\u7684\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u6216\u200b\u4e00\u4e2a\u200b\u5143\u7ec4\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6307\u5b9a\u200b <code>--cfg options model.data_processor.mean=[0,0,0]</code> \u200b\u6765\u200b\u66f4\u6539\u200b <code>data_preprocessor</code> \u200b\u7684\u200b\u5e73\u5747\u503c\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6307\u5b9a\u200b\u503c\u5185\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u6709\u200b\u7a7a\u683c\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_6","title":"\u914d\u7f6e\u6587\u4ef6\u200b\u7ed3\u6784","text":"<p><code>config/_base_</code> \u200b\u4e0b\u200b\u6709\u200b\u4e09\u79cd\u200b\u57fa\u672c\u200b\u7ec4\u4ef6\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5373\u200b\u6570\u636e\u200b\u96c6\u200b\u3001\u200b\u6a21\u578b\u200b\u548c\u200b\u9ed8\u8ba4\u200b\u8fd0\u884c\u200b\u65f6\u95f4\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u4eec\u200b\u6765\u200b\u8f7b\u677e\u200b\u6784\u5efa\u200b\u8bb8\u591a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>SORT</code>\uff0c<code>DeepSORT</code>\u3002\u200b\u7531\u200b <code>_base_</code> \u200b\u4e2d\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u7ec4\u6210\u200b\u7684\u200b\u914d\u7f6e\u200b\u79f0\u4e3a\u200b\u57fa\u5143\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u540c\u4e00\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5efa\u8bae\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u57fa\u5143\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u5176\u4ed6\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u90fd\u200b\u5e94\u8be5\u200b\u4ece\u200b\u57fa\u5143\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7ee7\u627f\u200b\u57fa\u672c\u200b\u7ed3\u6784\u200b\uff0c\u200b\u8fd9\u6837\u200b\uff0c\u200b\u7ee7\u627f\u200b\u7ea7\u522b\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4e3a\u200b 3\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u4fbf\u4e8e\u200b\u7406\u89e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u8d21\u732e\u8005\u200b\u7ee7\u627f\u200b\u73b0\u6709\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b <code>Faster R-CNN</code> \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u4fee\u6539\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u9996\u5148\u200b\u901a\u8fc7\u200b\u6307\u5b9a\u200b <code>_base_ = ../_base_/models/faster-rcnn_r50-dc5.py</code> \u200b\u6765\u200b\u7ee7\u627f\u200b\u57fa\u672c\u200b\u7684\u200b <code>Faster R-CNN</code> \u200b\u7ed3\u6784\u200b\uff0c\u200b\u7136\u540e\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5fc5\u8981\u200b\u5b57\u200b\u6bb5\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6b63\u5728\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u4efb\u4f55\u200b\u73b0\u6709\u200b\u65b9\u6cd5\u200b\u90fd\u200b\u4e0d\u200b\u5171\u4eab\u200b\u7ed3\u6784\u200b\u7684\u200b\u5168\u65b0\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>configs</code> \u200b\u4e0b\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u6587\u4ef6\u5939\u200b method_name\u3002</p> <p>\u200b\u6709\u5173\u200b\u8be6\u7ec6\u200b\u6587\u6863\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200bMMEngine\u3002</p>"},{"location":"user_guides/tracking_config/#_7","title":"\u914d\u7f6e\u200b\u547d\u540d\u200b\u98ce\u683c","text":"<p>\u200b\u6211\u4eec\u200b\u6839\u636e\u200b\u4ee5\u4e0b\u200b\u98ce\u683c\u200b\u53bb\u200b\u547d\u540d\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5efa\u8bae\u200b\u8d21\u732e\u8005\u200b\u9075\u4ece\u200b\u76f8\u540c\u200b\u98ce\u683c\u200b\u3002</p> <p><code>{method}_{module}_{train_cfg}_{train_data}_{test_data}</code></p> <p><code>{method}</code>: \u200b\u65b9\u6cd5\u200b\u540d\u79f0\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>sort</code>\uff1b</p> <p><code>{module}</code>: \u200b\u65b9\u6cd5\u200b\u7684\u200b\u57fa\u672c\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>faster-rcnn_r50_fpn</code>\uff1b</p> <p><code>{train_cfg}</code>: \u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b\u901a\u5e38\u200b\u5305\u542b\u200b\u6279\u91cf\u200b\u5927\u5c0f\u200b\u3001\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u7b49\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>8xb4-80e</code>\uff1b</p> <p><code>{train_data}</code>: \u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>mot17halftrain</code>\uff1b</p> <p><code>{test_data}</code>: \u200b\u6d4b\u8bd5\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>test-mot17halfval</code>\u3002</p>"},{"location":"user_guides/tracking_config/#_8","title":"\u5e38\u95ee\u200b\u95ee\u9898","text":""},{"location":"user_guides/tracking_config/#_9","title":"\u5ffd\u7565\u200b\u57fa\u672c\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e9b\u200b\u5b57\u200b\u6bb5","text":"<p>\u200b\u6709\u65f6\u5019\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b <code>_delete_=True</code> \u200b\u53bb\u200b\u5ffd\u7565\u200b\u57fa\u672c\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200bMMEngine\u200b\u8fdb\u884c\u200b\u7b80\u5355\u200b\u8bf4\u660e\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_10","title":"\u8ddf\u8e2a\u200b\u6570\u636e\u7ed3\u6784\u200b\u4ecb\u7ecd","text":""},{"location":"user_guides/tracking_config/#_11","title":"\u4f18\u70b9\u200b\u548c\u200b\u65b0\u200b\u529f\u80fd","text":"<p>\u200b\u5728\u200b <code>mmdetection</code> \u200b\u8ddf\u8e2a\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u89c6\u9891\u200b\u6765\u200b\u7ec4\u7ec7\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b <code>TrackDataSample</code> \u200b\u6765\u200b\u63cf\u8ff0\u200b\u6570\u636e\u200b\u96c6\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7ec4\u7ec7\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>transform UniformRefFrameSample</code> \u200b\u6765\u200b\u5bf9\u200b\u5173\u952e\u5e27\u200b\u548c\u200b\u53c2\u8003\u200b\u5e27\u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b <code>TransformBroadcaster</code> \u200b\u8fdb\u884c\u200b\u526a\u8f91\u200b\u8bad\u7ec3\u200b\u3002</p> <p>\u200b\u5728\u200b\u67d0\u79cd\u7a0b\u5ea6\u200b\u4e0a\u200b\uff0c<code>TrackDataSample</code> \u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u591a\u4e2a\u200b <code>DetDataSample</code> \u200b\u7684\u200b\u5305\u88c5\u200b\u5668\u200b\u3002\u200b\u5b83\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b <code>video_data_samples</code>\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u4ee5\u200b <code>DetDataSample</code> \u200b\u7ec4\u6210\u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u91cc\u9762\u200b\u6bcf\u4e2a\u200b <code>DetDataSample</code> \u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u5e27\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u5143\u200b\u4fe1\u606f\u200b\u5305\u62ec\u200b\u5173\u952e\u5e27\u200b\u7684\u200b\u7d22\u5f15\u200b\u548c\u200b\u53c2\u8003\u200b\u5e27\u200b\u7684\u200b\u7d22\u5f15\u200b\uff0c\u200b\u7528\u200b\u4e0e\u200b\u526a\u8f91\u200b\u8bad\u7ec3\u200b\u3002</p> <p>\u200b\u5f97\u76ca\u4e8e\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6570\u636e\u7ec4\u7ec7\u200b\uff0c\u200b\u6574\u4e2a\u200b\u89c6\u9891\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u88ab\u200b\u6d4b\u8bd5\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u66f4\u200b\u7b80\u6d01\u200b\u76f4\u89c2\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b GPU \u200b\u5185\u5b58\u200b\u65e0\u6cd5\u200b\u5bb9\u7eb3\u200b\u6574\u4e2a\u200b\u89c6\u9891\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u57fa\u4e8e\u200b\u56fe\u50cf\u200b\u7684\u200b\u6d4b\u8bd5\u65b9\u6cd5\u200b\u3002</p>"},{"location":"user_guides/tracking_config/#_12","title":"\u8981\u200b\u505a\u200b\u7684\u200b\u4e8b","text":"<p><code>StrongSORT</code>\u3001<code>Mask2Former</code> \u200b\u7b49\u200b\u7b97\u6cd5\u200b\u4e0d\u200b\u652f\u6301\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u7b97\u6cd5\u200b\u5bf9\u200b GPU \u200b\u5185\u5b58\u200b\u63d0\u51fa\u200b\u4e86\u200b\u6311\u6218\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u6765\u200b\u4f1a\u200b\u4f18\u5316\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u200b\u652f\u6301\u200b\u50cf\u200b <code>MOT Challenge dataset</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u548c\u50cf\u200b <code>Crowdhuman</code> \u200b\u7528\u4e8e\u200b <code>QDTrack</code> \u200b\u7b97\u6cd5\u200b\u8fd9\u6837\u200b\u7684\u200b\u57fa\u4e8e\u200b\u56fe\u50cf\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u8fdb\u884c\u200b\u8054\u5408\u200b\u8bad\u7ec3\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u6765\u200b\u4f1a\u200b\u4f18\u5316\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"user_guides/tracking_dataset_prepare/","title":"Tracking dataset prepare","text":""},{"location":"user_guides/tracking_dataset_prepare/#_1","title":"\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907","text":"<p>\u200b\u672c\u200b\u9875\u9762\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u73b0\u6709\u200b\u57fa\u51c6\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u51c6\u5907\u200b\u8bf4\u660e\u200b\uff0c\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li> <p>\u200b\u591a\u200b\u76ee\u6807\u200b\u8ddf\u8e2a\u200b</p> </li> <li> <p>MOT Challenge</p> </li> <li> <p>CrowdHuman</p> </li> <li> <p>\u200b\u89c6\u9891\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b</p> </li> <li> <p>YouTube-VIS</p> </li> </ul>"},{"location":"user_guides/tracking_dataset_prepare/#1","title":"1. \u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u8bf7\u200b\u4ece\u200b\u5b98\u65b9\u7f51\u7ad9\u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6839\u76ee\u5f55\u200b\u5efa\u7acb\u200b\u8f6f\u200b\u94fe\u63a5\u200b\u5230\u200b <code>$MMDETECTION/data</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u3002</p>"},{"location":"user_guides/tracking_dataset_prepare/#11","title":"1.1 \u200b\u591a\u200b\u76ee\u6807\u200b\u8ddf\u8e2a","text":"<ul> <li> <p>\u200b\u5bf9\u4e8e\u200b\u591a\u200b\u76ee\u6807\u200b\u8ddf\u8e2a\u200b\u4efb\u52a1\u200b\u7684\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u9700\u8981\u200b\u4e0b\u8f7d\u200bMOT Challenge\u200b\u6570\u636e\u200b\u96c6\u200b\u4e4b\u4e00\u200b\uff08\u200b\u4f8b\u5982\u200bMOT17\u3001MOT20\uff09\uff0cCrowdHuman\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u8865\u5145\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> </li> <li> <p>\u200b\u5bf9\u4e8e\u200b\u4e2d\u56fd\u200b\u7684\u200b\u7528\u6237\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b OpenDataLab \u200b\u4e0a\u200b\u9ad8\u901f\u4e0b\u8f7d\u200b\u5982\u4e0b\u200b\u6570\u636e\u200b\u96c6\u200b\uff1a</p> </li> <li> <p>MOT17</p> </li> <li>MOT20</li> <li>CrowdHuman</li> </ul>"},{"location":"user_guides/tracking_dataset_prepare/#12","title":"1.2 \u200b\u89c6\u9891\u200b\u5b9e\u4f8b\u200b\u5206\u5272","text":"<ul> <li>\u200b\u5bf9\u4e8e\u200b\u89c6\u9891\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u4efb\u52a1\u200b\u7684\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200bYouTube-VIS\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u4f8b\u5982\u200bYouTube-VIS 2019\u3001YouTube-VIS 2021\uff09\u200b\u5373\u53ef\u200b\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u4ece\u200b YouTubeVOS \u200b\u4e0a\u200b\u4e0b\u8f7d\u200bYouTube-VIS 2019\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u4ece\u200b YouTubeVOS \u200b\u4e0a\u200b\u4e0b\u8f7d\u200bYouTube-VIS 2021\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> </ul>"},{"location":"user_guides/tracking_dataset_prepare/#13","title":"1.3 \u200b\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u5982\u679c\u200b\u60a8\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u4ee5\u4e0b\u200b\u7ed3\u6784\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5219\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u66f4\u6539\u200b\u76f8\u5e94\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</p> <pre><code>mmdetection\n\u251c\u2500\u2500 mmdet\n\u251c\u2500\u2500 tools\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502\n|   \u251c\u2500\u2500 MOT15/MOT16/MOT17/MOT20\n|   |   \u251c\u2500\u2500 train\n|   |   |   \u251c\u2500\u2500 MOT17-02-DPM\n|   |   |   |   \u251c\u2500\u2500 det\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 gt\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 img1\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 seqinfo.ini\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 ......\n|   |   \u251c\u2500\u2500 test\n|   |   |   \u251c\u2500\u2500 MOT17-01-DPM\n|   |   |   |   \u251c\u2500\u2500 det\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 img1\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 seqinfo.ini\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 ......\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 crowdhuman\n\u2502   \u2502   \u251c\u2500\u2500 annotation_train.odgt\n\u2502   \u2502   \u251c\u2500\u2500 annotation_val.odgt\n\u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train01.zip\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train02.zip\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train03.zip\n\u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_val.zip\n\u2502   \u2502\n</code></pre>"},{"location":"user_guides/tracking_dataset_prepare/#2","title":"2. \u200b\u8f6c\u6362\u200b\u6ce8\u91ca","text":"<p>\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u60a8\u200b\u9700\u8981\u200b\u5c06\u200b\u5b98\u65b9\u200b\u6ce8\u91ca\u200b\uff08Annotations\uff09\u200b\u8f6c\u6362\u200b\u4e3a\u200bCOCO\u200b\u683c\u5f0f\u200b\u3002\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u76f8\u5e94\u200b\u7684\u200b\u811a\u672c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code># MOT17\n# \u200b\u5176\u4ed6\u200b MOT Challenge \u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\u4e0e\u200b MOT17 \u200b\u76f8\u540c\u200b\u3002\npython ./tools/dataset_converters/mot2coco.py -i ./data/MOT17/ -o ./data/MOT17/annotations --split-train --convert-det\npython ./tools/dataset_converters/mot2reid.py -i ./data/MOT17/ -o ./data/MOT17/reid --val-split 0.2 --vis-threshold 0.3\n\n# CrowdHuman\npython ./tools/dataset_converters/crowdhuman2coco.py -i ./data/crowdhuman -o ./data/crowdhuman/annotations\n\n# YouTube-VIS 2019\npython ./tools/dataset_converters/youtubevis/youtubevis2coco.py -i ./data/youtube_vis_2019 -o ./data/youtube_vis_2019/annotations --version 2019\n\n# YouTube-VIS 2021\npython ./tools/dataset_converters/youtubevis/youtubevis2coco.py -i ./data/youtube_vis_2021 -o ./data/youtube_vis_2021/annotations --version 2021\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u8fd9\u4e9b\u200b\u811a\u672c\u200b\u540e\u200b\uff0c\u200b\u6587\u4ef6\u5939\u200b\u7ed3\u6784\u200b\u5c06\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>mmdetection\n\u251c\u2500\u2500 mmtrack\n\u251c\u2500\u2500 tools\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 coco\n\u2502   \u2502   \u251c\u2500\u2500 train2017\n\u2502   \u2502   \u251c\u2500\u2500 val2017\n\u2502   \u2502   \u251c\u2500\u2500 test2017\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502\n|   \u251c\u2500\u2500 MOT15/MOT16/MOT17/MOT20\n|   |   \u251c\u2500\u2500 train\n|   |   |   \u251c\u2500\u2500 MOT17-02-DPM\n|   |   |   |   \u251c\u2500\u2500 det\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 gt\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 img1\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 seqinfo.ini\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 ......\n|   |   \u251c\u2500\u2500 test\n|   |   |   \u251c\u2500\u2500 MOT17-01-DPM\n|   |   |   |   \u251c\u2500\u2500 det\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 img1\n|   \u2502   \u2502   \u2502   \u251c\u2500\u2500 seqinfo.ini\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 ......\n|   |   \u251c\u2500\u2500 annotations\n|   |   \u251c\u2500\u2500 reid\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 imgs\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 meta\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 crowdhuman\n\u2502   \u2502   \u251c\u2500\u2500 annotation_train.odgt\n\u2502   \u2502   \u251c\u2500\u2500 annotation_val.odgt\n\u2502   \u2502   \u251c\u2500\u2500 train\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train01.zip\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train02.zip\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_train03.zip\n\u2502   \u2502   \u251c\u2500\u2500 val\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 CrowdHuman_val.zip\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 crowdhuman_train.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 crowdhuman_val.json\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 youtube_vis_2019\n\u2502   \u2502   \u2502\u2500\u2500 train\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 valid\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 test\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 train.json (the official annotation files)\n\u2502   \u2502   \u2502\u2500\u2500 valid.json (the official annotation files)\n\u2502   \u2502   \u2502\u2500\u2500 test.json (the official annotation files)\n\u2502   \u2502   \u2502\u2500\u2500 annotations (the converted annotation file)\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 youtube_vis_2021\n\u2502   \u2502   \u2502\u2500\u2500 train\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 instances.json (the official annotation files)\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 valid\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 instances.json (the official annotation files)\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 test\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 JPEGImages\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 instances.json (the official annotation files)\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 ......\n\u2502   \u2502   \u2502\u2500\u2500 annotations (the converted annotation file)\n</code></pre>"},{"location":"user_guides/tracking_dataset_prepare/#mot15mot16mot17mot20reid","title":"MOT15/MOT16/MOT17/MOT20\u200b\u4e2d\u200b\u7684\u200b\u6ce8\u91ca\u200b\u548c\u200breid\u200b\u6587\u4ef6\u5939","text":"<p>\u200b\u4ee5\u200b MOT17 \u200b\u6570\u636e\u200b\u96c6\u4e3a\u4f8b\u200b\uff0c\u200b\u5176\u4ed6\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u7ed3\u6784\u200b\u7c7b\u4f3c\u200b\u3002</p> <p>\u200b\u5728\u200b <code>data/MOT17/annotations</code> \u200b\u6587\u4ef6\u5939\u200b\u4e2d\u6709\u200b8\u200b\u4e2a\u200bJSON\u200b\u6587\u4ef6\u200b\uff1a</p> <p><code>train_cocoformat.json</code>: \u200b\u5305\u542b\u200bMOT17\u200b\u6570\u636e\u200b\u96c6\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>train_detections.pkl</code>: \u200b\u5305\u542b\u200bMOT17\u200b\u6570\u636e\u200b\u96c6\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u7684\u200b\u516c\u5171\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200bPickle\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>test_cocoformat.json</code>: \u200b\u5305\u542b\u200bMOT17\u200b\u6570\u636e\u200b\u96c6\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>test_detections.pkl</code>: \u200b\u5305\u542b\u200bMOT17\u200b\u6570\u636e\u200b\u96c6\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u7684\u200b\u516c\u5171\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200bPickle\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>half-train_cocoformat.json</code>\u3001<code>half-train_detections.pkl</code>\u3001<code>half-val_cocoformat.json</code> \u200b\u548c\u200b <code>half-val_detections.pkl</code> \u200b\u4e0e\u200b <code>train_cocoformat.json</code> \u200b\u548c\u200b <code>train_detections.pkl</code> \u200b\u5177\u6709\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u542b\u4e49\u200b\u3002<code>half</code> \u200b\u8868\u793a\u200b\u5c06\u200b\u8bad\u7ec3\u200b\u96c6\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u89c6\u9891\u200b\u5206\u6210\u200b\u4e24\u534a\u200b\u3002\u200b\u524d\u200b\u4e00\u534a\u200b\u7684\u200b\u89c6\u9891\u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u200b <code>half-train</code> \u200b\u96c6\u200b\uff0c\u200b\u540e\u200b\u4e00\u534a\u200b\u7684\u200b\u89c6\u9891\u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u200b <code>half-val</code> \u200b\u96c6\u200b\u3002</p> <p><code>data/MOT17/reid</code> \u200b\u6587\u4ef6\u5939\u200b\u7684\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>reid\n\u251c\u2500\u2500 imgs\n\u2502   \u251c\u2500\u2500 MOT17-02-FRCNN_000002\n\u2502   \u2502   \u251c\u2500\u2500 000000.jpg\n\u2502   \u2502   \u251c\u2500\u2500 000001.jpg\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u251c\u2500\u2500 MOT17-02-FRCNN_000003\n\u2502   \u2502   \u251c\u2500\u2500 000000.jpg\n\u2502   \u2502   \u251c\u2500\u2500 000001.jpg\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 meta\n\u2502   \u251c\u2500\u2500 train_80.txt\n\u2502   \u251c\u2500\u2500 val_20.txt\n</code></pre> <p><code>train_80.txt</code> \u200b\u4e2d\u200b\u7684\u200b <code>80</code> \u200b\u8868\u793a\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u5728\u200b\u6574\u4e2a\u200bReID\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u4e3a\u200b80%\u3002\u200b\u800c\u200b\u9a8c\u8bc1\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u4e3a\u200b20%\u3002</p> <p>\u200b\u5173\u4e8e\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6ce8\u91ca\u200b\u5217\u8868\u200b <code>train_80.txt</code>\u3002\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u884c\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u540d\u200b\u53ca\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u3002\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>MOT17-05-FRCNN_000110/000018.jpg 0\nMOT17-13-FRCNN_000146/000014.jpg 1\nMOT17-05-FRCNN_000088/000004.jpg 2\nMOT17-02-FRCNN_000009/000081.jpg 3\n</code></pre> <p><code>MOT17-05-FRCNN_000110</code> \u200b\u8868\u793a\u200b <code>MOT17-05-FRCNN</code> \u200b\u89c6\u9891\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u200b110\u200b\u4e2a\u4eba\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\uff0c\u200b\u6ce8\u91ca\u200b\u5217\u8868\u200b <code>val_20.txt</code> \u200b\u7684\u200b\u683c\u5f0f\u200b\u4e0e\u200b\u4e0a\u8ff0\u200b\u76f8\u540c\u200b\u3002</p> <p><code>reid/imgs</code> \u200b\u4e2d\u200b\u7684\u200b\u56fe\u50cf\u200b\u662f\u200b\u901a\u8fc7\u200b\u76f8\u5e94\u200b\u7684\u200b <code>gt.txt</code> \u200b\u4ece\u200b <code>MOT17/train</code> \u200b\u4e2d\u200b\u7684\u200b\u539f\u59cb\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u88c1\u526a\u200b\u800c\u200b\u6765\u200b\u3002\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u7684\u200b\u503c\u200b\u5e94\u200b\u5728\u200b <code>[0, num_classes - 1]</code> \u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u3002</p>"},{"location":"user_guides/tracking_dataset_prepare/#crowdhuman-annotations","title":"CrowdHuman \u200b\u4e2d\u200b\u7684\u200b annotations \u200b\u6587\u4ef6\u5939","text":"<p><code>data/crowdhuman/annotations</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u6709\u200b\u4e24\u4e2a\u200bJSON\u200b\u6587\u4ef6\u200b\uff1a</p> <p><code>crowdhuman_train.json</code>\uff1a\u200b\u5305\u542b\u200b CrowdHuman \u200b\u6570\u636e\u200b\u96c6\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002 <code>crowdhuman_val.json</code>\uff1a\u200b\u5305\u542b\u200b CrowdHuman \u200b\u6570\u636e\u200b\u96c6\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p>"},{"location":"user_guides/tracking_dataset_prepare/#youtube_vis_2019youtube_vis2021-annotations","title":"youtube_vis_2019/youtube_vis2021 \u200b\u4e2d\u200b\u7684\u200b annotations \u200b\u6587\u4ef6\u5939","text":"<p>There are 3 JSON files in <code>data/youtube_vis_2019/annotations</code> or <code>data/youtube_vis_2021/annotations</code>\uff1a</p> <p><code>youtube_vis_2019_train.json</code>/<code>youtube_vis_2021_train.json</code>\uff1a\u200b\u5305\u542b\u200b youtube_vis_2019/youtube_vis2021 \u200b\u6570\u636e\u200b\u96c6\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>youtube_vis_2019_valid.json</code>/<code>youtube_vis_2021_valid.json</code>\uff1a\u200b\u5305\u542b\u200b youtube_vis_2019/youtube_vis2021 \u200b\u6570\u636e\u200b\u96c6\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p> <p><code>youtube_vis_2019_test.json</code>/<code>youtube_vis_2021_test.json</code>\uff1a\u200b\u5305\u542b\u200b youtube_vis_2019/youtube_vis2021 \u200b\u6570\u636e\u200b\u96c6\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4fe1\u606f\u200b\u7684\u200bJSON\u200b\u6587\u4ef6\u200b\u3002</p>"},{"location":"user_guides/tracking_interference/","title":"\u63a8\u7406","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6f14\u793a\u200b\u811a\u672c\u200b\u53bb\u200b\u63a8\u7406\u200b\u4e00\u4e2a\u200b\u7ed9\u51fa\u200b\u7684\u200b\u89c6\u9891\u200b\uff0c\u200b\u6216\u8005\u200b\u662f\u200b\u63a8\u7406\u200b\u5305\u542b\u200b\u4e00\u7cfb\u5217\u200b\u8fde\u7eed\u200b\u7167\u7247\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u3002\u200b\u60f3\u8981\u200b\u83b7\u53d6\u200b\u8be5\u200b\u4ee3\u7801\u200b\u8d44\u6e90\u200b\uff0c\u200b\u8bf7\u200b\u70b9\u51fb\u200b \u200b\u8fd9\u91cc\u200b\u3002</p> <p>\u200b\u82e5\u200b\u8f93\u5165\u200b\u4e3a\u200b\u6587\u4ef6\u5939\u200b\u683c\u5f0f\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u6807\u660e\u200b\u8fd9\u70b9\u200b\u3002\u200b\u5e76\u4e14\u200b\uff0c\u200b\u56fe\u7247\u200b\u547d\u540d\u200b\u5e94\u8be5\u200b\u6613\u4e8e\u200b\u6574\u7406\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e8e\u200b\u4f60\u200b\u6839\u636e\u200b\u6587\u4ef6\u200b\u540d\u5b57\u200b\u4e2d\u200b\u5305\u542b\u200b\u7684\u200b\u6570\u5b57\u4fe1\u606f\u200b\u6765\u200b\u91cd\u65b0\u200b\u8c03\u6574\u200b\u56fe\u7247\u200b\u7684\u200b\u987a\u5e8f\u200b\u3002\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u53ea\u200b\u652f\u6301\u200b <code>.jpg</code>\uff0c<code>.jpeg</code> \u200b\u548c\u200b <code>.png</code> \u200b\u683c\u5f0f\u200b\u7684\u200b\u56fe\u7247\u200b\u3002</p>"},{"location":"user_guides/tracking_interference/#mot-models","title":"MOT models \u200b\u7684\u200b\u63a8\u7406","text":"<p>\u200b\u8be5\u200b\u811a\u672c\u200b\u80fd\u591f\u200b\u4f7f\u7528\u200b\u591a\u4efb\u52a1\u200b\u8ddf\u8e2a\u200b\u6216\u8005\u200b\u89c6\u9891\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u65b9\u6cd5\u200b\u6765\u200b\u63a8\u7406\u200b\u4e00\u6bb5\u200b\u8f93\u5165\u200b\u7684\u200b\u89c6\u9891\u200b/\u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b\u3002</p> <pre><code>python demo/mot_demo.py \\\n    ${INPUTS}\n    ${CONFIG_FILE} \\\n    [--checkpoint ${CHECKPOINT_FILE}] \\\n    [--detector ${DETECTOR_FILE}] \\\n    [--reid ${REID_FILE}] \\\n    [--score-thr ${SCORE_THR}] \\\n    [--device ${DEVICE}] \\\n    [--out ${OUTPUT}] \\\n    [--show]\n</code></pre> <p><code>INPUTS</code> \u200b\u548c\u200b <code>OUTPUT</code> \u200b\u53c2\u6570\u200b\u652f\u6301\u200b mp4 \u200b\u89c6\u9891\u200b \u200b\u683c\u5f0f\u200b\u548c\u200b_\u200b\u6587\u4ef6\u5939\u200b_\u200b\u683c\u5f0f\u200b\u3002</p> <p>\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5bf9\u4e8e\u200b <code>DeepSORT</code>\u3001<code>SORT</code>\u3001<code>StrongSORT</code>\uff0c\u200b\u4ed6\u4eec\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u52a0\u8f7d\u200b <code>reid</code> \u200b\u548c\u200b <code>detector</code> \u200b\u7684\u200b\u6743\u91cd\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f1a\u200b\u4f7f\u7528\u200b <code>--detector</code> \u200b\u548c\u200b <code>--reid</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b\u6743\u91cd\u200b\u53c2\u6570\u200b\u3002\u200b\u5176\u4ed6\u200b\u7684\u200b\u4f8b\u5982\u200b <code>ByteTrack</code>\u3001<code>OCSORT</code>\u3001<code>QDTrack</code>\u3001<code>MaskTrackRCNN</code> \u200b\u4ee5\u53ca\u200b <code>Mask2Former</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u7b97\u6cd5\u200b\u5219\u200b\u4f7f\u7528\u200b <code>--checkpoint</code> \u200b\u6765\u200b\u52a0\u8f7d\u200b\u6743\u91cd\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>CHECKPOINT_FILE</code>\uff1a \u200b\u53ef\u200b\u9009\u62e9\u200b checkpoint\u3002</li> <li><code>DETECTOR_FILE</code>\uff1a \u200b\u53ef\u200b\u9009\u62e9\u200b detector\u3002</li> <li><code>REID_FILE</code>\uff1a \u200b\u53ef\u200b\u9009\u62e9\u200b reid\u3002</li> <li><code>SCORE_THR</code>\uff1a bboxes \u200b\u7684\u200b\u5f97\u5206\u200b\u9608\u503c\u200b\u3002</li> <li><code>DEVICE</code>\uff1a \u200b\u63a8\u7406\u200b\u6240\u200b\u9700\u200b\u914d\u7f6e\u200b\u3002\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b <code>cpu</code>\uff0c<code>cuda:0</code>,\u200b\u6216\u8005\u200b\u5176\u4ed6\u200b\u3002</li> <li><code>OUTPUT</code>\uff1a \u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u793a\u4f8b\u200b\u3002\u200b\u5982\u679c\u200b\u672a\u6307\u5b9a\u200b\uff0c <code>--show</code> \u200b\u5c06\u200b\u5f3a\u5236\u200b\u663e\u793a\u200b\u52a8\u6001\u200b\u89c6\u9891\u200b\u3002</li> <li><code>--show</code>\uff1a \u200b\u662f\u5426\u200b\u5373\u65f6\u200b\u663e\u793a\u200b\u89c6\u9891\u200b\u3002</li> </ul> <p>\u200b\u8fd0\u884c\u200b mot model \u200b\u7684\u200b\u793a\u4f8b\u200b:</p> <pre><code># \u200b\u793a\u4f8b\u200b 1\uff1a\u200b\u4e0d\u200b\u6307\u5b9a\u200b --checkpoint \u200b\u4f7f\u7528\u200b --detector\npython demo/mot_demo.py \\\n    demo/demo_mot.mp4 \\\n    configs/sort/sort_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py \\\n    --detector \\\n    https://download.openmmlab.com/mmtracking/mot/faster_rcnn/faster-rcnn_r50_fpn_4e_mot17-half-64ee2ed4.pth \\\n    --out mot.mp4\n\n# \u200b\u793a\u4f8b\u200b 2\uff1a\u200b\u4f7f\u7528\u200b --checkpoint\npython demo/mot_demo.py \\\n    demo/demo_mot.mp4 \\\n    configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py \\\n    --checkpoint https://download.openmmlab.com/mmtracking/mot/qdtrack/mot_dataset/qdtrack_faster-rcnn_r50_fpn_4e_mot17_20220315_145635-76f295ef.pth \\\n    --out mot.mp4\n</code></pre>"},{"location":"user_guides/tracking_train_test_zh_cn/","title":"\u5b66\u4e60\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5","text":""},{"location":"user_guides/tracking_train_test_zh_cn/#_2","title":"\u8bad\u7ec3","text":"<p>\u200b\u672c\u8282\u200b\u5c06\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5728\u200b\u652f\u6301\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u73b0\u6709\u200b\u6a21\u578b\u200b\u3002 \u200b\u652f\u6301\u200b\u4ee5\u4e0b\u200b\u8bad\u7ec3\u200b\u73af\u5883\u200b\uff1a</p> <ul> <li>CPU</li> <li>\u200b\u5355\u200b GPU</li> <li>\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU</li> <li>\u200b\u591a\u200b\u8282\u70b9\u200b</li> </ul> <p>\u200b\u60a8\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b Slurm \u200b\u7ba1\u7406\u200b\u4f5c\u4e1a\u200b\u3002</p> <p>\u200b\u91cd\u8981\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b <code>train_cfg</code> \u200b\u6765\u200b\u6539\u53d8\u200b\u8bc4\u4f30\u200b\u95f4\u9694\u200b\u3002   <code>train_cfg = dict(val_interval=10)</code>\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6bcf\u200b 10 \u200b\u4e2a\u200b epoch \u200b\u5bf9\u6a21\u578b\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b\u8bc4\u4f30\u200b\u3002</li> <li>\u200b\u6240\u6709\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u5b66\u4e60\u200b\u7387\u4e3a\u200b 8 \u200b\u4e2a\u200b GPU\u3002   \u200b\u6839\u636e\u200b\u7ebf\u6027\u200b\u6269\u5c55\u200b\u89c4\u5219\u200b\u3001   \u200b\u5982\u679c\u200b\u5728\u200b\u6bcf\u4e2a\u200b GPU \u200b\u4e0a\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b GPU \u200b\u6216\u200b\u56fe\u50cf\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u4e0e\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u6210\u200b\u6bd4\u4f8b\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u3001   \u200b\u4f8b\u5982\u200b\uff0c8 \u200b\u4e2a\u200b GPU * 1 \u200b\u4e2a\u200b\u56fe\u50cf\u200b/GPU \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u4e3a\u200b <code>lr=0.01</code>\uff0c16 \u200b\u4e2a\u200b GPU * 2 \u200b\u4e2a\u200b\u56fe\u50cf\u200b/GPU \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u4e3a\u200b lr=0.04\u3002</li> <li>\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b\u548c\u200b\u68c0\u67e5\u70b9\u200b\u5c06\u200b\u4fdd\u5b58\u200b\u5230\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b\u3001   \u200b\u8be5\u200b\u76ee\u5f55\u200b\u7531\u200b CLI \u200b\u53c2\u6570\u200b <code>--work-dir</code>\u200b\u6307\u5b9a\u200b\u3002\u200b\u5b83\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b <code>./work_dirs/CONFIG_NAME</code>\u3002</li> <li>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u6307\u5b9a\u200b CLI \u200b\u53c2\u6570\u200b <code>--amp</code>\u3002</li> </ul>"},{"location":"user_guides/tracking_train_test_zh_cn/#1-cpu","title":"1.\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u8bad\u7ec3","text":"<p>\u200b\u8be5\u200b\u6a21\u578b\u200b\u9ed8\u8ba4\u200b\u653e\u5728\u200b cuda \u200b\u8bbe\u5907\u200b\u4e0a\u200b\u3002 \u200b\u4ec5\u5f53\u200b\u6ca1\u6709\u200b cuda \u200b\u8bbe\u5907\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u6a21\u578b\u200b\u624d\u200b\u4f1a\u200b\u653e\u5728\u200b CPU \u200b\u4e0a\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u5148\u200b <code>export CUDA_VISIBLE_DEVICES=-1</code> \u200b\u4ee5\u200b\u7981\u7528\u200b GPU \u200b\u53ef\u89c1\u200b\u6027\u200b\u3002 \u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u53c2\u89c1\u200b MMEngine.</p> <p>```shell \u200b\u811a\u672c\u200b CUDA_VISIBLE_DEVICES=-1 python tools/train.py ${CONFIG_FILE} [optional arguments] <pre><code>\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u8bad\u7ec3\u200b MOT \u200b\u6a21\u578b\u200b QDTrack \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nCUDA_VISIBLE_DEVICES=-1 python tools/train.py configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#2-gpu","title":"2. \u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u8bad\u7ec3","text":"<p>\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b, \u200b\u60a8\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b <code>tools/train.py</code>.</p> <p>```shell \u200b\u811a\u672c\u200b python tools/train.py ${CONFIG_FILE} [optional arguments] <pre><code>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b `export CUDA_VISIBLE_DEVICES=$GPU_ID` \u200b\u547d\u4ee4\u200b\u9009\u62e9\u200bGPU.\n\n\u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u8bad\u7ec3\u200b MOT \u200b\u6a21\u578b\u200b QDTrack \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nCUDA_VISIBLE_DEVICES=2 python tools/train.py configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#3-gpu","title":"3. \u200b\u5728\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>tools/dist_train.sh</code>\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u591a\u4e2a\u200b GPU \u200b\u4e0a\u200b\u542f\u52a8\u200b\u8bad\u7ec3\u200b\u3002 \u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\u3002</p> <p>```shell \u200b\u811a\u672c\u200b bash ./tools/dist_train.sh ${CONFIG_FILE} ${GPU_NUM} [optional arguments] <pre><code>\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u200b\u5728\u200b\u4e00\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b\u542f\u52a8\u200b\u591a\u4e2a\u200b\u4f5c\u4e1a\u200b\u3001\n\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b\u62e5\u6709\u200b 8 \u200b\u4e2a\u200b GPU \u200b\u7684\u200b\u673a\u5668\u200b\u4e0a\u200b\u542f\u52a8\u200b 2 \u200b\u4e2a\u200b 4-GPU \u200b\u8bad\u7ec3\u200b\u4f5c\u4e1a\u200b\u3001\n\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u4f5c\u4e1a\u200b\u6307\u5b9a\u200b\u4e0d\u540c\u200b\u7684\u200b\u7aef\u53e3\u200b\uff08\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 29500\uff09\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u901a\u4fe1\u200b\u51b2\u7a81\u200b\u3002\n\n\u200b\u4f8b\u5982\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u547d\u4ee4\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u7aef\u53e3\u200b\u5982\u4e0b\u200b\u3002\n\n```shell \u200b\u811a\u672c\u200b\nCUDA_VISIBLE_DEVICES=0,1,2,3 PORT=29500 ./tools/dist_train.sh ${CONFIG_FILE} 4\nCUDA_VISIBLE_DEVICES=4,5,6,7 PORT=29501 ./tools/dist_train.sh ${CONFIG_FILE} 4\n</code></pre></p> <p>\u200b\u5728\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u8bad\u7ec3\u200b MOT \u200b\u6a21\u578b\u200b QDTrack \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>bash ./tools/dist_train.sh configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py 8\n</code></pre>"},{"location":"user_guides/tracking_train_test_zh_cn/#4","title":"4. \u200b\u5728\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u4e0a\u200b\u8bad\u7ec3","text":"<p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u4ee5\u592a\u7f51\u200b\u8fde\u63a5\u200b\u591a\u53f0\u200b\u673a\u5668\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5373\u53ef\u200b\uff1a</p> <p>\u200b\u5728\u200b\u7b2c\u4e00\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b</p> <p>```shell \u200b\u811a\u672c\u200b NNODES=2 NODE_RANK=0 PORT=\\(MASTER_PORT MASTER_ADDR=\\)MASTER_ADDR bash tools/dist_train.sh $CONFIG $GPUS <pre><code>\u200b\u5728\u200b\u7b2c\u4e8c\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b:\n\n```shell script\nNNODES=2 NODE_RANK=1 PORT=$MASTER_PORT MASTER_ADDR=$MASTER_ADDR bash tools/dist_train.sh $CONFIG $GPUS\n</code></pre></p> <p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b InfiniBand \u200b\u7b49\u200b\u9ad8\u901f\u200b\u7f51\u7edc\u200b\uff0c\u200b\u901f\u5ea6\u200b\u901a\u5e38\u200b\u4f1a\u200b\u5f88\u6162\u200b\u3002</p>"},{"location":"user_guides/tracking_train_test_zh_cn/#5-slurm","title":"5. \u200b\u4f7f\u7528\u200b Slurm \u200b\u8fdb\u884c\u200b\u8bad\u7ec3","text":"<p>Slurm\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u96c6\u7fa4\u200b\u7684\u200b\u4f18\u79c0\u200b\u4f5c\u4e1a\u200b\u8c03\u5ea6\u200b\u7cfb\u7edf\u200b\u3002 \u200b\u5728\u200b Slurm \u200b\u7ba1\u7406\u200b\u7684\u200b\u96c6\u7fa4\u200b\u4e0a\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>slurm_train.sh</code> \u200b\u751f\u6210\u200b\u8bad\u7ec3\u200b\u4f5c\u4e1a\u200b\u3002 \u200b\u5b83\u200b\u652f\u6301\u200b\u5355\u200b\u8282\u70b9\u200b\u548c\u200b\u591a\u200b\u8282\u70b9\u200b\u8bad\u7ec3\u200b\u3002</p> <p>\u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\u3002</p> <p>```shell \u200b\u811a\u672c\u200b bash ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} ${CONFIG_FILE} ${WORK_DIR} ${GPUS} <pre><code>\u200b\u4f7f\u7528\u200b Slurm \u200b\u8bad\u7ec3\u200b MOT \u200b\u6a21\u578b\u200b QDTrack \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell\u200b\u811a\u672c\u200b\nPORT=29501 \\\nGPUS_PER_NODE=8 \\\nSRUN_ARGS=\"--quotatype=reserved\" \\\nbash ./tools/slurm_train.sh \\\nmypartition \\\nmottrack\nconfigs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py\n./work_dirs/QDTrack \\\n8\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#_3","title":"\u6d4b\u8bd5","text":"<p>\u200b\u672c\u8282\u200b\u5c06\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5728\u200b\u652f\u6301\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u6d4b\u8bd5\u200b\u73b0\u6709\u200b\u6a21\u578b\u200b\u3002 \u200b\u652f\u6301\u200b\u4ee5\u4e0b\u200b\u6d4b\u8bd5\u73af\u5883\u200b\uff1a</p> <ul> <li>CPU</li> <li>\u200b\u5355\u200b GPU</li> <li>\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU</li> <li>\u200b\u591a\u200b\u8282\u70b9\u200b</li> </ul> <p>\u200b\u60a8\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b Slurm \u200b\u7ba1\u7406\u200b\u4f5c\u4e1a\u200b\u3002</p> <p>\u200b\u91cd\u8981\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b MOT \u200b\u4e2d\u200b\uff0c\u200b\u67d0\u4e9b\u200b\u7b97\u6cd5\u200b\uff08\u200b\u5982\u200b <code>DeepSORT</code>\u3001<code>SORT</code>\u3001<code>StrongSORT</code>\uff09\u200b\u9700\u8981\u200b\u5206\u522b\u200b\u52a0\u8f7d\u200b <code>reid</code> \u200b\u7684\u200b\u6743\u91cd\u200b\u548c\u200b <code>detector</code> \u200b\u7684\u200b\u6743\u91cd\u200b\u3002   \u200b\u5176\u4ed6\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5982\u200b<code>ByteTrack</code>\u3001<code>OCSORT</code>\u200b\u548c\u200b<code>QDTrack</code>\u200b\u5219\u200b\u4e0d\u200b\u9700\u8981\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>--checkpoint</code>\u3001<code>--detector</code> \u200b\u548c\u200b <code>--reid</code>\u200b\u6765\u200b\u52a0\u8f7d\u200b\u6743\u91cd\u200b\u3002</li> <li>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u79cd\u200b\u8bc4\u4f30\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u6a21\u578b\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u57fa\u4e8e\u200b\u56fe\u50cf\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u3002 \u200b\u6709\u4e9b\u200b\u7b97\u6cd5\u200b\u5982\u200b <code>StrongSORT</code>, <code>Mask2former</code> \u200b\u53ea\u200b\u652f\u6301\u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6d4b\u8bd5\u200b. \u200b\u5982\u679c\u200b\u60a8\u200b\u7684\u200b GPU \u200b\u5185\u5b58\u200b\u65e0\u6cd5\u200b\u5bb9\u7eb3\u200b\u6574\u4e2a\u200b\u89c6\u9891\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b\u91c7\u6837\u5668\u200b\u7c7b\u578b\u200b\u6765\u200b\u5207\u6362\u200b\u6d4b\u8bd5\u200b\u65b9\u5f0f\u200b\u3002   \u200b\u4f8b\u5982\u200b   \u200b\u57fa\u4e8e\u200b\u89c6\u9891\u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff1a<code>sampler=dict(type='DefaultSampler', shuffle=False, round_up=False)</code>   \u200b\u57fa\u4e8e\u200b\u56fe\u50cf\u200b\u7684\u200b\u6d4b\u8bd5\u200b\uff1a<code>sampler=dict\uff08type='TrackImgSampler'\uff09</code></li> <li>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b evaluator \u200b\u4e2d\u200b\u7684\u200b\u5173\u952e\u5b57\u200b <code>outfile_prefix</code> \u200b\u6765\u200b\u8bbe\u7f6e\u200b\u7ed3\u679c\u200b\u4fdd\u5b58\u200b\u8def\u5f84\u200b\u3002   \u200b\u4f8b\u5982\u200b\uff0c<code>val_evaluator = dict(outfile_prefix='results/sort_mot17')</code>\u3002   \u200b\u5426\u5219\u200b\uff0c\u200b\u5c06\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4e34\u65f6\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u8bc4\u4f30\u200b\u540e\u200b\u5220\u9664\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u60a8\u200b\u53ea\u200b\u60f3\u8981\u200b\u683c\u5f0f\u5316\u200b\u7684\u200b\u7ed3\u679c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b <code>format_only=True</code>\u3002   \u200b\u4f8b\u5982\u200b\uff0c<code>test_evaluator = dict(type='MOTChallengeMetric', metric=['HOTA', 'CLEAR', 'Identity'], outfile_prefix='sort_mot17_results', format_only=True)</code></li> </ul>"},{"location":"user_guides/tracking_train_test_zh_cn/#1-cpu_1","title":"1. \u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u6d4b\u8bd5","text":"<p>\u200b\u6a21\u578b\u200b\u9ed8\u8ba4\u200b\u5728\u200b cuda \u200b\u8bbe\u5907\u200b\u4e0a\u200b\u8fd0\u884c\u200b\u3002 \u200b\u53ea\u6709\u200b\u5728\u200b\u6ca1\u6709\u200b cuda \u200b\u8bbe\u5907\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6a21\u578b\u200b\u624d\u200b\u4f1a\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u8fd0\u884c\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b\u6a21\u578b\u200b\uff0c\u200b\u60a8\u200b\u9700\u8981\u200b <code>export CUDA_VISIBLE_DEVICES=-1</code> \u200b\u5148\u200b\u7981\u7528\u200b GPU \u200b\u53ef\u89c1\u200b\u6027\u200b\u3002</p> <p>\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200bMMEngine.</p> <p>```shell \u200b\u811a\u672c\u200b CUDA_VISIBLE_DEVICES=-1 python tools/test_tracking.py ${CONFIG_FILE} [optional arguments] <pre><code>\u200b\u5728\u200b CPU \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b MOT \u200b\u6a21\u578b\u200b SORT \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nCUDA_VISIBLE_DEVICES=-1 python tools/test_tracking.py configs/sort/sort_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py --detector ${CHECKPOINT_FILE}\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#2-gpu_1","title":"2. \u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u6d4b\u8bd5","text":"<p>\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b\u6a21\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b <code>tools/test_tracking.py</code>\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <p>```shell \u200b\u811a\u672c\u200b python tools/test_tracking.py ${CONFIG_FILE} [optional arguments] <pre><code>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b `export CUDA_VISIBLE_DEVICES=$GPU_ID` \u200b\u6765\u200b\u9009\u62e9\u200b GPU\u3002\n\n\u200b\u5728\u200b\u5355\u200b GPU \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b MOT \u200b\u6a21\u578b\u200b QDTrack \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nCUDA_VISIBLE_DEVICES=2 python tools/test_tracking.py configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py --detector ${CHECKPOINT_FILE}\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#3-gpu_1","title":"3. \u200b\u5728\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>tools/dist_test_tracking.sh</code>\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u591a\u4e2a\u200b GPU \u200b\u4e0a\u200b\u542f\u52a8\u200b\u6d4b\u8bd5\u200b\u3002 \u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\u3002</p> <p>```shell \u200b\u811a\u672c\u200b bash ./tools/dist_test_tracking.sh ${CONFIG_FILE} ${GPU_NUM} [optional arguments] <pre><code>\u200b\u5728\u200b\u5355\u200b\u8282\u70b9\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u6d4b\u8bd5\u200b MOT \u200b\u6a21\u578b\u200b DeepSort \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nbash ./tools/dist_test_tracking.sh configs/qdtrack/qdtrack_faster-rcnn_r50_fpn_8xb2-4e_mot17halftrain_test-mot17halfval.py 8 --detector ${CHECKPOINT_FILE} --reid ${CHECKPOINT_FILE}\n</code></pre></p>"},{"location":"user_guides/tracking_train_test_zh_cn/#4_1","title":"4. \u200b\u5728\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u4e0a\u200b\u6d4b\u8bd5","text":"<p>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5728\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u8fd9\u200b\u4e0e\u200b \"\u200b\u5728\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b \"\u200b\u7c7b\u4f3c\u200b\u3002</p>"},{"location":"user_guides/tracking_train_test_zh_cn/#5-slurm_1","title":"5. \u200b\u4f7f\u7528\u200b Slurm \u200b\u8fdb\u884c\u200b\u6d4b\u8bd5","text":"<p>\u200b\u5728\u200b Slurm \u200b\u7ba1\u7406\u200b\u7684\u200b\u96c6\u7fa4\u200b\u4e0a\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>slurm_test_tracking.sh</code> \u200b\u751f\u6210\u200b\u6d4b\u8bd5\u200b\u4f5c\u4e1a\u200b\u3002 \u200b\u5b83\u200b\u652f\u6301\u200b\u5355\u200b\u8282\u70b9\u200b\u548c\u200b\u591a\u200b\u8282\u70b9\u200b\u6d4b\u8bd5\u200b\u3002</p> <p>\u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\u3002</p> <p>```shell \u200b\u811a\u672c\u200b [GPUS=${GPUS}] bash tools/slurm_test_tracking.sh ${PARTITION} ${JOB_NAME} ${CONFIG_FILE} [optional arguments] <pre><code>\u200b\u4f7f\u7528\u200b Slurm \u200b\u6d4b\u8bd5\u200b VIS \u200b\u6a21\u578b\u200b Mask2former \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\n\n```shell \u200b\u811a\u672c\u200b\nGPUS=8\nbash tools/slurm_test_tracking.sh \\\nmypartition \\\nvis \\\nconfigs/mask2former_vis/mask2former_r50_8xb2-8e_youtubevis2021.py \\\n--checkpoint ${CHECKPOINT_FILE}\n</code></pre></p>"},{"location":"user_guides/tracking_visualization/","title":"\u4e86\u89e3\u200b\u53ef\u89c6\u5316","text":""},{"location":"user_guides/tracking_visualization/#_2","title":"\u672c\u5730\u200b\u7684\u200b\u53ef\u89c6\u5316","text":"<p>\u200b\u8fd9\u200b\u4e00\u8282\u200b\u5c06\u4f1a\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u672c\u5730\u200b\u7684\u200b\u5de5\u5177\u200b\u53ef\u89c6\u5316\u200b detection/tracking \u200b\u7684\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u753b\u51fa\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200b\u56fe\u50cf\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u793a\u4f8b\u200b\uff0c\u200b\u5c06\u200b <code>TrackVisualizationHook</code> \u200b\u4e2d\u200b\u7684\u200b draw \u200b\u7684\u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u4e3a\u200b <code>draw=True</code>\u3002</p> <pre><code>default_hooks = dict(visualization=dict(type='TrackVisualizationHook', draw=True))\n</code></pre> <p><code>TrackVisualizationHook</code> \u200b\u5171\u6709\u200b\u5982\u4e0b\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>draw</code>\uff1a \u200b\u662f\u5426\u200b\u7ed8\u5236\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002\u200b\u5982\u679c\u200b\u9009\u62e9\u200b False\uff0c\u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u663e\u793a\u200b\u56fe\u50cf\u200b\u3002\u200b\u8be5\u200b\u53c2\u6570\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\u4e3a\u200b False\u3002</li> <li><code>interval</code>\uff1a \u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u95f4\u9694\u200b\u3002\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b 30\u3002</li> <li><code>score_thr</code>\uff1a \u200b\u786e\u5b9a\u200b\u662f\u5426\u200b\u53ef\u89c6\u5316\u200b\u8fb9\u754c\u200b\u6846\u200b\u548c\u200b\u63a9\u7801\u200b\u7684\u200b\u9608\u503c\u200b\u3002\u200b\u9ed8\u8ba4\u503c\u200b\u662f\u200b 0.3\u3002</li> <li><code>show</code>\uff1a \u200b\u662f\u5426\u200b\u5c55\u793a\u200b\u7ed8\u5236\u200b\u7684\u200b\u56fe\u50cf\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u4e0d\u200b\u663e\u793a\u200b\u3002</li> <li><code>wait_time</code>\uff1a \u200b\u5c55\u793a\u200b\u7684\u200b\u65f6\u95f4\u200b\u95f4\u9694\u200b(\u200b\u79d2\u200b)\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 0\u3002</li> <li><code>test_out_dir</code>\uff1a \u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7ed8\u5236\u200b\u56fe\u50cf\u200b\u4fdd\u5b58\u200b\u7684\u200b\u76ee\u5f55\u200b\u3002</li> <li><code>backend_args</code>\uff1a \u200b\u7528\u4e8e\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u6587\u4ef6\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u53c2\u6570\u200b\u3002\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b <code>None</code>\u3002</li> </ul> <p>\u200b\u5728\u200b <code>TrackVisualizationHook</code> \u200b\u4e2d\u200b\uff0c\u200b\u5c06\u200b\u8c03\u7528\u200b <code>TrackLocalVisualizer</code> \u200b\u6765\u200b\u5b9e\u73b0\u200b MOT \u200b\u548c\u200b VIS \u200b\u4efb\u52a1\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u3002\u200b\u5177\u4f53\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b MMEngine \u200b\u83b7\u53d6\u200b  Visualization \u200b\u548c\u200b  Hook \u200b\u7684\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u3002</p>"},{"location":"user_guides/tracking_visualization/#tracking","title":"Tracking \u200b\u7684\u200b\u53ef\u89c6\u5316","text":"<p>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b <code>TrackLocalVisualizer</code> \u200b\u8fd9\u4e2a\u200b\u7c7b\u4ee5\u200b\u5b9e\u73b0\u200b\u8ddf\u8e2a\u200b\u4efb\u52a1\u200b\u53ef\u89c6\u5316\u200b\u3002\u200b\u8c03\u7528\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>visualizer = dict(type='TrackLocalVisualizer')\n</code></pre> <p>visualizer \u200b\u5171\u6709\u200b\u5982\u4e0b\u200b\u7684\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li> <p><code>name</code>\uff1a \u200b\u6240\u200b\u9009\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u540d\u79f0\u200b\u3002\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b \u2018visualizer\u2019\u3002</p> </li> <li> <p><code>image</code>\uff1a \u200b\u7528\u4e8e\u200b\u7ed8\u5236\u200b\u7684\u200b\u539f\u59cb\u200b\u56fe\u50cf\u200b\u3002\u200b\u683c\u5f0f\u200b\u9700\u8981\u200b\u4e3a\u200b RGB\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b None\u3002</p> </li> <li> <p><code>vis_backends</code>\uff1a \u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b\u914d\u7f6e\u200b\u5217\u8868\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b None\u3002</p> </li> <li> <p><code>save_dir</code>\uff1a \u200b\u6240\u6709\u200b\u540e\u200b\u7aef\u200b\u5b58\u50a8\u200b\u7684\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u76ee\u5f55\u200b\u3002\u200b\u5982\u679c\u200b\u4e3a\u200b None\uff0c\u200b\u540e\u7aef\u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u4fdd\u5b58\u200b\u4efb\u4f55\u200b\u6570\u636e\u200b\u3002</p> </li> <li> <p><code>line_width</code>\uff1a \u200b\u8fb9\u6846\u200b\u5bbd\u5ea6\u200b\u3002\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b 3\u3002</p> </li> <li> <p><code>alpha</code>\uff1a \u200b\u8fb9\u754c\u200b\u6846\u200b\u548c\u200b\u63a9\u7801\u200b\u7684\u200b\u900f\u660e\u5ea6\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 0.8\u3002</p> </li> </ul> <p>\u200b\u8fd9\u91cc\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b DeepSORT \u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u793a\u4f8b\u200b\uff1a</p> <p></p>"},{"location":"user_guides/train/","title":"\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6a21\u578b","text":"<p>MMDetection \u200b\u4e5f\u200b\u4e3a\u200b\u8bad\u7ec3\u200b\u68c0\u6d4b\u200b\u6a21\u578b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f00\u76d6\u200b\u5373\u98df\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\u200b\u672c\u8282\u200b\u5c06\u200b\u5c55\u793a\u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u6bd4\u5982\u200b COCO\uff09\u200b\u4e0a\u200b\u5982\u4f55\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"user_guides/train/#_2","title":"\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u8bad\u7ec3\u200b\u9700\u8981\u200b\u51c6\u5907\u200b\u597d\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u7ec6\u8282\u200b\u8bf7\u200b\u53c2\u8003\u200b \u200b\u6570\u636e\u200b\u96c6\u200b\u51c6\u5907\u200b \u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a \u200b\u76ee\u524d\u200b\uff0c<code>configs/cityscapes</code> \u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u90fd\u200b\u662f\u200b\u4f7f\u7528\u200b COCO \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6743\u503c\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u3002\u200b\u5982\u679c\u200b\u7f51\u7edc\u8fde\u63a5\u200b\u4e0d\u53ef\u200b\u7528\u200b\u6216\u8005\u200b\u901f\u5ea6\u200b\u5f88\u200b\u6162\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u63d0\u524d\u200b\u4e0b\u8f7d\u200b\u73b0\u5b58\u200b\u7684\u200b\u6a21\u578b\u200b\u3002\u200b\u5426\u5219\u200b\u53ef\u80fd\u200b\u5728\u200b\u8bad\u7ec3\u200b\u7684\u200b\u5f00\u59cb\u200b\u4f1a\u200b\u6709\u200b\u9519\u8bef\u200b\u53d1\u751f\u200b\u3002</p>"},{"location":"user_guides/train/#_3","title":"\u5b66\u4e60\u200b\u7387\u200b\u81ea\u52a8\u200b\u7f29\u653e","text":"<p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u662f\u200b\u5728\u200b 8 \u200b\u5757\u200b GPU\uff0c\u200b\u6bcf\u5757\u200b GPU \u200b\u6709\u200b 2 \u200b\u5f20\u200b\u56fe\u50cf\u200b\uff08\u200b\u6279\u200b\u5927\u5c0f\u200b\u4e3a\u200b 8*2=16\uff09\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u3002\u200b\u5176\u200b\u5df2\u7ecf\u200b\u8bbe\u7f6e\u200b\u5728\u200b <code>config/_base_/schedules/schedule_1x.py</code> \u200b\u4e2d\u200b\u7684\u200b <code>auto_scale_lr.base_batch_size</code>\u3002\u200b\u5b66\u4e60\u200b\u7387\u4f1a\u200b\u57fa\u4e8e\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u4e3a\u200b <code>16</code>\u200b\u65f6\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u5176\u4ed6\u200b\u57fa\u4e8e\u200b mmdet \u200b\u7684\u200b codebase\uff0c\u200b\u542f\u7528\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\u6807\u5fd7\u200b <code>auto_scale_lr.enable</code> \u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\u4e3a\u200b <code>False</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u542f\u7528\u200b\u6b64\u200b\u529f\u80fd\u200b\uff0c\u200b\u9700\u5728\u200b\u547d\u4ee4\u200b\u6dfb\u52a0\u200b\u53c2\u6570\u200b <code>--auto-scale-lr</code>\u3002\u200b\u5e76\u4e14\u200b\u5728\u200b\u542f\u52a8\u200b\u547d\u4ee4\u200b\u4e4b\u524d\u200b\uff0c\u200b\u8bf7\u200b\u68c0\u67e5\u200b\u4e0b\u200b\u5373\u5c06\u200b\u4f7f\u7528\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u540d\u79f0\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u914d\u7f6e\u200b\u540d\u79f0\u200b\u6307\u793a\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6279\u5904\u7406\u200b\u5927\u5c0f\u200b\u3002 \u200b\u5728\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u662f\u200b <code>8 x 2 = 16</code>\uff0c\u200b\u4f8b\u5982\u200b\uff1a<code>faster_rcnn_r50_caffe_fpn_90k_coco.py</code> \u200b\u6216\u8005\u200b <code>pisa_faster_rcnn_x101_32x4d_fpn_1x_coco.py</code>\uff1b\u200b\u82e5\u200b\u4e0d\u662f\u200b\u9ed8\u8ba4\u200b\u6279\u6b21\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u770b\u5230\u200b\u50cf\u200b <code>_NxM_</code> \u200b\u5b57\u6837\u200b\u7684\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a<code>cornernet_hourglass104_mstest_32x3_210e_coco.py</code> \u200b\u7684\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u662f\u200b <code>32 x 3 = 96</code>, \u200b\u6216\u8005\u200b <code>scnet_x101_64x4d_fpn_8x1_20e_coco.py</code> \u200b\u7684\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u662f\u200b <code>8 x 1 = 8</code>\u3002</p> <p>\u200b\u8bf7\u200b\u8bb0\u4f4f\u200b\uff1a\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u4e0d\u662f\u200b\u9ed8\u8ba4\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u4e3a\u200b <code>16</code>\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u8bf7\u200b\u68c0\u67e5\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5e95\u90e8\u200b\uff0c\u200b\u4f1a\u200b\u6709\u200b <code>auto_scale_lr.base_batch_size</code>\u3002\u200b\u5982\u679c\u200b\u627e\u200b\u4e0d\u5230\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5176\u200b\u7ee7\u627f\u200b\u7684\u200b <code>_base_=[xxx]</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u627e\u5230\u200b\u3002\u200b\u53e6\u5916\u200b\uff0c\u200b\u5982\u679c\u200b\u60f3\u200b\u4f7f\u7528\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\u5b66\u4e60\u200b\u7387\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u8bf7\u200b\u4e0d\u8981\u200b\u4fee\u6539\u200b\u8fd9\u4e9b\u200b\u503c\u200b\u3002</p> <p>\u200b\u5b66\u4e60\u200b\u7387\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>python tools/train.py \\\n    ${CONFIG_FILE} \\\n    --auto-scale-lr \\\n    [optional arguments]\n</code></pre> <p>\u200b\u6267\u884c\u547d\u4ee4\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u6839\u636e\u200b\u673a\u5668\u200b\u7684\u200bGPU\u200b\u6570\u91cf\u200b\u548c\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6279\u6b21\u200b\u5927\u5c0f\u200b\u5bf9\u200b\u5b66\u4e60\u200b\u7387\u200b\u8fdb\u884c\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\uff0c\u200b\u7f29\u653e\u200b\u65b9\u5f0f\u200b\u8be6\u89c1\u200b \u200b\u7ebf\u6027\u200b\u6269\u5c55\u200b\u89c4\u5219\u200b \uff0c\u200b\u6bd4\u5982\u200b\uff1a\u200b\u5728\u200b 4 \u200b\u5757\u200b GPU \u200b\u5e76\u4e14\u200b\u6bcf\u5f20\u200b GPU \u200b\u4e0a\u200b\u6709\u200b 2 \u200b\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b <code>lr=0.01</code>\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b 16 \u200b\u5757\u200b GPU \u200b\u5e76\u4e14\u200b\u6bcf\u5f20\u200b GPU \u200b\u4e0a\u200b\u6709\u200b 4 \u200b\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b, LR \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u7f29\u653e\u200b\u81f3\u200b <code>lr=0.08</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u542f\u7528\u200b\u8be5\u200b\u529f\u80fd\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u6839\u636e\u200b \u200b\u7ebf\u6027\u200b\u6269\u5c55\u200b\u89c4\u5219\u200b \u200b\u6765\u200b\u624b\u52a8\u200b\u8ba1\u7b97\u200b\u5e76\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u9762\u200b <code>optimizer.lr</code> \u200b\u7684\u200b\u503c\u200b\u3002</p>"},{"location":"user_guides/train/#gpu","title":"\u4f7f\u7528\u200b\u5355\u200b GPU \u200b\u8bad\u7ec3","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>tools/train.py</code> \u200b\u6765\u200b\u5f00\u542f\u200b\u5728\u200b\u5355\u5f20\u200b GPU \u200b\u4e0a\u200b\u7684\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\u3002\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>python tools/train.py \\\n    ${CONFIG_FILE} \\\n    [optional arguments]\n</code></pre> <p>\u200b\u5728\u200b\u8bad\u7ec3\u200b\u671f\u95f4\u200b\uff0c\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b\u548c\u200b checkpoint \u200b\u6587\u4ef6\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u4fdd\u5b58\u200b\u5728\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff0c\u200b\u5b83\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>work_dir</code> \u200b\u6216\u8005\u200b CLI \u200b\u53c2\u6570\u200b\u4e2d\u200b\u7684\u200b <code>--work-dir</code> \u200b\u6765\u200b\u6307\u5b9a\u200b\u3002</p> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6a21\u578b\u200b\u5c06\u200b\u5728\u200b\u6bcf\u8f6e\u200b\u8bad\u7ec3\u200b\u4e4b\u540e\u200b\u5728\u200b validation \u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u9891\u7387\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u6307\u5b9a\u200b\uff1a</p> <pre><code># \u200b\u6bcf\u200b 12 \u200b\u8f6e\u200b\u8fed\u4ee3\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b\u6d4b\u8bd5\u200b\u8bc4\u4f30\u200b\ntrain_cfg = dict(val_interval=12)\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\u63a5\u53d7\u200b\u4ee5\u4e0b\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>--work-dir ${WORK_DIR}</code>: \u200b\u8986\u76d6\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b.</li> <li><code>--resume</code>\uff1a\u200b\u81ea\u52a8\u200b\u4ece\u200bwork_dir\u200b\u4e2d\u200b\u7684\u200b\u6700\u65b0\u200b\u68c0\u67e5\u70b9\u200b\u6062\u590d\u200b.</li> <li><code>--resume ${CHECKPOINT_FILE}</code>: \u200b\u4ece\u200b\u67d0\u4e2a\u200b checkpoint \u200b\u6587\u4ef6\u200b\u7ee7\u7eed\u200b\u8bad\u7ec3\u200b.</li> <li><code>--cfg-options 'Key=value'</code>: \u200b\u8986\u76d6\u200b\u4f7f\u7528\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u8bbe\u7f6e\u200b.</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff1a <code>resume</code> \u200b\u548c\u200b <code>load-from</code> \u200b\u7684\u200b\u533a\u522b\u200b\uff1a</p> <p><code>resume</code> \u200b\u65e2\u200b\u52a0\u8f7d\u200b\u4e86\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u548c\u200b\u4f18\u5316\u200b\u5668\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u7ee7\u627f\u200b\u6307\u5b9a\u200b checkpoint \u200b\u7684\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u91cd\u65b0\u200b\u5f00\u59cb\u200b\u8bad\u7ec3\u200b\u3002<code>load-from</code> \u200b\u5219\u200b\u662f\u200b\u53ea\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u8bad\u7ec3\u200b\u662f\u200b\u4ece\u5934\u5f00\u59cb\u200b\u7684\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u88ab\u200b\u7528\u4e8e\u200b\u5fae\u8c03\u200b\u6a21\u578b\u200b\u3002\u200b\u5176\u4e2d\u200bload-from\u200b\u9700\u8981\u200b\u5199\u5165\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u800c\u200bresume\u200b\u4f5c\u4e3a\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u4f20\u5165\u200b\u3002</p>"},{"location":"user_guides/train/#cpu","title":"\u4f7f\u7528\u200b CPU \u200b\u8bad\u7ec3","text":"<p>\u200b\u4f7f\u7528\u200b CPU \u200b\u8bad\u7ec3\u200b\u7684\u200b\u6d41\u7a0b\u200b\u548c\u200b\u4f7f\u7528\u200b\u5355\u200b GPU \u200b\u8bad\u7ec3\u200b\u7684\u200b\u6d41\u7a0b\u200b\u4e00\u81f4\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ec5\u200b\u9700\u8981\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6d41\u7a0b\u200b\u5f00\u59cb\u200b\u524d\u200b\u7981\u7528\u200b GPU\u3002</p> <pre><code>export CUDA_VISIBLE_DEVICES=-1\n</code></pre> <p>\u200b\u4e4b\u540e\u200b\u8fd0\u884c\u200b\u5355\u200b GPU \u200b\u8bad\u7ec3\u200b\u811a\u672c\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <p>\u200b\u6211\u4eec\u200b\u4e0d\u200b\u63a8\u8350\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b CPU \u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u8fd9\u592a\u8fc7\u200b\u7f13\u6162\u200b\u3002\u200b\u6211\u4eec\u200b\u652f\u6301\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u5728\u200b\u6ca1\u6709\u200b GPU \u200b\u7684\u200b\u673a\u5668\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8c03\u8bd5\u200b\u3002</p>"},{"location":"user_guides/train/#gpu_1","title":"\u5728\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u8bad\u7ec3","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>tools/dist_train.sh</code> \u200b\u6765\u200b\u5f00\u542f\u200b\u5728\u200b\u591a\u200b GPU \u200b\u4e0a\u200b\u7684\u200b\u8bad\u7ec3\u200b\u3002\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>bash ./tools/dist_train.sh \\\n    ${CONFIG_FILE} \\\n    ${GPU_NUM} \\\n    [optional arguments]\n</code></pre> <p>\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\u548c\u200b\u5355\u200b GPU \u200b\u8bad\u7ec3\u200b\u7684\u200b\u53ef\u9009\u200b\u53c2\u6570\u200b\u4e00\u81f4\u200b\u3002</p>"},{"location":"user_guides/train/#_4","title":"\u540c\u65f6\u200b\u542f\u52a8\u200b\u591a\u4e2a\u200b\u4efb\u52a1","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b\u4e00\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b\u542f\u52a8\u200b\u591a\u4e2a\u200b\u4efb\u52a1\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5728\u200b\u4e00\u4e2a\u200b\u6709\u200b 8 \u200b\u5757\u200b GPU \u200b\u7684\u200b\u673a\u5668\u200b\u4e0a\u200b\u542f\u52a8\u200b 2 \u200b\u4e2a\u200b\u9700\u8981\u200b 4 \u200b\u5757\u200bGPU\u200b\u7684\u200b\u4efb\u52a1\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u7ed9\u200b\u4e0d\u540c\u200b\u7684\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\u6307\u5b9a\u200b\u4e0d\u540c\u200b\u7684\u200b\u7aef\u53e3\u200b\uff08\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b 29500\uff09\u200b\u6765\u200b\u907f\u514d\u200b\u51b2\u7a81\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u4f7f\u7528\u200b <code>dist_train.sh</code> \u200b\u6765\u200b\u542f\u52a8\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b\u6765\u200b\u8bbe\u7f6e\u200b\u7aef\u53e3\u200b\u3002</p> <pre><code>CUDA_VISIBLE_DEVICES=0,1,2,3 PORT=29500 ./tools/dist_train.sh ${CONFIG_FILE} 4\nCUDA_VISIBLE_DEVICES=4,5,6,7 PORT=29501 ./tools/dist_train.sh ${CONFIG_FILE} 4\n</code></pre>"},{"location":"user_guides/train/#_5","title":"\u4f7f\u7528\u200b\u591a\u53f0\u200b\u673a\u5668\u200b\u8bad\u7ec3","text":"<p>\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u200b\u4f7f\u7528\u200b\u7531\u200b ethernet \u200b\u8fde\u63a5\u8d77\u6765\u200b\u7684\u200b\u591a\u53f0\u200b\u673a\u5668\u200b\uff0c \u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b:</p> <p>\u200b\u5728\u200b\u7b2c\u4e00\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b:</p> <pre><code>NNODES=2 NODE_RANK=0 PORT=$MASTER_PORT MASTER_ADDR=$MASTER_ADDR sh tools/dist_train.sh $CONFIG $GPUS\n</code></pre> <p>\u200b\u5728\u200b\u7b2c\u4e8c\u53f0\u200b\u673a\u5668\u200b\u4e0a\u200b:</p> <pre><code>NNODES=2 NODE_RANK=1 PORT=$MASTER_PORT MASTER_ADDR=$MASTER_ADDR sh tools/dist_train.sh $CONFIG $GPUS\n</code></pre> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u60a8\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u9ad8\u901f\u200b\u7f51\u8def\u200b\u8fde\u63a5\u200b\u8fd9\u200b\u51e0\u53f0\u200b\u673a\u5668\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u5c06\u4f1a\u200b\u975e\u5e38\u200b\u6162\u200b\u3002</p>"},{"location":"user_guides/train/#slurm","title":"\u4f7f\u7528\u200b Slurm \u200b\u6765\u200b\u7ba1\u7406\u200b\u4efb\u52a1","text":"<p>Slurm \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e38\u89c1\u200b\u7684\u200b\u8ba1\u7b97\u200b\u96c6\u7fa4\u200b\u8c03\u5ea6\u200b\u7cfb\u7edf\u200b\u3002\u200b\u5728\u200b Slurm \u200b\u7ba1\u7406\u200b\u7684\u200b\u96c6\u7fa4\u200b\u4e0a\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>slurm.sh</code> \u200b\u6765\u200b\u5f00\u542f\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\u3002\u200b\u5b83\u200b\u65e2\u200b\u652f\u6301\u200b\u5355\u200b\u8282\u70b9\u200b\u8bad\u7ec3\u200b\u4e5f\u200b\u652f\u6301\u200b\u591a\u200b\u8282\u70b9\u200b\u8bad\u7ec3\u200b\u3002</p> <p>\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>[GPUS=${GPUS}] ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} ${CONFIG_FILE} ${WORK_DIR}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5728\u200b\u4e00\u4e2a\u200b\u540d\u79f0\u200b\u4e3a\u200b dev \u200b\u7684\u200b Slurm \u200b\u5206\u533a\u200b\u4e0a\u200b\uff0c\u200b\u4f7f\u7528\u200b 16 \u200b\u5757\u200b GPU \u200b\u6765\u200b\u8bad\u7ec3\u200b Mask R-CNN \u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5c06\u200b <code>work-dir</code> \u200b\u8bbe\u7f6e\u200b\u5728\u200b\u4e86\u200b\u67d0\u4e9b\u200b\u5171\u4eab\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u4e0b\u200b\u3002</p> <pre><code>GPUS=16 ./tools/slurm_train.sh dev mask_r50_1x configs/mask_rcnn_r50_fpn_1x_coco.py /nfs/xxxx/mask_rcnn_r50_fpn_1x\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b \u200b\u6e90\u7801\u200b \u200b\u6765\u200b\u68c0\u67e5\u200b\u5168\u90e8\u200b\u7684\u200b\u53c2\u6570\u200b\u548c\u200b\u73af\u5883\u53d8\u91cf\u200b.</p> <p>\u200b\u5728\u200b\u4f7f\u7528\u200b Slurm \u200b\u65f6\u200b\uff0c\u200b\u7aef\u53e3\u200b\u9700\u8981\u200b\u4ee5\u4e0b\u200b\u65b9\u200b\u7684\u200b\u67d0\u4e2a\u200b\u65b9\u6cd5\u200b\u4e4b\u4e00\u200b\u6765\u200b\u8bbe\u7f6e\u200b\u3002</p> <ol> <li>\u200b\u901a\u8fc7\u200b <code>--options</code> \u200b\u6765\u200b\u8bbe\u7f6e\u200b\u7aef\u53e3\u200b\u3002\u200b\u6211\u4eec\u200b\u975e\u5e38\u200b\u5efa\u8bae\u200b\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u65e0\u9700\u200b\u6539\u53d8\u200b\u539f\u59cb\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002</li> </ol> <pre><code>CUDA_VISIBLE_DEVICES=0,1,2,3 GPUS=4 ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} config1.py ${WORK_DIR} --cfg-options 'dist_params.port=29500'\nCUDA_VISIBLE_DEVICES=4,5,6,7 GPUS=4 ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} config2.py ${WORK_DIR} --cfg-options 'dist_params.port=29501'\n</code></pre> <ol> <li>\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u8bbe\u7f6e\u200b\u4e0d\u540c\u200b\u7684\u200b\u4ea4\u6d41\u200b\u7aef\u53e3\u200b\u3002</li> </ol> <p>\u200b\u5728\u200b <code>config1.py</code> \u200b\u4e2d\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\uff1a</p> <pre><code>dist_params = dict(backend='nccl', port=29500)\n</code></pre> <p>\u200b\u5728\u200b <code>config2.py</code> \u200b\u4e2d\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\uff1a</p> <pre><code>dist_params = dict(backend='nccl', port=29501)\n</code></pre> <p>\u200b\u7136\u540e\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>config1.py</code> \u200b\u548c\u200b <code>config2.py</code> \u200b\u6765\u200b\u542f\u52a8\u200b\u4e24\u4e2a\u200b\u4efb\u52a1\u200b\u4e86\u200b\u3002</p> <pre><code>CUDA_VISIBLE_DEVICES=0,1,2,3 GPUS=4 ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} config1.py ${WORK_DIR}\nCUDA_VISIBLE_DEVICES=4,5,6,7 GPUS=4 ./tools/slurm_train.sh ${PARTITION} ${JOB_NAME} config2.py ${WORK_DIR}\n</code></pre>"},{"location":"user_guides/train/#_6","title":"\u5728\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3","text":"<p>\u200b\u901a\u8fc7\u200b\u672c\u200b\u6587\u6863\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u4f1a\u200b\u77e5\u9053\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u5bf9\u200b\u9884\u5148\u200b\u5b9a\u4e49\u200b\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u4ee5\u53ca\u200b\u8bad\u7ec3\u200b\u3002\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b balloon dataset \u200b\u4f5c\u4e3a\u200b\u4f8b\u5b50\u200b\u6765\u200b\u63cf\u8ff0\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\u200b\u57fa\u672c\u200b\u6b65\u9aa4\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u51c6\u5907\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u200b</li> <li>\u200b\u51c6\u5907\u200b\u914d\u7f6e\u6587\u4ef6\u200b</li> <li>\u200b\u5728\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u63a8\u7406\u200b\u3002</li> </ol>"},{"location":"user_guides/train/#_7","title":"\u51c6\u5907\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u96c6","text":"<p>MMDetection \u200b\u4e00\u5171\u200b\u652f\u6301\u200b\u4e09\u79cd\u200b\u5f62\u5f0f\u200b\u5e94\u7528\u200b\u65b0\u200b\u6570\u636e\u200b\u96c6\u200b\uff1a</p> <ol> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u91cd\u65b0\u200b\u7ec4\u7ec7\u200b\u4e3a\u200b COCO \u200b\u683c\u5f0f\u200b\u3002</li> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u91cd\u65b0\u200b\u7ec4\u7ec7\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u200b\u683c\u5f0f\u200b\u3002</li> <li>\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</li> </ol> <p>\u200b\u6211\u4eec\u200b\u901a\u5e38\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u524d\u9762\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u901a\u5e38\u200b\u6765\u8bf4\u200b\u6bd4\u200b\u7b2c\u4e09\u79cd\u200b\u65b9\u6cd5\u200b\u8981\u200b\u7b80\u5355\u200b\u3002</p> <p>\u200b\u5728\u200b\u672c\u200b\u6587\u6863\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c55\u793a\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u6765\u200b\u8bf4\u660e\u200b\u5982\u4f55\u200b\u5c06\u200b\u6570\u636e\u200b\u8f6c\u5316\u200b\u4e3a\u200b COCO \u200b\u683c\u5f0f\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5728\u200b MMDetection 3.0 \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u6307\u6807\u200b\u5df2\u7ecf\u200b\u89e3\u200b\u8026\u200b\uff08\u200b\u9664\u4e86\u200b CityScapes\uff09\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u7528\u6237\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u9636\u6bb5\u200b\u4f7f\u7528\u200b\u4efb\u610f\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u6765\u200b\u8bc4\u4ef7\u200b\u6a21\u578b\u200b\u5728\u200b\u4efb\u610f\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u6027\u80fd\u200b\u3002\u200b\u6bd4\u5982\u200b\uff0c\u200b\u7528\u200b VOC \u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u6765\u200b\u8bc4\u4ef7\u200b\u6a21\u578b\u200b\u5728\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6027\u80fd\u200b\uff0c\u200b\u6216\u8005\u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b VOC \u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u548c\u200b COCO \u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u6765\u200b\u8bc4\u4ef7\u200b\u6a21\u578b\u200b\u5728\u200b OpenImages \u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p>"},{"location":"user_guides/train/#coco","title":"COCO\u200b\u6807\u6ce8\u200b\u683c\u5f0f","text":"<p>\u200b\u7528\u4e8e\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u7684\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u952e\u200b\uff08key\uff09\u200b\u90fd\u200b\u662f\u200b\u5fc5\u8981\u200b\u7684\u200b\uff0c\u200b\u53c2\u8003\u200b\u8fd9\u91cc\u200b\u6765\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u3002</p> <pre><code>{\n    \"images\": [image],\n    \"annotations\": [annotation],\n    \"categories\": [category]\n}\n\n\nimage = {\n    \"id\": int,\n    \"width\": int,\n    \"height\": int,\n    \"file_name\": str,\n}\n\nannotation = {\n    \"id\": int,\n    \"image_id\": int,\n    \"category_id\": int,\n    \"segmentation\": RLE or [polygon],\n    \"area\": float,\n    \"bbox\": [x,y,width,height], # (x, y) \u200b\u4e3a\u200b bbox \u200b\u5de6\u4e0a\u89d2\u200b\u7684\u200b\u5750\u6807\u200b\n    \"iscrowd\": 0 or 1,\n}\n\ncategories = [{\n    \"id\": int,\n    \"name\": str,\n    \"supercategory\": str,\n}]\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b balloon dataset\u3002</p> <p>\u200b\u4e0b\u8f7d\u200b\u4e86\u200b\u6570\u636e\u200b\u96c6\u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5c06\u200b\u6807\u6ce8\u200b\u683c\u5f0f\u200b\u8f6c\u5316\u200b\u4e3a\u200b COCO \u200b\u683c\u5f0f\u200b\u3002\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u7684\u200b <code>CocoDataset</code> \u200b\u7c7b\u6765\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u5e76\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\u4ee5\u53ca\u200b\u8bc4\u6d4b\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6d4f\u89c8\u200b\u8fc7\u65b0\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>{'base64_img_data': '',\n 'file_attributes': {},\n 'filename': '34020010494_e5cb88e1c4_k.jpg',\n 'fileref': '',\n 'regions': {'0': {'region_attributes': {},\n   'shape_attributes': {'all_points_x': [1020,\n     1000,\n     994,\n     1003,\n     1023,\n     1050,\n     1089,\n     1134,\n     1190,\n     1265,\n     1321,\n     1361,\n     1403,\n     1428,\n     1442,\n     1445,\n     1441,\n     1427,\n     1400,\n     1361,\n     1316,\n     1269,\n     1228,\n     1198,\n     1207,\n     1210,\n     1190,\n     1177,\n     1172,\n     1174,\n     1170,\n     1153,\n     1127,\n     1104,\n     1061,\n     1032,\n     1020],\n    'all_points_y': [963,\n     899,\n     841,\n     787,\n     738,\n     700,\n     663,\n     638,\n     621,\n     619,\n     643,\n     672,\n     720,\n     765,\n     800,\n     860,\n     896,\n     942,\n     990,\n     1035,\n     1079,\n     1112,\n     1129,\n     1134,\n     1144,\n     1153,\n     1166,\n     1166,\n     1150,\n     1136,\n     1129,\n     1122,\n     1112,\n     1084,\n     1037,\n     989,\n     963],\n    'name': 'polygon'}}},\n 'size': 1115004}\n</code></pre> <p>\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u65f6\u200b\u662f\u200b JSON \u200b\u683c\u5f0f\u200b\u7684\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6240\u6709\u200b\u952e\u200b\uff08key\uff09\u200b\u7ec4\u6210\u200b\u4e86\u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u6240\u6709\u200b\u6807\u6ce8\u200b\u3002</p> <p>\u200b\u5176\u4e2d\u200b\u5c06\u200b balloon dataset \u200b\u8f6c\u5316\u200b\u4e3a\u200b COCO \u200b\u683c\u5f0f\u200b\u7684\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code>import os.path as osp\n\nimport mmcv\n\nfrom mmengine.fileio import dump, load\nfrom mmengine.utils import track_iter_progress\n\n\ndef convert_balloon_to_coco(ann_file, out_file, image_prefix):\n    data_infos = load(ann_file)\n\n    annotations = []\n    images = []\n    obj_count = 0\n    for idx, v in enumerate(track_iter_progress(data_infos.values())):\n        filename = v['filename']\n        img_path = osp.join(image_prefix, filename)\n        height, width = mmcv.imread(img_path).shape[:2]\n\n        images.append(\n            dict(id=idx, file_name=filename, height=height, width=width))\n\n        for _, obj in v['regions'].items():\n            assert not obj['region_attributes']\n            obj = obj['shape_attributes']\n            px = obj['all_points_x']\n            py = obj['all_points_y']\n            poly = [(x + 0.5, y + 0.5) for x, y in zip(px, py)]\n            poly = [p for x in poly for p in x]\n\n            x_min, y_min, x_max, y_max = (min(px), min(py), max(px), max(py))\n\n            data_anno = dict(\n                image_id=idx,\n                id=obj_count,\n                category_id=0,\n                bbox=[x_min, y_min, x_max - x_min, y_max - y_min],\n                area=(x_max - x_min) * (y_max - y_min),\n                segmentation=[poly],\n                iscrowd=0)\n            annotations.append(data_anno)\n            obj_count += 1\n\n    coco_format_json = dict(\n        images=images,\n        annotations=annotations,\n        categories=[{\n            'id': 0,\n            'name': 'balloon'\n        }])\n    dump(coco_format_json, out_file)\n\n\nif __name__ == '__main__':\n    convert_balloon_to_coco(ann_file='data/balloon/train/via_region_data.json',\n                            out_file='data/balloon/train/annotation_coco.json',\n                            image_prefix='data/balloon/train')\n    convert_balloon_to_coco(ann_file='data/balloon/val/via_region_data.json',\n                            out_file='data/balloon/val/annotation_coco.json',\n                            image_prefix='data/balloon/val')\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u5982\u4e0a\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u6210\u529f\u200b\u5c06\u200b\u6807\u6ce8\u200b\u6587\u4ef6\u200b\u8f6c\u5316\u200b\u4e3a\u200b JSON \u200b\u683c\u5f0f\u200b\uff0c\u200b\u4e4b\u540e\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>CocoDataset</code> \u200b\u5bf9\u6a21\u578b\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u5e76\u7528\u200b <code>CocoMetric</code> \u200b\u8bc4\u6d4b\u200b\u3002</p>"},{"location":"user_guides/train/#_8","title":"\u51c6\u5907\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>\u200b\u7b2c\u4e8c\u6b65\u200b\u9700\u8981\u200b\u51c6\u5907\u200b\u4e00\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u6210\u529f\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7528\u200b balloon dataset \u200b\u6765\u200b\u8bad\u7ec3\u200b\u914d\u5907\u200b\u4e86\u200b FPN \u200b\u7684\u200b Mask R-CNN \uff0c\u200b\u5982\u4e0b\u200b\u662f\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002\u200b\u5047\u8bbe\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u547d\u540d\u200b\u4e3a\u200b <code>mask-rcnn_r50-caffe_fpn_ms-poly-1x_balloon.py</code>\uff0c\u200b\u76f8\u5e94\u200b\u4fdd\u5b58\u200b\u8def\u5f84\u200b\u4e3a\u200b <code>configs/balloon/</code>\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002\u200b\u8be6\u7ec6\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u5b66\u4e60\u200b\u914d\u7f6e\u6587\u4ef6\u200b \u2014 MMDetection 3.0.0 \u200b\u6587\u6863\u200b\u3002</p> <pre><code># \u200b\u65b0\u200b\u914d\u7f6e\u200b\u7ee7\u627f\u200b\u4e86\u200b\u57fa\u672c\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5e76\u200b\u505a\u200b\u4e86\u200b\u5fc5\u8981\u200b\u7684\u200b\u4fee\u6539\u200b\n_base_ = '../mask_rcnn/mask-rcnn_r50-caffe_fpn_ms-poly-1x_coco.py'\n\n# \u200b\u6211\u4eec\u200b\u8fd8\u200b\u9700\u8981\u200b\u66f4\u6539\u200b head \u200b\u4e2d\u200b\u7684\u200b num_classes \u200b\u4ee5\u200b\u5339\u914d\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u200b\nmodel = dict(\n    roi_head=dict(\n        bbox_head=dict(num_classes=1), mask_head=dict(num_classes=1)))\n\n# \u200b\u4fee\u6539\u200b\u6570\u636e\u200b\u96c6\u200b\u76f8\u5173\u200b\u914d\u7f6e\u200b\ndata_root = 'data/balloon/'\nmetainfo = {\n    'classes': ('balloon', ),\n    'palette': [\n        (220, 20, 60),\n    ]\n}\ntrain_dataloader = dict(\n    batch_size=1,\n    dataset=dict(\n        data_root=data_root,\n        metainfo=metainfo,\n        ann_file='train/annotation_coco.json',\n        data_prefix=dict(img='train/')))\nval_dataloader = dict(\n    dataset=dict(\n        data_root=data_root,\n        metainfo=metainfo,\n        ann_file='val/annotation_coco.json',\n        data_prefix=dict(img='val/')))\ntest_dataloader = val_dataloader\n\n# \u200b\u4fee\u6539\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u76f8\u5173\u200b\u914d\u7f6e\u200b\nval_evaluator = dict(ann_file=data_root + 'val/annotation_coco.json')\ntest_evaluator = val_evaluator\n\n# \u200b\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200b Mask R-CNN \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u6765\u200b\u505a\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\nload_from = 'https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth'\n</code></pre>"},{"location":"user_guides/train/#_9","title":"\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6a21\u578b","text":"<p>\u200b\u4e3a\u4e86\u200b\u4f7f\u7528\u200b\u65b0\u200b\u7684\u200b\u914d\u7f6e\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5bf9\u6a21\u578b\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u4f60\u200b\u53ea\u200b\u9700\u8981\u200b\u8fd0\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u3002</p> <pre><code>python tools/train.py configs/balloon/mask-rcnn_r50-caffe_fpn_ms-poly-1x_balloon.py\n</code></pre> <p>\u200b\u53c2\u8003\u200b \u200b\u5728\u200b\u6807\u51c6\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6a21\u578b\u200b \u200b\u6765\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"user_guides/train/#_10","title":"\u6d4b\u8bd5\u200b\u4ee5\u53ca\u200b\u63a8\u7406","text":"<p>\u200b\u4e3a\u4e86\u200b\u6d4b\u8bd5\u200b\u8bad\u7ec3\u200b\u5b8c\u6bd5\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f60\u200b\u53ea\u200b\u9700\u8981\u200b\u8fd0\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u3002</p> <pre><code>python tools/test.py configs/balloon/mask-rcnn_r50-caffe_fpn_ms-poly-1x_balloon.py work_dirs/mask-rcnn_r50-caffe_fpn_ms-poly-1x_balloon/epoch_12.pth\n</code></pre> <p>\u200b\u53c2\u8003\u200b \u200b\u6d4b\u8bd5\u200b\u73b0\u6709\u200b\u6a21\u578b\u200b \u200b\u6765\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u8be6\u7ec6\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"user_guides/useful_hooks/","title":"\u5b9e\u7528\u200b\u7684\u200b\u94a9\u5b50","text":"<p>MMDetection \u200b\u548c\u200b MMEngine \u200b\u4e3a\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u591a\u6837\u200b\u5b9e\u7528\u200b\u7684\u200b\u94a9\u5b50\u200b\uff08Hook\uff09\uff0c\u200b\u5305\u62ec\u200b <code>MemoryProfilerHook</code>\u3001<code>NumClassCheckHook</code> \u200b\u7b49\u7b49\u200b\u3002 \u200b\u8fd9\u7bc7\u200b\u6559\u7a0b\u200b\u4ecb\u7ecd\u200b\u4e86\u200b MMDetection \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u94a9\u5b50\u200b\u529f\u80fd\u200b\u53ca\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u3002\u200b\u82e5\u200b\u4f7f\u7528\u200b MMEngine \u200b\u5b9a\u4e49\u200b\u7684\u200b\u94a9\u5b50\u200b\u8bf7\u200b\u53c2\u8003\u200b MMEngine \u200b\u7684\u200b\u94a9\u5b50\u200bAPI\u200b\u6587\u6863\u200b.</p>"},{"location":"user_guides/useful_hooks/#checkinvalidlosshook","title":"CheckInvalidLossHook","text":""},{"location":"user_guides/useful_hooks/#numclasscheckhook","title":"NumClassCheckHook","text":""},{"location":"user_guides/useful_hooks/#memoryprofilerhook","title":"MemoryProfilerHook","text":"<p>\u200b\u5185\u5b58\u200b\u5206\u6790\u200b\u94a9\u5b50\u200b \u200b\u8bb0\u5f55\u200b\u4e86\u200b\u5305\u62ec\u200b\u865a\u62df\u5185\u5b58\u200b\u3001\u200b\u4ea4\u6362\u200b\u5185\u5b58\u200b\u3001\u200b\u5f53\u524d\u200b\u8fdb\u7a0b\u200b\u5728\u5185\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5b58\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5b83\u200b\u80fd\u591f\u200b\u5e2e\u52a9\u200b\u6355\u6349\u200b\u7cfb\u7edf\u200b\u7684\u200b\u4f7f\u7528\u200b\u72b6\u51b5\u200b\u4e0e\u200b\u53d1\u73b0\u200b\u9690\u85cf\u200b\u7684\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u95ee\u9898\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5148\u200b\u901a\u8fc7\u200b <code>pip install memory_profiler psutil</code> \u200b\u547d\u4ee4\u200b\u5b89\u88c5\u200b <code>memory_profiler</code> \u200b\u548c\u200b <code>psutil</code>\u3002</p>"},{"location":"user_guides/useful_hooks/#_2","title":"\u4f7f\u7528","text":"<p>\u200b\u4e3a\u4e86\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u4f7f\u7528\u8005\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u81f3\u200b config \u200b\u6587\u4ef6\u200b</p> <pre><code>custom_hooks = [\n    dict(type='MemoryProfilerHook', interval=50)\n]\n</code></pre>"},{"location":"user_guides/useful_hooks/#_3","title":"\u7ed3\u679c","text":"<p>\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u770b\u5230\u200b <code>MemoryProfilerHook</code> \u200b\u8bb0\u5f55\u200b\u7684\u200b\u5982\u4e0b\u200b\u4fe1\u606f\u200b\uff1a</p> <pre><code>The system has 250 GB (246360 MB + 9407 MB) of memory and 8 GB (5740 MB + 2452 MB) of swap memory in total. Currently 9407 MB (4.4%) of memory and 5740 MB (29.9%) of swap memory were consumed. And the current training process consumed 5434 MB of memory.\n</code></pre> <pre><code>2022-04-21 08:49:56,881 - mmengine - INFO - Memory information available_memory: 246360 MB, used_memory: 9407 MB, memory_utilization: 4.4 %, available_swap_memory: 5740 MB, used_swap_memory: 2452 MB, swap_memory_utilization: 29.9 %, current_process_memory: 5434 MB\n</code></pre>"},{"location":"user_guides/useful_hooks/#setepochinfohook","title":"SetEpochInfoHook","text":""},{"location":"user_guides/useful_hooks/#syncnormhook","title":"SyncNormHook","text":""},{"location":"user_guides/useful_hooks/#syncrandomsizehook","title":"SyncRandomSizeHook","text":""},{"location":"user_guides/useful_hooks/#yoloxlrupdaterhook","title":"YOLOXLrUpdaterHook","text":""},{"location":"user_guides/useful_hooks/#yoloxmodeswitchhook","title":"YOLOXModeSwitchHook","text":""},{"location":"user_guides/useful_hooks/#_4","title":"\u5982\u4f55\u200b\u5b9e\u73b0\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50","text":"<p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u4ece\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u7684\u200b\u5f00\u59cb\u200b\u5230\u200b\u7ed3\u675f\u200b\uff0c\u200b\u5171\u6709\u200b20\u200b\u4e2a\u200b\u70b9\u4f4d\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u94a9\u5b50\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\u5728\u200b\u4e0d\u540c\u200b\u70b9\u4f4d\u200b\u6267\u884c\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u81ea\u5b9a\u4e49\u200b\u64cd\u4f5c\u200b\u3002</p> <ul> <li>global points: <code>before_run</code>, <code>after_run</code></li> <li>points in training: <code>before_train</code>, <code>before_train_epoch</code>, <code>before_train_iter</code>, <code>after_train_iter</code>, <code>after_train_epoch</code>, <code>after_train</code></li> <li>points in validation: <code>before_val</code>, <code>before_val_epoch</code>, <code>before_val_iter</code>, <code>after_val_iter</code>, <code>after_val_epoch</code>, <code>after_val</code></li> <li>points at testing: <code>before_test</code>, <code>before_test_epoch</code>, <code>before_test_iter</code>, <code>after_test_iter</code>, <code>after_test_epoch</code>,  <code>after_test</code></li> <li>other points: <code>before_save_checkpoint</code>, <code>after_save_checkpoint</code></li> </ul> <p>\u200b\u6bd4\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u68c0\u67e5\u200b loss \u200b\u7684\u200b\u94a9\u5b50\u200b\uff0c\u200b\u5f53\u200b\u635f\u5931\u200b\u4e3a\u200b NaN \u200b\u65f6\u200b\u81ea\u52a8\u200b\u7ed3\u675f\u200b\u8bad\u7ec3\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u5206\u4e3a\u200b\u4e09\u6b65\u200b\uff1a</p> <ol> <li>\u200b\u5728\u200b MMEngine \u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u7ee7\u627f\u200b\u4e8e\u200b <code>Hook</code> \u200b\u7c7b\u200b\u7684\u200b\u65b0\u200b\u94a9\u5b50\u200b\uff0c\u200b\u5e76\u200b\u5b9e\u73b0\u200b <code>after_train_iter</code> \u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u6bcf\u200b <code>n</code> \u200b\u6b21\u200b\u8bad\u7ec3\u200b\u8fed\u4ee3\u200b\u540e\u200b\u635f\u5931\u200b\u662f\u5426\u200b\u53d8\u4e3a\u200b NaN \u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>@HOOKS.register_module()</code> \u200b\u6ce8\u518c\u200b\u5b9e\u73b0\u200b\u597d\u200b\u4e86\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\uff0c\u200b\u5982\u200b\u4e0b\u5217\u200b\u4ee3\u7801\u200b\u6240\u793a\u200b\u3002</li> <li>\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b <code>custom_hooks = [dict(type='MemoryProfilerHook', interval=50)]</code></li> </ol> <pre><code>from typing import Optional\n\nimport torch\nfrom mmengine.hooks import Hook\nfrom mmengine.runner import Runner\n\nfrom mmdet.registry import HOOKS\n\n\n@HOOKS.register_module()\nclass CheckInvalidLossHook(Hook):\n    \"\"\"Check invalid loss hook.\n\n    This hook will regularly check whether the loss is valid\n    during training.\n\n    Args:\n        interval (int): Checking interval (every k iterations).\n            Default: 50.\n    \"\"\"\n\n    def __init__(self, interval: int = 50) -&gt; None:\n        self.interval = interval\n\n    def after_train_iter(self,\n                         runner: Runner,\n                         batch_idx: int,\n                         data_batch: Optional[dict] = None,\n                         outputs: Optional[dict] = None) -&gt; None:\n        \"\"\"Regularly check whether the loss is valid every n iterations.\n\n        Args:\n            runner (:obj:`Runner`): The runner of the training process.\n            batch_idx (int): The index of the current batch in the train loop.\n            data_batch (dict, Optional): Data from dataloader.\n                Defaults to None.\n            outputs (dict, Optional): Outputs from model. Defaults to None.\n        \"\"\"\n        if self.every_n_train_iters(runner, self.interval):\n            assert torch.isfinite(outputs['loss']), \\\n                runner.logger.info('loss become infinite or NaN!')\n</code></pre> <p>\u200b\u8bf7\u200b\u53c2\u8003\u200b \u200b\u81ea\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u914d\u7f6e\u200b \u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u4e0e\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p>"},{"location":"user_guides/useful_tools/","title":"Useful tools","text":"<p>\u200b\u9664\u4e86\u200b\u8bad\u7ec3\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u811a\u672c\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u5728\u200b <code>tools/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8bb8\u591a\u200b\u6709\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"user_guides/useful_tools/#_1","title":"\u65e5\u5fd7\u200b\u5206\u6790","text":"<p><code>tools/analysis_tools/analyze_logs.py</code> \u200b\u53ef\u200b\u5229\u7528\u200b\u6307\u5b9a\u200b\u7684\u200b\u8bad\u7ec3\u200b log \u200b\u6587\u4ef6\u200b\u7ed8\u5236\u200b loss/mAP \u200b\u66f2\u7ebf\u56fe\u200b\uff0c \u200b\u7b2c\u4e00\u6b21\u200b\u8fd0\u884c\u200b\u524d\u200b\u8bf7\u200b\u5148\u200b\u8fd0\u884c\u200b <code>pip install seaborn</code> \u200b\u5b89\u88c5\u200b\u5fc5\u8981\u200b\u4f9d\u8d56\u200b.</p> <pre><code>python tools/analysis_tools/analyze_logs.py plot_curve [--keys ${KEYS}] [--eval-interval ${EVALUATION_INTERVAL}] [--title ${TITLE}] [--legend ${LEGEND}] [--backend ${BACKEND}] [--style ${STYLE}] [--out ${OUT_FILE}]\n</code></pre> <p></p> <p>\u200b\u6837\u4f8b\u200b:</p> <ul> <li>\u200b\u7ed8\u5236\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u66f2\u7ebf\u56fe\u200b</li> </ul> <pre><code>python tools/analysis_tools/analyze_logs.py plot_curve log.json --keys loss_cls --legend loss_cls\n</code></pre> <ul> <li>\u200b\u7ed8\u5236\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u3001\u200b\u56de\u5f52\u200b\u635f\u5931\u200b\u66f2\u7ebf\u56fe\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u56fe\u7247\u200b\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b pdf \u200b\u6587\u4ef6\u200b</li> </ul> <pre><code>python tools/analysis_tools/analyze_logs.py plot_curve log.json --keys loss_cls loss_bbox --out losses.pdf\n</code></pre> <ul> <li>\u200b\u5728\u200b\u76f8\u540c\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u6bd4\u8f83\u200b\u4e24\u6b21\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b\u7684\u200b bbox mAP</li> </ul> <pre><code>python tools/analysis_tools/analyze_logs.py plot_curve log1.json log2.json --keys bbox_mAP --legend run1 run2\n</code></pre> <ul> <li>\u200b\u8ba1\u7b97\u200b\u5e73\u5747\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b</li> </ul> <pre><code>python tools/analysis_tools/analyze_logs.py cal_train_time log.json [--include-outliers]\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u4ee5\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u5c55\u793a\u200b</p> <pre><code>-----Analyze train time of work_dirs/some_exp/20190611_192040.log.json-----\nslowest epoch 11, average time is 1.2024\nfastest epoch 1, average time is 1.1909\ntime std over epochs is 0.0028\naverage iter time: 1.1959 s/iter\n</code></pre>"},{"location":"user_guides/useful_tools/#_2","title":"\u7ed3\u679c\u200b\u5206\u6790","text":"<p>\u200b\u4f7f\u7528\u200b <code>tools/analysis_tools/analyze_results.py</code> \u200b\u53ef\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u56fe\u50cf\u200b mAP\uff0c\u200b\u968f\u540e\u200b\u6839\u636e\u200b\u771f\u5b9e\u200b\u6807\u6ce8\u200b\u6846\u200b\u4e0e\u200b\u9884\u6d4b\u200b\u6846\u200b\u7684\u200b\u6bd4\u8f83\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5c55\u793a\u200b\u6216\u200b\u4fdd\u5b58\u200b\u6700\u9ad8\u200b\u4e0e\u200b\u6700\u4f4e\u200b top-k \u200b\u5f97\u5206\u200b\u7684\u200b\u9884\u6d4b\u200b\u56fe\u50cf\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b</p> <pre><code>python tools/analysis_tools/analyze_results.py \\\n      ${CONFIG} \\\n      ${PREDICTION_PATH} \\\n      ${SHOW_DIR} \\\n      [--show] \\\n      [--wait-time ${WAIT_TIME}] \\\n      [--topk ${TOPK}] \\\n      [--show-score-thr ${SHOW_SCORE_THR}] \\\n      [--cfg-options ${CFG_OPTIONS}]\n</code></pre> <p>\u200b\u5404\u4e2a\u200b\u53c2\u6570\u200b\u9009\u9879\u200b\u7684\u200b\u4f5c\u7528\u200b:</p> <ul> <li><code>config</code>: model config \u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</li> <li><code>prediction_path</code>:  \u200b\u4f7f\u7528\u200b <code>tools/test.py</code> \u200b\u8f93\u51fa\u200b\u7684\u200b pickle \u200b\u683c\u5f0f\u200b\u7ed3\u679c\u200b\u6587\u4ef6\u200b\u3002</li> <li><code>show_dir</code>: \u200b\u7ed8\u5236\u200b\u771f\u5b9e\u200b\u6807\u6ce8\u200b\u6846\u200b\u4e0e\u200b\u9884\u6d4b\u200b\u6846\u200b\u7684\u200b\u56fe\u50cf\u200b\u5b58\u653e\u200b\u76ee\u5f55\u200b\u3002</li> <li><code>--show</code>\uff1a\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u5c55\u793a\u200b\u7ed8\u5236\u200b box \u200b\u540e\u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b <code>False</code>\u3002</li> <li><code>--wait-time</code>: show \u200b\u65f6\u95f4\u200b\u7684\u200b\u95f4\u9694\u200b\uff0c\u200b\u82e5\u200b\u4e3a\u200b 0 \u200b\u8868\u793a\u200b\u6301\u7eed\u200b\u663e\u793a\u200b\u3002</li> <li><code>--topk</code>: \u200b\u6839\u636e\u200b\u6700\u9ad8\u200b\u6216\u200b\u6700\u4f4e\u200b <code>topk</code> \u200b\u6982\u7387\u200b\u6392\u5e8f\u200b\u4fdd\u5b58\u200b\u7684\u200b\u56fe\u7247\u200b\u6570\u91cf\u200b\uff0c\u200b\u82e5\u200b\u4e0d\u200b\u6307\u5b9a\u200b\uff0c\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\u4e3a\u200b <code>20</code>\u3002</li> <li><code>--show-score-thr</code>: \u200b\u80fd\u591f\u200b\u5c55\u793a\u200b\u7684\u200b\u6982\u7387\u200b\u9608\u503c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b <code>0</code>\u3002</li> <li><code>--cfg-options</code>: \u200b\u5982\u679c\u200b\u6307\u5b9a\u200b\uff0c\u200b\u53ef\u200b\u6839\u636e\u200b\u6307\u5b9a\u200b\u952e\u503c\u200b\u5bf9\u200b\u8986\u76d6\u200b\u66f4\u65b0\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u5bf9\u5e94\u200b\u9009\u9879\u200b</li> </ul> <p>\u200b\u6837\u4f8b\u200b: \u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u901a\u8fc7\u200b <code>tools/test.py</code> \u200b\u5f97\u5230\u200b\u4e86\u200b pickle \u200b\u683c\u5f0f\u200b\u7684\u200b\u7ed3\u679c\u200b\u6587\u4ef6\u200b\uff0c\u200b\u8def\u5f84\u200b\u4e3a\u200b './result.pkl'\u3002</p> <ol> <li>\u200b\u6d4b\u8bd5\u200b Faster R-CNN \u200b\u5e76\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u56fe\u7247\u200b\u81f3\u200b <code>results/</code></li> </ol> <pre><code>python tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --show\n</code></pre> <ol> <li>\u200b\u6d4b\u8bd5\u200b Faster R-CNN \u200b\u5e76\u200b\u6307\u5b9a\u200b top-k \u200b\u53c2\u6570\u200b\u4e3a\u200b 50\uff0c\u200b\u4fdd\u5b58\u200b\u7ed3\u679c\u200b\u56fe\u7247\u200b\u81f3\u200b <code>results/</code></li> </ol> <pre><code>python tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --topk 50\n</code></pre> <ol> <li>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u8fc7\u6ee4\u200b\u4f4e\u200b\u6982\u7387\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u6307\u5b9a\u200b <code>show-score-thr</code> \u200b\u53c2\u6570\u200b</li> </ol> <pre><code>python tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --show-score-thr 0.3\n</code></pre>"},{"location":"user_guides/useful_tools/#_3","title":"\u591a\u200b\u6a21\u578b\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u878d\u5408","text":"<p><code>tools/analysis_tools/fuse_results.py</code> \u200b\u53ef\u200b\u4f7f\u7528\u200b Weighted Boxes Fusion(WBF) \u200b\u65b9\u6cd5\u200b\u5c06\u200b\u591a\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u878d\u5408\u200b\u3002\uff08\u200b\u5f53\u524d\u200b\u4ec5\u200b\u652f\u6301\u200b COCO \u200b\u683c\u5f0f\u200b\uff09</p> <p>\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b</p> <pre><code>python tools/analysis_tools/fuse_results.py \\\n       ${PRED_RESULTS} \\\n       [--annotation ${ANNOTATION}] \\\n       [--weights ${WEIGHTS}] \\\n       [--fusion-iou-thr ${FUSION_IOU_THR}] \\\n       [--skip-box-thr ${SKIP_BOX_THR}] \\\n       [--conf-type ${CONF_TYPE}] \\\n       [--eval-single ${EVAL_SINGLE}] \\\n       [--save-fusion-results ${SAVE_FUSION_RESULTS}] \\\n       [--out-dir ${OUT_DIR}]\n</code></pre> <p>\u200b\u5404\u4e2a\u200b\u53c2\u6570\u200b\u9009\u9879\u200b\u7684\u200b\u4f5c\u7528\u200b:</p> <ul> <li><code>pred-results</code>: \u200b\u591a\u200b\u6a21\u578b\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u7684\u200b\u4fdd\u5b58\u200b\u8def\u5f84\u200b\u3002\uff08\u200b\u76ee\u524d\u200b\u4ec5\u200b\u652f\u6301\u200b json \u200b\u683c\u5f0f\u200b\uff09</li> <li><code>--annotation</code>: \u200b\u771f\u5b9e\u200b\u6807\u6ce8\u200b\u6846\u200b\u7684\u200b\u4fdd\u5b58\u200b\u8def\u5f84\u200b\u3002</li> <li><code>--weights</code>: \u200b\u6a21\u578b\u200b\u878d\u5408\u200b\u6743\u91cd\u200b\u3002\u200b\u9ed8\u8ba4\u8bbe\u7f6e\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u5747\u200b\u4e3a\u200b1\u3002</li> <li><code>--fusion-iou-thr</code>: \u200b\u5728\u200bWBF\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\uff0c\u200b\u5339\u914d\u200b\u6210\u529f\u200b\u7684\u200b IoU \u200b\u9608\u503c\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>0.55</code>\u3002</li> <li><code>--skip-box-thr</code>: WBF\u200b\u7b97\u6cd5\u200b\u4e2d\u9700\u200b\u5254\u9664\u200b\u7684\u200b\u7f6e\u4fe1\u5ea6\u200b\u9608\u503c\u200b\uff0c\u200b\u7f6e\u4fe1\u5ea6\u200b\u5c0f\u4e8e\u200b\u8be5\u503c\u200b\u7684\u200b bbox \u200b\u4f1a\u200b\u88ab\u200b\u5254\u9664\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>0</code>\u3002</li> <li><code>--conf-type</code>: \u200b\u5982\u4f55\u200b\u8ba1\u7b97\u200b\u878d\u5408\u200b\u540e\u200b bbox \u200b\u7684\u200b\u7f6e\u4fe1\u5ea6\u200b\u3002\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u56db\u79cd\u200b\u9009\u9879\u200b\uff1a</li> <li><code>avg</code>: \u200b\u53d6\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u6b64\u200b\u9009\u9879\u200b\u3002</li> <li><code>max</code>: \u200b\u53d6\u200b\u6700\u5927\u503c\u200b\u3002</li> <li><code>box_and_model_avg</code>: box\u200b\u548c\u200b\u6a21\u578b\u200b\u5c3a\u5ea6\u200b\u7684\u200b\u52a0\u6743\u200b\u5e73\u5747\u503c\u200b\u3002</li> <li><code>absent_model_aware_avg</code>: \u200b\u8003\u8651\u200b\u7f3a\u5931\u200b\u6a21\u578b\u200b\u7684\u200b\u52a0\u6743\u200b\u5e73\u5747\u503c\u200b\u3002</li> <li><code>--eval-single</code>: \u200b\u662f\u5426\u200b\u8bc4\u4f30\u200b\u6bcf\u4e2a\u200b\u5355\u4e00\u200b\u6a21\u578b\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>False</code>\u3002</li> <li><code>--save-fusion-results</code>: \u200b\u662f\u5426\u200b\u4fdd\u5b58\u200b\u878d\u5408\u200b\u7ed3\u679c\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>False</code>\u3002</li> <li><code>--out-dir</code>: \u200b\u878d\u5408\u200b\u7ed3\u679c\u200b\u4fdd\u5b58\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</li> </ul> <p>\u200b\u6837\u4f8b\u200b: \u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u901a\u8fc7\u200b <code>tools/test.py</code> \u200b\u5f97\u5230\u200b\u4e86\u200b3\u200b\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b json \u200b\u683c\u5f0f\u200b\u7684\u200b\u7ed3\u679c\u200b\u6587\u4ef6\u200b\uff0c\u200b\u8def\u5f84\u200b\u5206\u522b\u200b\u4e3a\u200b './faster-rcnn_r50-caffe_fpn_1x_coco.json', './retinanet_r50-caffe_fpn_1x_coco.json', './cascade-rcnn_r50-caffe_fpn_1x_coco.json'\uff0c\u200b\u771f\u5b9e\u200b\u6807\u6ce8\u200b\u6846\u200b\u7684\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u4e3a\u200b'./annotation.json'\u3002</p> <ol> <li>\u200b\u878d\u5408\u200b\u4e09\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5e76\u200b\u8bc4\u4f30\u200b\u5176\u200b\u6548\u679c\u200b</li> </ol> <pre><code>python tools/analysis_tools/fuse_results.py \\\n       ./faster-rcnn_r50-caffe_fpn_1x_coco.json \\\n       ./retinanet_r50-caffe_fpn_1x_coco.json \\\n       ./cascade-rcnn_r50-caffe_fpn_1x_coco.json \\\n       --annotation ./annotation.json \\\n       --weights 1 2 3 \\\n</code></pre> <ol> <li>\u200b\u540c\u65f6\u200b\u8bc4\u4f30\u200b\u6bcf\u4e2a\u200b\u5355\u4e00\u200b\u6a21\u578b\u200b\u4e0e\u200b\u878d\u5408\u200b\u7ed3\u679c\u200b</li> </ol> <pre><code>python tools/analysis_tools/fuse_results.py \\\n       ./faster-rcnn_r50-caffe_fpn_1x_coco.json \\\n       ./retinanet_r50-caffe_fpn_1x_coco.json \\\n       ./cascade-rcnn_r50-caffe_fpn_1x_coco.json \\\n       --annotation ./annotation.json \\\n       --weights 1 2 3 \\\n       --eval-single\n</code></pre> <ol> <li>\u200b\u878d\u5408\u200b\u4e09\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5e76\u200b\u4fdd\u5b58\u200b</li> </ol> <pre><code>python tools/analysis_tools/fuse_results.py \\\n       ./faster-rcnn_r50-caffe_fpn_1x_coco.json \\\n       ./retinanet_r50-caffe_fpn_1x_coco.json \\\n       ./cascade-rcnn_r50-caffe_fpn_1x_coco.json \\\n       --annotation ./annotation.json \\\n       --weights 1 2 3 \\\n       --save-fusion-results \\\n       --out-dir outputs/fusion\n</code></pre>"},{"location":"user_guides/useful_tools/#_4","title":"\u53ef\u89c6\u5316","text":""},{"location":"user_guides/useful_tools/#_5","title":"\u53ef\u89c6\u5316\u200b\u6570\u636e\u200b\u96c6","text":"<p><code>tools/analysis_tools/browse_dataset.py</code> \u200b\u53ef\u200b\u5e2e\u52a9\u200b\u4f7f\u7528\u8005\u200b\u68c0\u67e5\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u5305\u62ec\u200b\u56fe\u50cf\u200b\u548c\u200b\u6807\u6ce8\u200b\uff09\uff0c\u200b\u6216\u200b\u4fdd\u5b58\u200b\u56fe\u50cf\u200b\u81f3\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u3002</p> <pre><code>python tools/analysis_tools/browse_dataset.py ${CONFIG} [-h] [--skip-type ${SKIP_TYPE[SKIP_TYPE...]}] [--output-dir ${OUTPUT_DIR}] [--not-show] [--show-interval ${SHOW_INTERVAL}]\n</code></pre>"},{"location":"user_guides/useful_tools/#_6","title":"\u53ef\u89c6\u5316\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u53ef\u89c6\u5316\u200b\u4e4b\u524d\u200b\uff0c\u200b\u9700\u8981\u200b\u5148\u200b\u8f6c\u6362\u200b\u6a21\u578b\u200b\u81f3\u200b ONNX \u200b\u683c\u5f0f\u200b\uff0c\u200b\u53ef\u200b\u53c2\u8003\u200b\u6b64\u5904\u200b\u3002 \u200b\u6ce8\u610f\u200b\uff0c\u200b\u73b0\u5728\u200b\u53ea\u200b\u652f\u6301\u200b RetinaNet\uff0c\u200b\u4e4b\u540e\u200b\u7684\u200b\u7248\u672c\u200b\u5c06\u4f1a\u200b\u652f\u6301\u200b\u5176\u4ed6\u200b\u6a21\u578b\u200b \u200b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5176\u4ed6\u200b\u5de5\u5177\u200b\u53ef\u89c6\u5316\u200bNetron\u3002</p>"},{"location":"user_guides/useful_tools/#_7","title":"\u53ef\u89c6\u5316\u200b\u9884\u6d4b\u200b\u7ed3\u679c","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u4e00\u4e2a\u200b\u8f7b\u91cf\u200b GUI \u200b\u53ef\u89c6\u5316\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b DetVisGUI project\u3002</p>"},{"location":"user_guides/useful_tools/#_8","title":"\u8bef\u5dee\u200b\u5206\u6790","text":"<p><code>tools/analysis_tools/coco_error_analysis.py</code> \u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u6807\u51c6\u200b\u5206\u6790\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b COCO \u200b\u8bc4\u4f30\u200b\u7ed3\u679c\u200b\u3002\u200b\u540c\u65f6\u200b\u5c06\u200b\u4e00\u4e9b\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u4fe1\u606f\u200b\u4f53\u73b0\u200b\u5728\u200b\u56fe\u8868\u200b\u4e0a\u200b\u3002</p> <pre><code>python tools/analysis_tools/coco_error_analysis.py ${RESULT} ${OUT_DIR} [-h] [--ann ${ANN}] [--types ${TYPES[TYPES...]}]\n</code></pre> <p>\u200b\u6837\u4f8b\u200b:</p> <p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u628a\u200b Mask R-CNN checkpoint file \u200b\u653e\u7f6e\u200b\u5728\u200b\u6587\u4ef6\u5939\u200b 'checkpoint' \u200b\u4e2d\u200b\uff08\u200b\u5176\u4ed6\u200b\u6a21\u578b\u200b\u8bf7\u200b\u5728\u200b model zoo \u200b\u4e2d\u200b\u83b7\u53d6\u200b\uff09\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u4fdd\u5b58\u200b bbox \u200b\u7ed3\u679c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7528\u200b\u4e0b\u5217\u200b\u65b9\u5f0f\u200b\u4fee\u6539\u200b <code>test_evaluator</code> :</p> <ol> <li>\u200b\u67e5\u627e\u200b\u5f53\u524d\u200b config \u200b\u6587\u4ef6\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u7684\u200b  'configs/base/datasets' \u200b\u6570\u636e\u200b\u96c6\u200b\u4fe1\u606f\u200b\u3002</li> <li>\u200b\u7528\u200b\u5f53\u524d\u200b\u6570\u636e\u200b\u96c6\u200b config \u200b\u4e2d\u200b\u7684\u200b test_evaluator \u200b\u4ee5\u53ca\u200b test_dataloader \u200b\u66ff\u6362\u200b\u539f\u59cb\u200b\u6587\u4ef6\u200b\u7684\u200b test_evaluator \u200b\u4ee5\u53ca\u200b test_dataloader\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5f97\u5230\u200b bbox \u200b\u6216\u200b segmentation \u200b\u7684\u200b json \u200b\u683c\u5f0f\u6587\u4ef6\u200b\u3002</li> </ol> <pre><code>python tools/test.py \\\n       configs/mask_rcnn/mask-rcnn_r50_fpn_1x_coco.py \\\n       checkpoint/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth \\\n</code></pre> <ol> <li>\u200b\u5f97\u5230\u200b\u6bcf\u200b\u4e00\u7c7b\u200b\u7684\u200b COCO bbox \u200b\u8bef\u5dee\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b\u56fe\u50cf\u200b\u81f3\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u3002\uff08\u200b\u5728\u200b config \u200b\u4e2d\u200b\u9ed8\u8ba4\u200b\u76ee\u5f55\u200b\u662f\u200b './work_dirs/coco_instance/test')</li> </ol> <pre><code>python tools/analysis_tools/coco_error_analysis.py \\\n       results.bbox.json \\\n       results \\\n       --ann=data/coco/annotations/instances_val2017.json \\\n</code></pre> <ol> <li>\u200b\u5f97\u5230\u200b\u6bcf\u200b\u4e00\u7c7b\u200b\u7684\u200b COCO \u200b\u5206\u5272\u200b\u8bef\u5dee\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b\u56fe\u50cf\u200b\u81f3\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u3002</li> </ol> <pre><code>python tools/analysis_tools/coco_error_analysis.py \\\n       results.segm.json \\\n       results \\\n       --ann=data/coco/annotations/instances_val2017.json \\\n       --types='segm'\n</code></pre>"},{"location":"user_guides/useful_tools/#_9","title":"\u6a21\u578b\u200b\u670d\u52a1\u200b\u90e8\u7f72","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u4f7f\u7528\u200b <code>TorchServe</code> \u200b\u642d\u5efa\u200b\u4e00\u4e2a\u200b <code>MMDetection</code> \u200b\u6a21\u578b\u200b\u670d\u52a1\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u4ee5\u4e0b\u200b\u6b65\u9aa4\u200b\uff1a</p>"},{"location":"user_guides/useful_tools/#1-torchserve","title":"1. \u200b\u5b89\u88c5\u200b TorchServe","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u6210\u529f\u200b\u5b89\u88c5\u200b\u4e86\u200b\u5305\u542b\u200b <code>PyTorch</code> \u200b\u548c\u200b <code>MMDetection</code> \u200b\u7684\u200b <code>Python</code> \u200b\u73af\u5883\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u6765\u200b\u5b89\u88c5\u200b <code>TorchServe</code> \u200b\u53ca\u5176\u200b\u4f9d\u8d56\u200b\u9879\u200b\u3002\u200b\u6709\u5173\u200b\u66f4\u200b\u591a\u200b\u5176\u4ed6\u200b\u5b89\u88c5\u200b\u9009\u9879\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200b\u5feb\u901f\u200b\u5165\u95e8\u200b\u3002</p> <pre><code>python -m pip install torchserve torch-model-archiver torch-workflow-archiver nvgpu\n</code></pre> <p>\u200b\u6ce8\u610f\u200b: \u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b docker \u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>TorchServe</code>\uff0c\u200b\u8bf7\u200b\u53c2\u8003\u200btorchserve docker\u3002</p>"},{"location":"user_guides/useful_tools/#2-mmdetection-torchserve","title":"2. \u200b\u628a\u200b MMDetection \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b TorchServe","text":"<pre><code>python tools/deployment/mmdet2torchserve.py ${CONFIG_FILE} ${CHECKPOINT_FILE} \\\n--output-folder ${MODEL_STORE} \\\n--model-name ${MODEL_NAME}\n</code></pre>"},{"location":"user_guides/useful_tools/#3-torchserve","title":"3. \u200b\u542f\u52a8\u200b <code>TorchServe</code>","text":"<pre><code>torchserve --start --ncs \\\n  --model-store ${MODEL_STORE} \\\n  --models  ${MODEL_NAME}.mar\n</code></pre>"},{"location":"user_guides/useful_tools/#4","title":"4. \u200b\u6d4b\u8bd5\u200b\u90e8\u7f72\u200b\u6548\u679c","text":"<pre><code>curl -O curl -O https://raw.githubusercontent.com/pytorch/serve/master/docs/images/3dogs.jpg\ncurl http://127.0.0.1:8080/predictions/${MODEL_NAME} -T 3dogs.jpg\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u4e0b\u5217\u200b json \u200b\u4fe1\u606f\u200b\uff1a</p> <pre><code>[\n  {\n    \"class_label\": 16,\n    \"class_name\": \"dog\",\n    \"bbox\": [\n      294.63409423828125,\n      203.99111938476562,\n      417.048583984375,\n      281.62744140625\n    ],\n    \"score\": 0.9987992644309998\n  },\n  {\n    \"class_label\": 16,\n    \"class_name\": \"dog\",\n    \"bbox\": [\n      404.26019287109375,\n      126.0080795288086,\n      574.5091552734375,\n      293.6662292480469\n    ],\n    \"score\": 0.9979367256164551\n  },\n  {\n    \"class_label\": 16,\n    \"class_name\": \"dog\",\n    \"bbox\": [\n      197.2144775390625,\n      93.3067855834961,\n      307.8505554199219,\n      276.7560119628906\n    ],\n    \"score\": 0.993338406085968\n  }\n]\n</code></pre>"},{"location":"user_guides/useful_tools/#_10","title":"\u7ed3\u679c\u200b\u5bf9\u6bd4","text":"<p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>test_torchserver.py</code> \u200b\u6765\u200b\u6bd4\u8f83\u200b <code>TorchServe</code> \u200b\u548c\u200b <code>PyTorch</code> \u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5e76\u200b\u53ef\u89c6\u5316\u200b\uff1a</p> <pre><code>python tools/deployment/test_torchserver.py ${IMAGE_FILE} ${CONFIG_FILE} ${CHECKPOINT_FILE} ${MODEL_NAME}\n[--inference-addr ${INFERENCE_ADDR}] [--device ${DEVICE}] [--score-thr ${SCORE_THR}] [--work-dir ${WORK_DIR}]\n</code></pre> <p>\u200b\u6837\u4f8b\u200b:</p> <pre><code>python tools/deployment/test_torchserver.py \\\ndemo/demo.jpg \\\nconfigs/yolo/yolov3_d53_8xb8-320-273e_coco.py \\\ncheckpoint/yolov3_d53_320_273e_coco-421362b6.pth \\\nyolov3 \\\n--work-dir ./work-dir\n</code></pre>"},{"location":"user_guides/useful_tools/#5-torchserve","title":"5. \u200b\u505c\u6b62\u200b <code>TorchServe</code>","text":"<pre><code>torchserve --stop\n</code></pre>"},{"location":"user_guides/useful_tools/#_11","title":"\u6a21\u578b\u200b\u590d\u6742\u5ea6","text":"<p><code>tools/analysis_tools/get_flops.py</code> \u200b\u5de5\u5177\u200b\u53ef\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u6307\u5b9a\u200b\u6a21\u578b\u200b\u7684\u200b FLOPs\u3001\u200b\u53c2\u200b\u6570\u91cf\u200b\u5927\u5c0f\u200b\uff08\u200b\u6539\u7f16\u81ea\u200b flops-counter.pytorch \uff09\u3002</p> <pre><code>python tools/analysis_tools/get_flops.py ${CONFIG_FILE} [--shape ${INPUT_SHAPE}]\n</code></pre> <p>\u200b\u83b7\u5f97\u200b\u7684\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>==============================\nInput shape: (3, 1280, 800)\nFlops: 239.32 GFLOPs\nParams: 37.74 M\n==============================\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\u8fd8\u200b\u53ea\u662f\u200b\u5b9e\u9a8c\u200b\u6027\u8d28\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u200b\u4fdd\u8bc1\u200b\u8fd9\u4e2a\u200b\u6570\u503c\u200b\u662f\u200b\u7edd\u5bf9\u200b\u6b63\u786e\u200b\u7684\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4ed6\u200b\u7528\u4e8e\u200b\u7b80\u5355\u200b\u7684\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u7528\u4e8e\u200b\u79d1\u6280\u200b\u8bba\u6587\u200b\u62a5\u544a\u200b\u9700\u8981\u200b\u518d\u4e09\u200b\u68c0\u67e5\u200b\u786e\u8ba4\u200b\u3002</p> <ol> <li>FLOPs \u200b\u4e0e\u200b\u8f93\u5165\u200b\u7684\u200b\u5f62\u72b6\u200b\u5927\u5c0f\u200b\u76f8\u5173\u200b\uff0c\u200b\u53c2\u200b\u6570\u91cf\u200b\u6ca1\u6709\u200b\u8fd9\u4e2a\u200b\u5173\u7cfb\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8f93\u5165\u200b\u5f62\u72b6\u200b\u5927\u5c0f\u200b\u4e3a\u200b (1, 3, 1280, 800) \u3002</li> <li>\u200b\u4e00\u4e9b\u200b\u7b97\u5b50\u200b\u5e76\u200b\u4e0d\u200b\u8ba1\u5165\u200b FLOPs\uff0c\u200b\u6bd4\u5982\u200b GN \u200b\u6216\u200b\u5176\u4ed6\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u7b97\u5b50\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b <code>mmcv.cnn.get_model_complexity_info()</code> \u200b\u67e5\u770b\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u8bf4\u660e\u200b\u3002</li> <li>\u200b\u4e24\u200b\u9636\u6bb5\u200b\u68c0\u6d4b\u200b\u7684\u200b FLOPs \u200b\u5927\u5c0f\u200b\u53d6\u51b3\u4e8e\u200b proposal \u200b\u7684\u200b\u6570\u91cf\u200b\u3002</li> </ol>"},{"location":"user_guides/useful_tools/#_12","title":"\u6a21\u578b\u200b\u8f6c\u6362","text":""},{"location":"user_guides/useful_tools/#mmdetection-onnx","title":"MMDetection \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b ONNX \u200b\u683c\u5f0f","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u811a\u672c\u200b\u7528\u4e8e\u200b\u8f6c\u6362\u200b\u6a21\u578b\u200b\u81f3\u200b ONNX \u200b\u683c\u5f0f\u200b\u3002\u200b\u540c\u65f6\u200b\u8fd8\u200b\u652f\u6301\u200b\u6bd4\u8f83\u200b Pytorch \u200b\u4e0e\u200b ONNX \u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u4ee5\u4fbf\u200b\u5bf9\u7167\u200b\u3002\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u5185\u5bb9\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b mmdeploy\u3002</p>"},{"location":"user_guides/useful_tools/#mmdetection-1x-mmdetection-2x","title":"MMDetection 1.x \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b MMDetection 2.x \u200b\u6a21\u578b","text":"<p><code>tools/model_converters/upgrade_model_version.py</code> \u200b\u53ef\u200b\u5c06\u200b\u65e7\u7248\u672c\u200b\u7684\u200b MMDetection checkpoints \u200b\u8f6c\u6362\u200b\u81f3\u200b\u65b0\u200b\u7248\u672c\u200b\u3002\u200b\u4f46\u200b\u8981\u200b\u6ce8\u610f\u200b\u6b64\u200b\u811a\u672c\u200b\u4e0d\u200b\u4fdd\u8bc1\u200b\u5728\u200b\u65b0\u200b\u7248\u672c\u200b\u52a0\u5165\u200b\u975e\u200b\u517c\u5bb9\u200b\u66f4\u65b0\u200b\u540e\u200b\u8fd8\u200b\u80fd\u200b\u6b63\u5e38\u200b\u8f6c\u6362\u200b\uff0c\u200b\u5efa\u8bae\u60a8\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u65b0\u200b\u7248\u672c\u200b\u7684\u200b checkpoints\u3002</p> <pre><code>python tools/model_converters/upgrade_model_version.py ${IN_FILE} ${OUT_FILE} [-h] [--num-classes NUM_CLASSES]\n</code></pre>"},{"location":"user_guides/useful_tools/#regnet-mmdetection","title":"RegNet \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b MMDetection \u200b\u6a21\u578b","text":"<p><code>tools/model_converters/regnet2mmdet.py</code> \u200b\u5c06\u200b pycls \u200b\u7f16\u7801\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b RegNet \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u4e3a\u200b MMDetection \u200b\u98ce\u683c\u200b\u3002</p> <pre><code>python tools/model_converters/regnet2mmdet.py ${SRC} ${DST} [-h]\n</code></pre>"},{"location":"user_guides/useful_tools/#detectron-resnet-pytorch","title":"Detectron ResNet \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b Pytorch \u200b\u6a21\u578b","text":"<p><code>tools/model_converters/detectron2pytorch.py</code> \u200b\u5c06\u200b detectron \u200b\u7684\u200b\u539f\u59cb\u200b\u9884\u200b\u8bad\u7ec3\u200b RegNet \u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u4e3a\u200b MMDetection \u200b\u98ce\u683c\u200b\u3002</p> <pre><code>python tools/model_converters/detectron2pytorch.py ${SRC} ${DST} ${DEPTH} [-h]\n</code></pre>"},{"location":"user_guides/useful_tools/#_13","title":"\u5236\u4f5c\u200b\u53d1\u5e03\u200b\u7528\u200b\u6a21\u578b","text":"<p><code>tools/model_converters/publish_model.py</code> \u200b\u53ef\u7528\u200b\u6765\u200b\u5236\u4f5c\u200b\u4e00\u4e2a\u200b\u53d1\u5e03\u200b\u7528\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u5728\u200b\u53d1\u5e03\u200b\u6a21\u578b\u200b\u81f3\u200b AWS \u200b\u4e4b\u524d\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\uff1a</p> <ol> <li>\u200b\u5c06\u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u81f3\u200b CPU \u200b\u5f20\u91cf\u200b</li> <li>\u200b\u5220\u9664\u200b\u4f18\u5316\u200b\u5668\u200b\u72b6\u6001\u200b</li> <li>\u200b\u8ba1\u7b97\u200b checkpoint \u200b\u6587\u4ef6\u200b\u7684\u200b hash \u200b\u503c\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b hash \u200b\u53f7\u7801\u200b\u8bb0\u5f55\u200b\u81f3\u200b\u6587\u4ef6\u540d\u200b\u3002</li> </ol> <pre><code>python tools/model_converters/publish_model.py ${INPUT_FILENAME} ${OUTPUT_FILENAME}\n</code></pre> <p>\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python tools/model_converters/publish_model.py work_dirs/faster_rcnn/latest.pth faster_rcnn_r50_fpn_1x_20190801.pth\n</code></pre> <p>\u200b\u6700\u540e\u200b\u8f93\u51fa\u200b\u7684\u200b\u6587\u4ef6\u540d\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a <code>faster_rcnn_r50_fpn_1x_20190801-{hash id}.pth</code>.</p>"},{"location":"user_guides/useful_tools/#_14","title":"\u6570\u636e\u200b\u96c6\u200b\u8f6c\u6362","text":"<p><code>tools/data_converters/</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5c06\u200b Cityscapes \u200b\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b Pascal VOC \u200b\u6570\u636e\u200b\u96c6\u200b\u8f6c\u6362\u200b\u81f3\u200b COCO \u200b\u6570\u636e\u200b\u96c6\u200b\u683c\u5f0f\u200b\u7684\u200b\u5de5\u5177\u200b</p> <pre><code>python tools/dataset_converters/cityscapes.py ${CITYSCAPES_PATH} [-h] [--img-dir ${IMG_DIR}] [--gt-dir ${GT_DIR}] [-o ${OUT_DIR}] [--nproc ${NPROC}]\npython tools/dataset_converters/pascal_voc.py ${DEVKIT_PATH} [-h] [-o ${OUT_DIR}]\n</code></pre>"},{"location":"user_guides/useful_tools/#_15","title":"\u6570\u636e\u200b\u96c6\u200b\u4e0b\u8f7d","text":"<p><code>tools/misc/download_dataset.py</code> \u200b\u53ef\u4ee5\u200b\u4e0b\u8f7d\u200b\u5404\u7c7b\u200b\u5f62\u200b\u5982\u200b COCO\uff0c VOC\uff0c LVIS \u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <pre><code>python tools/misc/download_dataset.py --dataset-name coco2017\npython tools/misc/download_dataset.py --dataset-name voc2007\npython tools/misc/download_dataset.py --dataset-name lvis\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b\u4e2d\u56fd\u200b\u5883\u5185\u200b\u7684\u200b\u7528\u6237\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u5f00\u6e90\u200b\u6570\u636e\u200b\u5e73\u53f0\u200b OpenDataLab \u200b\u6765\u200b\u83b7\u53d6\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u66f4\u597d\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u4f53\u9a8c\u200b:</p> <ul> <li>COCO2017</li> <li>VOC2007</li> <li>VOC2012</li> <li>LVIS</li> </ul>"},{"location":"user_guides/useful_tools/#_16","title":"\u57fa\u51c6\u200b\u6d4b\u8bd5","text":""},{"location":"user_guides/useful_tools/#_17","title":"\u9c81\u68d2\u6027\u200b\u6d4b\u8bd5\u200b\u57fa\u51c6","text":"<p><code>tools/analysis_tools/test_robustness.py</code> \u200b\u53ca\u200b <code>tools/analysis_tools/robustness_eval.py</code> \u200b\u5e2e\u52a9\u200b\u4f7f\u7528\u8005\u200b\u8861\u91cf\u200b\u6a21\u578b\u200b\u7684\u200b\u9c81\u68d2\u6027\u200b\u3002\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u6765\u6e90\u4e8e\u200b Benchmarking Robustness in Object Detection: Autonomous Driving when Winter is Coming\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u4e86\u89e3\u200b\u5982\u4f55\u200b\u5728\u200b\u6c61\u635f\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u7684\u200b\u6548\u679c\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u53c2\u8003\u200b\u8be5\u200b\u57fa\u51c6\u200b\u7684\u200b\u4e00\u7ec4\u200b\u6807\u51c6\u200b\u6a21\u578b\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u7167\u200b robustness_benchmarking.md\u3002</p>"},{"location":"user_guides/useful_tools/#fps","title":"FPS \u200b\u6d4b\u8bd5\u200b\u57fa\u51c6","text":"<p><code>tools/analysis_tools/benchmark.py</code> \u200b\u53ef\u200b\u5e2e\u52a9\u200b\u4f7f\u7528\u8005\u200b\u8ba1\u7b97\u200b FPS\uff0cFPS \u200b\u8ba1\u7b97\u200b\u5305\u62ec\u200b\u4e86\u200b\u6a21\u578b\u200b\u5411\u524d\u200b\u4f20\u64ad\u200b\u4e0e\u200b\u540e\u200b\u5904\u7406\u8fc7\u7a0b\u200b\u3002\u200b\u4e3a\u4e86\u200b\u5f97\u5230\u200b\u66f4\u200b\u7cbe\u786e\u200b\u7684\u200b\u8ba1\u7b97\u200b\u503c\u200b\uff0c\u200b\u73b0\u5728\u200b\u7684\u200b\u5206\u5e03\u5f0f\u8ba1\u7b97\u200b\u6a21\u5f0f\u200b\u53ea\u200b\u652f\u6301\u200b\u4e00\u4e2a\u200b GPU\u3002</p> <pre><code>python -m torch.distributed.launch --nproc_per_node=1 --master_port=${PORT} tools/analysis_tools/benchmark.py \\\n    ${CONFIG} \\\n    [--checkpoint ${CHECKPOINT}] \\\n    [--repeat-num ${REPEAT_NUM}] \\\n    [--max-iter ${MAX_ITER}] \\\n    [--log-interval ${LOG_INTERVAL}] \\\n    --launcher pytorch\n</code></pre> <p>\u200b\u6837\u4f8b\u200b\uff1a\u200b\u5047\u8bbe\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u4e0b\u8f7d\u200b\u4e86\u200b <code>Faster R-CNN</code> \u200b\u6a21\u578b\u200b checkpoint \u200b\u5e76\u200b\u653e\u7f6e\u200b\u5728\u200b <code>checkpoints/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u3002</p> <pre><code>python -m torch.distributed.launch --nproc_per_node=1 --master_port=29500 tools/analysis_tools/benchmark.py \\\n       configs/faster_rcnn/faster-rcnn_r50_fpn_1x_coco.py \\\n       checkpoints/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth \\\n       --launcher pytorch\n</code></pre>"},{"location":"user_guides/useful_tools/#_18","title":"\u66f4\u200b\u591a\u200b\u5de5\u5177","text":""},{"location":"user_guides/useful_tools/#_19","title":"\u4ee5\u200b\u67d0\u4e2a\u200b\u8bc4\u4f30\u200b\u6807\u51c6\u200b\u8fdb\u884c\u200b\u8bc4\u4f30","text":"<p><code>tools/analysis_tools/eval_metric.py</code> \u200b\u6839\u636e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u8bc4\u4f30\u200b\u65b9\u5f0f\u200b\u5bf9\u200b pkl \u200b\u7ed3\u679c\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u8bc4\u4f30\u200b\u3002</p> <pre><code>python tools/analysis_tools/eval_metric.py ${CONFIG} ${PKL_RESULTS} [-h] [--format-only] [--eval ${EVAL[EVAL ...]}]\n                      [--cfg-options ${CFG_OPTIONS [CFG_OPTIONS ...]}]\n                      [--eval-options ${EVAL_OPTIONS [EVAL_OPTIONS ...]}]\n</code></pre>"},{"location":"user_guides/useful_tools/#config","title":"\u6253\u5370\u200b\u5168\u90e8\u200b config","text":"<p><code>tools/misc/print_config.py</code> \u200b\u53ef\u200b\u5c06\u200b\u6240\u6709\u200b\u914d\u7f6e\u200b\u7ee7\u627f\u200b\u5173\u7cfb\u200b\u5c55\u5f00\u200b\uff0c\u200b\u5b8c\u5168\u200b\u6253\u5370\u200b\u76f8\u5e94\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3002</p> <pre><code>python tools/misc/print_config.py ${CONFIG} [-h] [--options ${OPTIONS [OPTIONS...]}]\n</code></pre>"},{"location":"user_guides/useful_tools/#_20","title":"\u8d85\u200b\u53c2\u6570\u200b\u4f18\u5316","text":""},{"location":"user_guides/useful_tools/#yolo-anchor","title":"YOLO Anchor \u200b\u4f18\u5316","text":"<p><code>tools/analysis_tools/optimize_anchors.py</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u4f18\u5316\u200b YOLO \u200b\u7684\u200b anchors\u3002</p> <p>\u200b\u5176\u4e2d\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b K \u200b\u5747\u503c\u200b anchor \u200b\u805a\u7c7b\u200b\uff08k-means anchor cluster\uff09\uff0c\u200b\u6e90\u81ea\u200b darknet\u3002</p> <pre><code>python tools/analysis_tools/optimize_anchors.py ${CONFIG} --algorithm k-means --input-shape ${INPUT_SHAPE [WIDTH HEIGHT]} --output-dir ${OUTPUT_DIR}\n</code></pre> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b\u5dee\u5206\u200b\u8fdb\u5316\u200b\u7b97\u6cd5\u200b\u4f18\u5316\u200b anchors\u3002</p> <pre><code>python tools/analysis_tools/optimize_anchors.py ${CONFIG} --algorithm differential_evolution --input-shape ${INPUT_SHAPE [WIDTH HEIGHT]} --output-dir ${OUTPUT_DIR}\n</code></pre> <p>\u200b\u6837\u4f8b\u200b\uff1a</p> <pre><code>python tools/analysis_tools/optimize_anchors.py configs/yolo/yolov3_d53_8xb8-320-273e_coco.py --algorithm differential_evolution --input-shape 608 608 --device cuda --output-dir work_dirs\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u770b\u5230\u200b\u5982\u4e0b\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>loading annotations into memory...\nDone (t=9.70s)\ncreating index...\nindex created!\n2021-07-19 19:37:20,951 - mmdet - INFO - Collecting bboxes from annotation...\n[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;] 117266/117266, 15874.5 task/s, elapsed: 7s, ETA:     0s\n\n2021-07-19 19:37:28,753 - mmdet - INFO - Collected 849902 bboxes.\ndifferential_evolution step 1: f(x)= 0.506055\ndifferential_evolution step 2: f(x)= 0.506055\n......\n\ndifferential_evolution step 489: f(x)= 0.386625\n2021-07-19 19:46:40,775 - mmdet - INFO Anchor evolution finish. Average IOU: 0.6133754253387451\n2021-07-19 19:46:40,776 - mmdet - INFO Anchor differential evolution result:[[10, 12], [15, 30], [32, 22], [29, 59], [61, 46], [57, 116], [112, 89], [154, 198], [349, 336]]\n2021-07-19 19:46:40,798 - mmdet - INFO Result saved in work_dirs/anchor_optimize_result.json\n</code></pre>"},{"location":"user_guides/useful_tools/#_21","title":"\u6df7\u6dc6\u200b\u77e9\u9635","text":"<p>\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\u662f\u200b\u5bf9\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200b\u6982\u89c8\u200b\u3002 <code>tools/analysis_tools/confusion_matrix.py</code> \u200b\u53ef\u200b\u5bf9\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u5206\u6790\u200b\uff0c\u200b\u7ed8\u5236\u200b\u6210\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\u8868\u200b\u3002 \u200b\u9996\u5148\u200b\uff0c\u200b\u8fd0\u884c\u200b <code>tools/test.py</code> \u200b\u4fdd\u5b58\u200b <code>.pkl</code> \u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002 \u200b\u4e4b\u540e\u200b\u518d\u200b\u8fd0\u884c\u200b\uff1a</p> <pre><code>python tools/analysis_tools/confusion_matrix.py ${CONFIG}  ${DETECTION_RESULTS}  ${SAVE_DIR} --show\n</code></pre> <p>\u200b\u6700\u540e\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u5982\u56fe\u200b\u7684\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\uff1a</p> <p></p>"},{"location":"user_guides/useful_tools/#coco","title":"COCO \u200b\u5206\u79bb\u200b\u548c\u200b\u906e\u6321\u200b\u5b9e\u4f8b\u200b\u5206\u5272\u200b\u6027\u80fd\u200b\u8bc4\u4f30","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6700\u200b\u5148\u8fdb\u200b\u7684\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u5668\u200b\u6765\u8bf4\u200b\uff0c\u200b\u68c0\u6d4b\u200b\u88ab\u200b\u906e\u6321\u200b\u7684\u200b\u7269\u4f53\u200b\u4ecd\u7136\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6311\u6218\u200b\u3002 \u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u8bba\u6587\u200b A Tri-Layer Plugin to Improve Occluded Detection \u200b\u4e2d\u200b\u63d0\u51fa\u200b\u7684\u200b\u6307\u6807\u200b\u6765\u200b\u8ba1\u7b97\u200b\u5206\u79bb\u200b\u548c\u200b\u906e\u6321\u200b\u76ee\u6807\u200b\u7684\u200b\u53ec\u56de\u200b\u7387\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u6b64\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\uff1a</p>"},{"location":"user_guides/useful_tools/#_22","title":"\u79bb\u7ebf\u200b\u8bc4\u6d4b","text":"<p>\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u811a\u672c\u200b\u5bf9\u200b\u5b58\u50a8\u200b\u540e\u200b\u7684\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u6587\u4ef6\u200b\u8ba1\u7b97\u200b\u6307\u6807\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>tools/test.py</code> \u200b\u811a\u672c\u200b\u5b58\u50a8\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>python tools/test.py ${CONFIG} ${MODEL_PATH} --out results.pkl\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u8fd0\u884c\u200b <code>tools/analysis_tools/coco_occluded_separated_recall.py</code> \u200b\u811a\u672c\u200b\u6765\u200b\u8ba1\u7b97\u200b\u5206\u79bb\u200b\u548c\u200b\u906e\u6321\u200b\u76ee\u6807\u200b\u7684\u200b\u63a9\u7801\u200b\u7684\u200b\u53ec\u56de\u200b\u7387\u200b:</p> <pre><code>python tools/analysis_tools/coco_occluded_separated_recall.py results.pkl --out occluded_separated_recall.json\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>loading annotations into memory...\nDone (t=0.51s)\ncreating index...\nindex created!\nprocessing detection results...\n[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;] 5000/5000, 109.3 task/s, elapsed: 46s, ETA:     0s\ncomputing occluded mask recall...\n[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;] 5550/5550, 780.5 task/s, elapsed: 7s, ETA:     0s\nCOCO occluded mask recall: 58.79%\nCOCO occluded mask success num: 3263\ncomputing separated mask recall...\n[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;] 3522/3522, 778.3 task/s, elapsed: 5s, ETA:     0s\nCOCO separated mask recall: 31.94%\nCOCO separated mask success num: 1125\n\n+-----------+--------+-------------+\n| mask type | recall | num correct |\n+-----------+--------+-------------+\n| occluded  | 58.79% | 3263        |\n| separated | 31.94% | 1125        |\n+-----------+--------+-------------+\nEvaluation results have been saved to occluded_separated_recall.json.\n</code></pre>"},{"location":"user_guides/useful_tools/#_23","title":"\u5728\u7ebf\u200b\u8bc4\u6d4b","text":"<p>\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u7ee7\u627f\u200b\u81ea\u200b <code>CocoMetic</code> \u200b\u7684\u200b <code>CocoOccludedSeparatedMetric</code>\u3002 \u200b\u8981\u200b\u5728\u200b\u8bad\u7ec3\u200b\u671f\u95f4\u200b\u8bc4\u4f30\u200b\u5206\u79bb\u200b\u548c\u200b\u906e\u6321\u200b\u63a9\u7801\u200b\u7684\u200b\u53ec\u56de\u200b\u7387\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5728\u200b\u914d\u7f6e\u200b\u4e2d\u5c06\u200b evaluator \u200b\u7c7b\u578b\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>CocoOccludedSeparatedMetric</code>\uff1a</p> <pre><code>val_evaluator = dict(\n    type='CocoOccludedSeparatedMetric',  # \u200b\u4fee\u6539\u200b\u6b64\u5904\u200b\n    ann_file=data_root + 'annotations/instances_val2017.json',\n    metric=['bbox', 'segm'],\n    format_only=False)\ntest_evaluator = val_evaluator\n</code></pre> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u4f7f\u7528\u200b\u4e86\u200b\u6b64\u200b\u6307\u6807\u200b\uff0c\u200b\u8bf7\u200b\u5f15\u7528\u200b\u8bba\u6587\u200b\uff1a</p> <pre><code>@article{zhan2022triocc,\n    title={A Tri-Layer Plugin to Improve Occluded Detection},\n    author={Zhan, Guanqi and Xie, Weidi and Zisserman, Andrew},\n    journal={British Machine Vision Conference},\n    year={2022}\n}\n</code></pre>"},{"location":"user_guides/visualization/","title":"\u53ef\u89c6\u5316","text":"<p>\u200b\u5728\u200b\u9605\u8bfb\u200b\u672c\u200b\u6559\u7a0b\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5148\u200b\u9605\u8bfb\u200b MMEngine \u200b\u7684\u200b Visualization \u200b\u6587\u6863\u200b\uff0c\u200b\u4ee5\u200b\u5bf9\u200b <code>Visualizer</code> \u200b\u7684\u200b\u5b9a\u4e49\u200b\u548c\u200b\u7528\u6cd5\u200b\u6709\u200b\u4e00\u4e2a\u200b\u521d\u6b65\u200b\u7684\u200b\u4e86\u89e3\u200b\u3002</p> <p>\u200b\u7b80\u800c\u8a00\u4e4b\u200b\uff0c<code>Visualizer</code> \u200b\u5728\u200b MMEngine \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u4ee5\u200b\u6ee1\u8db3\u200b\u65e5\u5e38\u200b\u53ef\u89c6\u5316\u200b\u9700\u6c42\u200b\uff0c\u200b\u5e76\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u4e09\u4e2a\u200b\u4e3b\u8981\u200b\u529f\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u5b9e\u73b0\u200b\u901a\u7528\u200b\u7684\u200b\u7ed8\u56fe\u200b API\uff0c\u200b\u4f8b\u5982\u200b <code>draw_bboxes</code> \u200b\u5b9e\u73b0\u200b\u4e86\u200b\u7ed8\u5236\u200b\u8fb9\u754c\u200b\u6846\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c<code>draw_lines</code> \u200b\u5b9e\u73b0\u200b\u4e86\u200b\u7ed8\u5236\u200b\u7ebf\u6761\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u5c06\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u3001\u200b\u5b66\u4e60\u200b\u7387\u200b\u66f2\u7ebf\u200b\u3001\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u66f2\u7ebf\u200b\u4ee5\u53ca\u200b\u9a8c\u8bc1\u200b\u7cbe\u5ea6\u200b\u66f2\u7ebf\u200b\u5199\u5165\u200b\u5230\u200b\u5404\u79cd\u200b\u540e\u7aef\u200b\u4e2d\u200b\uff0c\u200b\u5305\u62ec\u200b\u672c\u5730\u200b\u78c1\u76d8\u200b\u4ee5\u53ca\u200b\u5e38\u89c1\u200b\u7684\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u8bad\u7ec3\u200b\u65e5\u5fd7\u200b\u5de5\u5177\u200b\uff0c\u200b\u4f8b\u5982\u200b TensorBoard \u200b\u548c\u200b Wandb\u3002</li> <li>\u200b\u652f\u6301\u200b\u5728\u200b\u4ee3\u7801\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\u8c03\u7528\u200b\u4ee5\u200b\u53ef\u89c6\u5316\u200b\u6216\u200b\u8bb0\u5f55\u200b\u6a21\u578b\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u671f\u95f4\u200b\u7684\u200b\u4e2d\u95f4\u72b6\u6001\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7279\u5f81\u200b\u56fe\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u7ed3\u679c\u200b\u3002</li> </ul> <p>\u200b\u57fa\u4e8e\u200b MMEngine \u200b\u7684\u200b <code>Visualizer</code>\uff0cMMDet \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5404\u79cd\u200b\u9884\u200b\u6784\u5efa\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u5de5\u5177\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7b80\u5355\u200b\u5730\u200b\u4fee\u6539\u200b\u4ee5\u4e0b\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\u3002</p> <ul> <li> <p><code>tools/analysis_tools/browse_dataset.py</code> \u200b\u811a\u672c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u89c6\u5316\u200b\u529f\u80fd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6570\u636e\u200b\u7ecf\u8fc7\u200b\u6570\u636e\u200b\u8f6c\u6362\u200b\u540e\u200b\u7ed8\u5236\u200b\u56fe\u50cf\u200b\u548c\u200b\u76f8\u5e94\u200b\u7684\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u5177\u4f53\u200b\u63cf\u8ff0\u200b\u8bf7\u200b\u53c2\u89c1\u200b<code>browse_dataset.py</code>\u3002</p> </li> <li> <p>MMEngine\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>LoggerHook</code>\uff0c\u200b\u4f7f\u7528\u200b<code>Visualizer</code>\u200b\u5c06\u200b\u5b66\u4e60\u200b\u7387\u200b\u3001\u200b\u635f\u5931\u200b\u548c\u200b\u8bc4\u4f30\u200b\u7ed3\u679c\u200b\u5199\u5165\u200b\u7531\u200b<code>Visualizer</code>\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b<code>Visualizer</code>\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4fee\u6539\u200b\u4e3a\u200b<code>TensorBoardVISBackend</code>\u200b\u6216\u200b<code>WandbVISBackend</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u200b\u5230\u200b\u5e38\u7528\u200b\u7684\u200b\u8bad\u7ec3\u200b\u65e5\u5fd7\u200b\u5de5\u5177\u200b\uff0c\u200b\u5982\u200b<code>TensorBoard</code>\u200b\u6216\u200b<code>WandB</code>\uff0c\u200b\u4ece\u800c\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u53ef\u89c6\u5316\u200b\u5de5\u5177\u200b\u6765\u200b\u5206\u6790\u200b\u548c\u200b\u76d1\u63a7\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u3002</p> </li> <li> <p>\u200b\u5728\u200bMMDet\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>VisualizerHook</code>\uff0c\u200b\u5b83\u200b\u4f7f\u7528\u200b<code>Visualizer</code>\u200b\u5c06\u200b\u9a8c\u8bc1\u200b\u6216\u200b\u9884\u6d4b\u200b\u9636\u6bb5\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u53ef\u89c6\u5316\u200b\u6216\u200b\u5b58\u50a8\u200b\u5230\u200b\u7531\u200b<code>Visualizer</code>\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b<code>Visualizer</code>\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4fee\u6539\u200b\u4e3a\u200b<code>TensorBoardVISBackend</code>\u200b\u6216\u200b<code>WandbVISBackend</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u9884\u6d4b\u200b\u56fe\u50cf\u200b\u5b58\u50a8\u200b\u5230\u200b<code>TensorBoard</code>\u200b\u6216\u200b<code>Wandb</code>\u200b\u4e2d\u200b\u3002</p> </li> </ul>"},{"location":"user_guides/visualization/#_2","title":"\u914d\u7f6e","text":"<p>\u200b\u7531\u4e8e\u200b\u4f7f\u7528\u200b\u4e86\u200b\u6ce8\u518c\u200b\u673a\u5236\u200b\uff0c\u200b\u5728\u200bMMDet\u200b\u4e2d\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u6765\u200b\u8bbe\u7f6e\u200b<code>Visualizer</code>\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002\u200b\u901a\u5e38\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f1a\u200b\u5728\u200b<code>configs/_base_/default_runtime.py</code>\u200b\u4e2d\u4e3a\u200b\u53ef\u89c6\u5316\u200b\u5668\u200b\u5b9a\u4e49\u200b\u9ed8\u8ba4\u200b\u914d\u7f6e\u200b\uff0c\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u8bf7\u200b\u53c2\u89c1\u200b\u914d\u7f6e\u200b\u6559\u7a0b\u200b\u3002</p> <pre><code>vis_backends = [dict(type='LocalVisBackend')]\nvisualizer = dict(\n    type='DetLocalVisualizer',\n    vis_backends=vis_backends,\n    name='visualizer')\n</code></pre> <p>\u200b\u57fa\u4e8e\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b<code>Visualizer</code>\u200b\u7684\u200b\u914d\u7f6e\u200b\u7531\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b\uff0c\u200b\u5373\u200b<code>Visualizer</code>\u200b\u7c7b\u578b\u200b\u548c\u200b\u5176\u200b\u4f7f\u7528\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b<code>vis_backends</code>\u3002</p> <ul> <li>\u200b\u7528\u6237\u200b\u53ef\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b<code>DetLocalVisualizer</code>\u200b\u6765\u200b\u53ef\u89c6\u5316\u200b\u652f\u6301\u200b\u4efb\u52a1\u200b\u7684\u200b\u6807\u7b7e\u200b\u6216\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002</li> <li>MMDet\u200b\u9ed8\u8ba4\u200b\u5c06\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b<code>vis_backend</code>\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u672c\u5730\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b<code>LocalVisBackend</code>\uff0c\u200b\u5c06\u200b\u6240\u6709\u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\u548c\u200b\u5176\u4ed6\u200b\u8bad\u7ec3\u200b\u4fe1\u606f\u200b\u4fdd\u5b58\u200b\u5728\u200b\u672c\u5730\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u3002</li> </ul>"},{"location":"user_guides/visualization/#_3","title":"\u5b58\u50a8","text":"<p>MMDet\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b\u672c\u5730\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b<code>LocalVisBackend</code>\uff0c<code>VisualizerHook</code>\u200b\u548c\u200b<code>LoggerHook</code>\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u7684\u200b\u6a21\u578b\u200b\u635f\u5931\u200b\u3001\u200b\u5b66\u4e60\u200b\u7387\u200b\u3001\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u7cbe\u5ea6\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5305\u62ec\u200b\u635f\u5931\u200b\u3001\u200b\u5b66\u4e60\u200b\u7387\u200b\u3001\u200b\u8bc4\u4f30\u200b\u7cbe\u5ea6\u200b\u5c06\u200b\u9ed8\u8ba4\u200b\u4fdd\u5b58\u200b\u5230\u200b<code>{work_dir}/{config_name}/{time}/{vis_data}</code>\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u3002\u200b\u6b64\u5916\u200b\uff0cMMDet\u200b\u8fd8\u200b\u652f\u6301\u200b\u5176\u4ed6\u200b\u5e38\u89c1\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>TensorboardVisBackend</code>\u200b\u548c\u200b<code>WandbVisBackend</code>\uff0c\u200b\u60a8\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u66f4\u6539\u200b<code>vis_backends</code>\u200b\u7c7b\u578b\u200b\u4e3a\u200b\u76f8\u5e94\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u540e\u200b\u7aef\u200b\u5373\u53ef\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u63d2\u5165\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u5757\u200b\u5373\u53ef\u200b\u5c06\u200b\u6570\u636e\u200b\u5b58\u50a8\u200b\u5230\u200b<code>TensorBoard</code>\u200b\u548c\u200b<code>Wandb</code>\u200b\u4e2d\u200b\u3002</p> <pre><code># https://mmengine.readthedocs.io/en/latest/api/visualization.html\n_base_.visualizer.vis_backends = [\n    dict(type='LocalVisBackend'), #\n    dict(type='TensorboardVisBackend'),\n    dict(type='WandbVisBackend'),]\n</code></pre>"},{"location":"user_guides/visualization/#_4","title":"\u7ed8\u56fe","text":""},{"location":"user_guides/visualization/#_5","title":"\u7ed8\u5236\u200b\u9884\u6d4b\u200b\u7ed3\u679c","text":"<p>MMDet\u200b\u4e3b\u8981\u200b\u4f7f\u7528\u200b<code>DetVisualizationHook</code>\u200b\u6765\u200b\u7ed8\u5236\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b<code>DetVisualizationHook</code>\u200b\u662f\u200b\u5173\u95ed\u200b\u7684\u200b\uff0c\u200b\u5176\u200b\u9ed8\u8ba4\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>visualization=dict( #\u200b\u7528\u6237\u200b\u53ef\u89c6\u5316\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\n    type='DetVisualizationHook',\n    draw=False,\n    interval=1,\n    show=False)\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u8868\u683c\u200b\u5c55\u793a\u200b\u4e86\u200b<code>DetVisualizationHook</code>\u200b\u652f\u6301\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p> \u200b\u53c2\u6570\u200b \u200b\u63cf\u8ff0\u200b draw DetVisualizationHook\u200b\u901a\u8fc7\u200benable\u200b\u53c2\u6570\u200b\u6253\u5f00\u200b\u548c\u200b\u5173\u95ed\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u72b6\u6001\u200b\u4e3a\u200b\u5173\u95ed\u200b\u3002 interval \u200b\u63a7\u5236\u200b\u5728\u200bDetVisualizationHook\u200b\u542f\u7528\u200b\u65f6\u200b\u5b58\u50a8\u200b\u6216\u200b\u663e\u793a\u200b\u9a8c\u8bc1\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u7684\u200b\u95f4\u9694\u200b\uff0c\u200b\u5355\u4f4d\u200b\u4e3a\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u3002 show \u200b\u63a7\u5236\u200b\u662f\u5426\u200b\u53ef\u89c6\u5316\u200b\u9a8c\u8bc1\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002 <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u671f\u95f4\u200b\u542f\u7528\u200b <code>DetVisualizationHook</code> \u200b\u76f8\u5173\u200b\u529f\u80fd\u200b\u548c\u200b\u914d\u7f6e\u200b\uff0c\u200b\u60a8\u200b\u53ea\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u4ee5\u200b <code>configs/rtmdet/rtmdet_tiny_8xb32-300e_coco.py</code> \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u540c\u65f6\u200b\u7ed8\u5236\u200b\u6ce8\u91ca\u200b\u548c\u200b\u9884\u6d4b\u200b\uff0c\u200b\u5e76\u200b\u663e\u793a\u200b\u56fe\u50cf\u200b\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>visualization = _base_.default_hooks.visualization\nvisualization.update(dict(draw=True, show=True))\n</code></pre> <p><code>test.py</code>\u200b\u7a0b\u5e8f\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>--show</code>\u200b\u548c\u200b<code>--show-dir</code>\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ef\u89c6\u5316\u200b\u6ce8\u91ca\u200b\u548c\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u4ece\u800c\u200b\u8fdb\u4e00\u6b65\u200b\u7b80\u5316\u200b\u4e86\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u3002</p> <pre><code># \u200b\u5c55\u793a\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\npython tools/test.py configs/rtmdet/rtmdet_tiny_8xb32-300e_coco.py https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth --show\n\n# \u200b\u6307\u5b9a\u200b\u5b58\u50a8\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u7684\u200b\u4f4d\u7f6e\u200b\npython tools/test.py configs/rtmdet/rtmdet_tiny_8xb32-300e_coco.py https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth --show-dir imgs/\n</code></pre>"}]}